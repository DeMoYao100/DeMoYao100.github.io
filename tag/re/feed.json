{
    "version": "https://jsonfeed.org/version/1",
    "title": "Moyao の小屋 • All posts by \"re\" tag",
    "description": "Write down something interesting I met\nfeel free to mail me if you have something wanted to talk about\nmail: &lt;moyaoxue@outlook.com&gt;\n",
    "home_page_url": "https://demoyao100.github.io",
    "items": [
        {
            "id": "https://demoyao100.github.io/2023/09/25/vsCTF/",
            "url": "https://demoyao100.github.io/2023/09/25/vsCTF/",
            "title": "vsCTF2023",
            "date_published": "2023-09-25T02:53:31.000Z",
            "content_html": "<h6 id=\"preface-快结束了才知道反正么挺快做了三个题虽然讲实话很多东西真没看懂但是逆向么出了就行\"><a class=\"markdownIt-Anchor\" href=\"#preface-快结束了才知道反正么挺快做了三个题虽然讲实话很多东西真没看懂但是逆向么出了就行\">#</a> PREFACE: 快结束了才知道，反正么挺快做了三个题，虽然讲实话很多东西真没看懂，但是逆向么出了就行…</h6>\n<h6 id=\"后面的三个题解好少先看别的地方的题去了\"><a class=\"markdownIt-Anchor\" href=\"#后面的三个题解好少先看别的地方的题去了\">#</a> 后面的三个题解好少… 先看别的地方的题去了…</h6>\n<h6 id=\"ps-这题怎么越做越多\"><a class=\"markdownIt-Anchor\" href=\"#ps-这题怎么越做越多\">#</a> ps. 这题怎么越做越多…</h6>\n<span id=\"more\"></span>\n<h4 id=\"x0rr3al\"><a class=\"markdownIt-Anchor\" href=\"#x0rr3al\">#</a> x0rr3al</h4>\n<h6 id=\"早知道c语言有一个main调用main的操作似乎是为数不多c不支持的c操作但是这里好像第一次见了\"><a class=\"markdownIt-Anchor\" href=\"#早知道c语言有一个main调用main的操作似乎是为数不多c不支持的c操作但是这里好像第一次见了\">#</a> 早知道 c 语言有一个 main 调用 main 的操作，似乎是为数不多 c++ 不支持的 c 操作？但是这里好像第一次见了？</h6>\n<p>存在反调，可以下掉反调看 check，或者直接看逻辑</p>\n<p><code>sub_5560774764F7</code>  ： 一个简单异或 <code>0x12</code></p>\n<p><code>sub_55607747650A</code> ： 递归异或一个初始化好的表</p>\n<p>单字节加密 flag，全是异或，这里不需要提取，直接爆破即可：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;=&gt;8566#&gt;8=).(;9?6.(;9?&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># for i in a:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(chr(ord(i) ^ 0x5A),end=&#x27;&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># print()</span></span><br><span class=\"line\">b = <span class=\"string\">f&quot;af&amp;`f2`!d!`a#|u2fz#&#x27;2qz&amp;~#2j\\&quot;``!s~333&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># for i in b:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(chr(ord(i) ^ 0x12),end=&#x27;&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dest = <span class=\"string\">&#x27;s3cR3ts3vsctfvsctiamfrnow0kkeyw0wkeyw&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">lld = [ <span class=\"number\">0x7E</span>, <span class=\"number\">0x7B</span>, <span class=\"number\">0x6B</span>, <span class=\"number\">0x7C</span>, <span class=\"number\">0x6E</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0x7F</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0x3C</span>, <span class=\"number\">0x63</span>,</span><br><span class=\"line\">  <span class=\"number\">0x57</span>, <span class=\"number\">0x3C</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x7C</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0x6C</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0x6A</span>, <span class=\"number\">0x7D</span>,</span><br><span class=\"line\">  <span class=\"number\">0x6F</span>, <span class=\"number\">0x6F</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0x7A</span>, <span class=\"number\">0x7B</span>, <span class=\"number\">0x57</span>,  <span class=\"number\">0x3C</span>, <span class=\"number\">0x7A</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0x3C</span>, <span class=\"number\">0x7C</span>,</span><br><span class=\"line\">  <span class=\"number\">0x6B</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0x6E</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x7A</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0x7C</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x3B</span>,</span><br><span class=\"line\">  <span class=\"number\">0x57</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0x3F</span>, <span class=\"number\">0x75</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(lld))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for i in range(len(lld)):</span></span><br><span class=\"line\"><span class=\"comment\">#     print(chr(lld[i] ^ 0x12 ^ ord(dest[11]) ^ ord(dest[0]) ^ ord(dest[22]) ^ ord(dest[33]) ^ ord(dest[44])),end=&#x27;&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0xff</span> + <span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> lld:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(i ^ j),end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vsctf&#123;w34k_4nt1_d3bugg3rs_4r3_n0_m4tch_f0r_th3_31337&#125;</span></span><br></pre></td></tr></table></figure>\n<h4 id><a class=\"markdownIt-Anchor\" href=\"#\">#</a> </h4>\n<h4 id=\"challange\"><a class=\"markdownIt-Anchor\" href=\"#challange\">#</a> challange</h4>\n<p>用比较复杂的 stl（主要是 <code>vector</code>  和 <code>string</code> ）进行数据操作，做了个类似 RSA 的 <code>乘方+取模</code> 然后加点异或生成了一个 vector 用于加密，但是加密逻辑只有异或，flag 是 50 位的</p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230925110429523.png\" alt=\"image-20230925110429523\"></p>\n<p>这里不需要硬逆逻辑，下掉 <code>ptrace</code>  反调（这里原本有 exit (0); 已经 nop 掉了）</p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230925110532965.png\" alt=\"image-20230925110532965\"></p>\n<p>在 check 的地方把检查逻辑改掉（改成如果不相等则退出）</p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230925110635140.png\" alt=\"image-20230925110635140\"></p>\n<p>提取异或的 key 数据</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(get_reg_value(<span class=\"string\">&quot;ebx&quot;</span>)) , end = <span class=\"string\">&#x27;, &#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>直接梭就行（这里输入的是全 1 的 flag，flag 也刚好没有 1，可以多用几个试几次）：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enc = [<span class=\"number\">149</span>, <span class=\"number\">148</span>, <span class=\"number\">5</span>, <span class=\"number\">88</span>, <span class=\"number\">128</span>, <span class=\"number\">22</span>, <span class=\"number\">47</span>, <span class=\"number\">70</span>, <span class=\"number\">184</span>, <span class=\"number\">117</span>, <span class=\"number\">311</span>, <span class=\"number\">57</span>, <span class=\"number\">145</span>, <span class=\"number\">224</span>, <span class=\"number\">32</span>, <span class=\"number\">112</span>, <span class=\"number\">77</span>, <span class=\"number\">185</span>, <span class=\"number\">25</span>, <span class=\"number\">59</span>, <span class=\"number\">79</span>, <span class=\"number\">4</span>, <span class=\"number\">31</span>, <span class=\"number\">184</span>, <span class=\"number\">156</span>, <span class=\"number\">79</span>, <span class=\"number\">241</span>, <span class=\"number\">179</span>, <span class=\"number\">162</span>, <span class=\"number\">68</span>, <span class=\"number\">119</span>, <span class=\"number\">244</span>, <span class=\"number\">92</span>, <span class=\"number\">109</span>, <span class=\"number\">29</span>, <span class=\"number\">47</span>, <span class=\"number\">123</span>, <span class=\"number\">154</span>, <span class=\"number\">33</span>, <span class=\"number\">224</span>, <span class=\"number\">223</span>, <span class=\"number\">125</span>, <span class=\"number\">159</span>, <span class=\"number\">194</span>, <span class=\"number\">116</span>, <span class=\"number\">63</span>, <span class=\"number\">4</span>, <span class=\"number\">246</span>, <span class=\"number\">199</span>, <span class=\"number\">250</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"comment\"># for i in range(len(enc)):</span></span><br><span class=\"line\"><span class=\"comment\">#     print(chr(enc[i] ^ i),end=&#x27;&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;11111111111111111111111111111111111111111111111111&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">b = [<span class=\"number\">0xd2</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x7</span>, <span class=\"number\">0x131</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xd</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x9</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xe</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0xf6</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0x1</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0x8</span>, <span class=\"number\">0x3</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x1</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0x4</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xb6</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(0xd2 ^ ord(&#x27;1&#x27;))</span></span><br><span class=\"line\"><span class=\"comment\"># print(227 ^ 149)</span></span><br><span class=\"line\"><span class=\"comment\"># print(chr(227 ^ 149))</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(b)):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(enc[i] ^ b[i] ^ <span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;1&#x27;</span>)),end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vsctf&#123;fUnC710N4L_0p_w_Competitive_Prog_TEMPLATES?&#125;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"teenage-wasm\"><a class=\"markdownIt-Anchor\" href=\"#teenage-wasm\">#</a> teenage-wasm</h4>\n<h6 id=\"说实话第一次做wasm\"><a class=\"markdownIt-Anchor\" href=\"#说实话第一次做wasm\">#</a> 说实话第一次做 wasm…</h6>\n<p>插件： <a href=\"https://github.com/nneonneo/ghidra-wasm-plugin/releases/tag/v2.1.0\">Release Version 2.1.0 · nneonneo/ghidra-wasm-plugin (github.com)</a></p>\n<p>选择的是 <code>Ghidra + wasm</code>  插件的反编译方案，还是比较清晰的</p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230925111041089.png\" alt=\"image-20230925111041089\"></p>\n<p>可以拿到一个 js 代码，和一个 wasm 代码，这里找不到 button 的处理 handle，纠结了很久，然后友 web 手说可能是 wasm 里面注册了监听，orz 真该学学 web 了…</p>\n<p>js 代码中大概是  <code>wasm-bindgen</code>  编译的与 wasm 交互的产物，只负责中间件，将字符串共享给 wasm，并接收共享字符串</p>\n<p>可以直接来看 wasm，代码很多，rust 编译的也相对抽象，经过前面说的可能是监听的 button 可以翻翻代码，然后发现了这个</p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230925111803725.png\" alt=\"image-20230925111803725\"></p>\n<p><code>flush_messages</code></p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230925111851725.png\" alt=\"image-20230925111851725\"></p>\n<p>加密逻辑也很显眼…</p>\n<p>虽然其实还并不是狠看懂这个怎么传回去的，但是提取数据异或一下真的就是 flag 了…（他真的很喜欢异或）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a_list = [<span class=\"string\">&quot;7a&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;5158577471345867&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;4a77746f79675a70&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;6a4d5a776d716272&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;46625f373333316d&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;73617765766f6c69&quot;</span>,</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">b_list = [<span class=\"string\">&quot;07&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;1f16203f4345352d&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;123a201a2e170515&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;072229441a103d06&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;760c00445a6c5c1e&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;47160c03020c1f1f&quot;</span>,</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">6</span>):</span><br><span class=\"line\">    a = [<span class=\"built_in\">int</span>(a_list[i][j: j + <span class=\"number\">2</span>], <span class=\"number\">16</span>) <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a_list[i]), <span class=\"number\">2</span>)]</span><br><span class=\"line\">    b = [<span class=\"built_in\">int</span>(b_list[i][j: j + <span class=\"number\">2</span>], <span class=\"number\">16</span>) <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(b_list[i]), <span class=\"number\">2</span>)]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(a[j] ^ b[j])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag[::-<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vsctf&#123;w4sm_is_n0t_aw3some_pWuTMXJmq2KwNN&#125;</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"9-26-感觉本来wasm就见得不多会做的更是少还是不要草草结束了这个题把他给逆完整一点\"><a class=\"markdownIt-Anchor\" href=\"#9-26-感觉本来wasm就见得不多会做的更是少还是不要草草结束了这个题把他给逆完整一点\">#</a> 9-26: 感觉本来 wasm 就见得不多，会做的更是少，还是不要草草结束了这个题，把他给逆完整一点</h6>\n<p>直觉上 <code>flesh_message</code>  既然找不到 <code>x-ref</code> ，应该还是有更多处理逻辑的，首先是这里的比对</p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230926204837431.png\" alt=\"image-20230926204837431\"></p>\n<p>local_18 拿到了 param2（即用户的一个输入），与 <code>admin</code>  字符串进行了比对，如果不是 admin 会返回 Login fail 的提示</p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230926205045674.png\" alt=\"image-20230926205045674\"></p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230926205146253.png\" alt=\"image-20230926205146253\"></p>\n<h6 id=\"可以右键更换数据类型\"><a class=\"markdownIt-Anchor\" href=\"#可以右键更换数据类型\">#</a> （可以右键更换数据类型）</h6>\n<p>这个地方感觉有机会，看看下面，找到了类似的结构：</p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230926205948905.png\" alt=\"image-20230926205948905\"></p>\n<p>但是这里没那么明显，先试试我怎么出的：</p>\n<p>这里除去 <code>admin</code>  已经没有明显的全局变量了，能包含有字符信息的内容不多，然后突然意识到这里全都是可见字符：<img loading=\"lazy\" data-src=\"vsCTF/image-20230926210857339.png\" alt=\"image-20230926210857339\"></p>\n<p>那其实很蹊跷了，打印一下看看</p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230926210952849.png\" alt=\"image-20230926210952849\"></p>\n<p>感觉就很明显了，有明显的英文语法痕迹（？）</p>\n<p>逆转过来：</p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230926211040498.png\" alt=\"image-20230926211040498\"></p>\n<p>这个就是密码…</p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230926211059432.png\" alt=\"image-20230926211059432\"></p>\n<p>回来看看逻辑，到底放在哪里</p>\n<p>前面没注意，但是这里有个很明显的把参数提取成 utf-8 的操作：</p>\n<p><img loading=\"lazy\" data-src=\"vsCTF/image-20230926211238954.png\" alt=\"image-20230926211238954\"></p>\n<p>然后存储 <code>local_18</code>  -&gt;  <code>local_68</code>  在下面进行比较</p>\n<p>还是对这些符号不够敏感…</p>\n",
            "tags": [
                "re"
            ]
        },
        {
            "id": "https://demoyao100.github.io/2023/09/24/ASIS-CTF2023/",
            "url": "https://demoyao100.github.io/2023/09/24/ASIS-CTF2023/",
            "title": "ASIS_CTF2023",
            "date_published": "2023-09-24T00:44:01.000Z",
            "content_html": "<h6 id=\"preface赛中做了算三个吧sid有点小变态爆出来了但是没找到flag经别的师傅点醒才知道没有格式反正么只是来看看题而已作业好多还要上学\"><a class=\"markdownIt-Anchor\" href=\"#preface赛中做了算三个吧sid有点小变态爆出来了但是没找到flag经别的师傅点醒才知道没有格式反正么只是来看看题而已作业好多还要上学\">#</a> PREFACE：赛中做了算三个吧，sid 有点小变态，爆出来了，但是没找到 flag，经别的师傅点醒才知道没有格式，反正么只是来看看题而已，作业好多还要上学…</h6>\n<h6 id=\"9-25-小补一个题解数毕竟比sid多虽然说题越做越多能做的题确实越来越少了高手题几乎完全没法碰\"><a class=\"markdownIt-Anchor\" href=\"#9-25-小补一个题解数毕竟比sid多虽然说题越做越多能做的题确实越来越少了高手题几乎完全没法碰\">#</a> 9-25: 小补一个题，解数毕竟比 sid 多，虽然说题越做越多，能做的题确实越来越少了，高手题几乎完全没法碰…</h6>\n<span id=\"more\"></span>\n<h3 id=\"grid\"><a class=\"markdownIt-Anchor\" href=\"#grid\">#</a> grid</h3>\n<p>warmup 题，加密逻辑很简单，就是对着 box 反映射一下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">box = [<span class=\"number\">1</span>, <span class=\"number\">118</span>,   <span class=\"number\">2</span>,  <span class=\"number\">44</span>,   <span class=\"number\">3</span>,  <span class=\"number\">59</span>,   <span class=\"number\">4</span>,  <span class=\"number\">69</span>,   <span class=\"number\">5</span>, <span class=\"number\">189</span>,</span><br><span class=\"line\">    <span class=\"number\">6</span>, <span class=\"number\">242</span>,   <span class=\"number\">7</span>, <span class=\"number\">146</span>,   <span class=\"number\">8</span>,  <span class=\"number\">93</span>,   <span class=\"number\">9</span>, <span class=\"number\">145</span>,  <span class=\"number\">10</span>,  <span class=\"number\">45</span>,</span><br><span class=\"line\">   <span class=\"number\">11</span>,  <span class=\"number\">46</span>,  <span class=\"number\">12</span>, <span class=\"number\">127</span>,  <span class=\"number\">13</span>, <span class=\"number\">233</span>,  <span class=\"number\">14</span>,  <span class=\"number\">60</span>,  <span class=\"number\">15</span>, <span class=\"number\">120</span>,</span><br><span class=\"line\">   <span class=\"number\">16</span>, <span class=\"number\">159</span>,  <span class=\"number\">17</span>, <span class=\"number\">138</span>,  <span class=\"number\">18</span>, <span class=\"number\">165</span>,  <span class=\"number\">19</span>, <span class=\"number\">113</span>,  <span class=\"number\">20</span>, <span class=\"number\">148</span>,</span><br><span class=\"line\">   <span class=\"number\">21</span>,  <span class=\"number\">63</span>,  <span class=\"number\">22</span>, <span class=\"number\">167</span>,  <span class=\"number\">23</span>, <span class=\"number\">219</span>,  <span class=\"number\">24</span>, <span class=\"number\">232</span>,  <span class=\"number\">25</span>, <span class=\"number\">246</span>,</span><br><span class=\"line\">   <span class=\"number\">26</span>, <span class=\"number\">164</span>,  <span class=\"number\">27</span>, <span class=\"number\">153</span>,  <span class=\"number\">28</span>, <span class=\"number\">230</span>,  <span class=\"number\">29</span>,  <span class=\"number\">34</span>,  <span class=\"number\">30</span>,  <span class=\"number\">64</span>,</span><br><span class=\"line\">   <span class=\"number\">31</span>, <span class=\"number\">255</span>,  <span class=\"number\">32</span>, <span class=\"number\">220</span>,  <span class=\"number\">33</span>, <span class=\"number\">238</span>,  <span class=\"number\">34</span>, <span class=\"number\">234</span>,  <span class=\"number\">35</span>,  <span class=\"number\">36</span>,</span><br><span class=\"line\">   <span class=\"number\">36</span>, <span class=\"number\">109</span>,  <span class=\"number\">37</span>,  <span class=\"number\">88</span>,  <span class=\"number\">38</span>,   <span class=\"number\">2</span>,  <span class=\"number\">39</span>, <span class=\"number\">162</span>,  <span class=\"number\">40</span>, <span class=\"number\">221</span>,</span><br><span class=\"line\">   <span class=\"number\">41</span>, <span class=\"number\">134</span>,  <span class=\"number\">42</span>, <span class=\"number\">158</span>,  <span class=\"number\">43</span>, <span class=\"number\">161</span>,  <span class=\"number\">44</span>, <span class=\"number\">225</span>,  <span class=\"number\">45</span>,  <span class=\"number\">25</span>,</span><br><span class=\"line\">   <span class=\"number\">46</span>, <span class=\"number\">224</span>,  <span class=\"number\">47</span>, <span class=\"number\">100</span>,  <span class=\"number\">48</span>, <span class=\"number\">106</span>,  <span class=\"number\">49</span>, <span class=\"number\">179</span>,  <span class=\"number\">50</span>,  <span class=\"number\">94</span>,</span><br><span class=\"line\">   <span class=\"number\">51</span>,  <span class=\"number\">43</span>,  <span class=\"number\">52</span>, <span class=\"number\">187</span>,  <span class=\"number\">53</span>,  <span class=\"number\">56</span>,  <span class=\"number\">54</span>,  <span class=\"number\">79</span>,  <span class=\"number\">55</span>,  <span class=\"number\">48</span>,</span><br><span class=\"line\">   <span class=\"number\">56</span>,  <span class=\"number\">83</span>,  <span class=\"number\">57</span>,  <span class=\"number\">68</span>,  <span class=\"number\">58</span>, <span class=\"number\">117</span>,  <span class=\"number\">59</span>, <span class=\"number\">101</span>,  <span class=\"number\">60</span>, <span class=\"number\">249</span>,</span><br><span class=\"line\">   <span class=\"number\">61</span>,  <span class=\"number\">75</span>,  <span class=\"number\">62</span>, <span class=\"number\">193</span>,  <span class=\"number\">63</span>,  <span class=\"number\">35</span>,  <span class=\"number\">64</span>, <span class=\"number\">178</span>,  <span class=\"number\">65</span>, <span class=\"number\">190</span>,</span><br><span class=\"line\">   <span class=\"number\">66</span>, <span class=\"number\">213</span>,  <span class=\"number\">67</span>,   <span class=\"number\">5</span>,  <span class=\"number\">68</span>, <span class=\"number\">128</span>,  <span class=\"number\">69</span>,  <span class=\"number\">97</span>,  <span class=\"number\">70</span>, <span class=\"number\">254</span>,</span><br><span class=\"line\">   <span class=\"number\">71</span>,  <span class=\"number\">96</span>,  <span class=\"number\">72</span>, <span class=\"number\">227</span>,  <span class=\"number\">73</span>,  <span class=\"number\">50</span>,  <span class=\"number\">74</span>, <span class=\"number\">133</span>,  <span class=\"number\">75</span>, <span class=\"number\">244</span>,</span><br><span class=\"line\">   <span class=\"number\">76</span>, <span class=\"number\">207</span>,  <span class=\"number\">77</span>,  <span class=\"number\">90</span>,  <span class=\"number\">78</span>,  <span class=\"number\">58</span>,  <span class=\"number\">79</span>,  <span class=\"number\">67</span>,  <span class=\"number\">80</span>, <span class=\"number\">214</span>,</span><br><span class=\"line\">   <span class=\"number\">81</span>, <span class=\"number\">111</span>,  <span class=\"number\">82</span>,  <span class=\"number\">84</span>,  <span class=\"number\">83</span>, <span class=\"number\">185</span>,  <span class=\"number\">84</span>, <span class=\"number\">204</span>,  <span class=\"number\">85</span>, <span class=\"number\">245</span>,</span><br><span class=\"line\">   <span class=\"number\">86</span>, <span class=\"number\">181</span>,  <span class=\"number\">87</span>,  <span class=\"number\">89</span>,  <span class=\"number\">88</span>,  <span class=\"number\">22</span>,  <span class=\"number\">89</span>, <span class=\"number\">231</span>,  <span class=\"number\">90</span>, <span class=\"number\">169</span>,</span><br><span class=\"line\">   <span class=\"number\">91</span>, <span class=\"number\">174</span>,  <span class=\"number\">92</span>, <span class=\"number\">241</span>,  <span class=\"number\">93</span>,   <span class=\"number\">8</span>,  <span class=\"number\">94</span>,  <span class=\"number\">62</span>,  <span class=\"number\">95</span>, <span class=\"number\">125</span>,</span><br><span class=\"line\">   <span class=\"number\">96</span>, <span class=\"number\">228</span>,  <span class=\"number\">97</span>, <span class=\"number\">222</span>,  <span class=\"number\">98</span>, <span class=\"number\">198</span>,  <span class=\"number\">99</span>,  <span class=\"number\">28</span>, <span class=\"number\">100</span>, <span class=\"number\">235</span>,</span><br><span class=\"line\">  <span class=\"number\">101</span>, <span class=\"number\">182</span>, <span class=\"number\">102</span>, <span class=\"number\">151</span>, <span class=\"number\">103</span>,  <span class=\"number\">21</span>, <span class=\"number\">104</span>,  <span class=\"number\">81</span>, <span class=\"number\">105</span>, <span class=\"number\">124</span>,</span><br><span class=\"line\">  <span class=\"number\">106</span>, <span class=\"number\">173</span>, <span class=\"number\">107</span>, <span class=\"number\">205</span>, <span class=\"number\">108</span>,  <span class=\"number\">39</span>, <span class=\"number\">109</span>,  <span class=\"number\">10</span>, <span class=\"number\">110</span>,  <span class=\"number\">53</span>,</span><br><span class=\"line\">  <span class=\"number\">111</span>,  <span class=\"number\">95</span>, <span class=\"number\">112</span>, <span class=\"number\">212</span>, <span class=\"number\">113</span>,  <span class=\"number\">19</span>, <span class=\"number\">114</span>, <span class=\"number\">160</span>, <span class=\"number\">115</span>,  <span class=\"number\">20</span>,</span><br><span class=\"line\">  <span class=\"number\">116</span>, <span class=\"number\">103</span>, <span class=\"number\">117</span>, <span class=\"number\">122</span>, <span class=\"number\">118</span>, <span class=\"number\">140</span>, <span class=\"number\">119</span>,  <span class=\"number\">74</span>, <span class=\"number\">120</span>, <span class=\"number\">114</span>,</span><br><span class=\"line\">  <span class=\"number\">121</span>,  <span class=\"number\">47</span>, <span class=\"number\">122</span>, <span class=\"number\">218</span>, <span class=\"number\">123</span>, <span class=\"number\">239</span>, <span class=\"number\">124</span>,  <span class=\"number\">73</span>, <span class=\"number\">125</span>,  <span class=\"number\">14</span>,</span><br><span class=\"line\">  <span class=\"number\">126</span>, <span class=\"number\">211</span>, <span class=\"number\">127</span>, <span class=\"number\">250</span>, <span class=\"number\">128</span>,  <span class=\"number\">61</span>, <span class=\"number\">129</span>, <span class=\"number\">192</span>, <span class=\"number\">130</span>,  <span class=\"number\">51</span>,</span><br><span class=\"line\">  <span class=\"number\">131</span>, <span class=\"number\">102</span>, <span class=\"number\">132</span>, <span class=\"number\">170</span>, <span class=\"number\">133</span>, <span class=\"number\">206</span>, <span class=\"number\">134</span>, <span class=\"number\">252</span>, <span class=\"number\">135</span>, <span class=\"number\">176</span>,</span><br><span class=\"line\">  <span class=\"number\">136</span>,  <span class=\"number\">98</span>, <span class=\"number\">137</span>, <span class=\"number\">147</span>, <span class=\"number\">138</span>,  <span class=\"number\">65</span>, <span class=\"number\">139</span>, <span class=\"number\">215</span>, <span class=\"number\">140</span>,  <span class=\"number\">72</span>,</span><br><span class=\"line\">  <span class=\"number\">141</span>, <span class=\"number\">191</span>, <span class=\"number\">142</span>, <span class=\"number\">202</span>, <span class=\"number\">143</span>, <span class=\"number\">200</span>, <span class=\"number\">144</span>,   <span class=\"number\">3</span>, <span class=\"number\">145</span>, <span class=\"number\">126</span>,</span><br><span class=\"line\">  <span class=\"number\">146</span>,  <span class=\"number\">15</span>, <span class=\"number\">147</span>, <span class=\"number\">155</span>, <span class=\"number\">148</span>, <span class=\"number\">203</span>, <span class=\"number\">149</span>,  <span class=\"number\">86</span>, <span class=\"number\">150</span>, <span class=\"number\">216</span>,</span><br><span class=\"line\">  <span class=\"number\">151</span>, <span class=\"number\">121</span>, <span class=\"number\">152</span>,  <span class=\"number\">82</span>, <span class=\"number\">153</span>, <span class=\"number\">163</span>, <span class=\"number\">154</span>, <span class=\"number\">171</span>, <span class=\"number\">155</span>, <span class=\"number\">104</span>,</span><br><span class=\"line\">  <span class=\"number\">156</span>,  <span class=\"number\">66</span>, <span class=\"number\">157</span>, <span class=\"number\">237</span>, <span class=\"number\">158</span>, <span class=\"number\">129</span>, <span class=\"number\">159</span>, <span class=\"number\">132</span>, <span class=\"number\">160</span>, <span class=\"number\">156</span>,</span><br><span class=\"line\">  <span class=\"number\">161</span>,  <span class=\"number\">16</span>, <span class=\"number\">162</span>,  <span class=\"number\">91</span>, <span class=\"number\">163</span>,  <span class=\"number\">11</span>, <span class=\"number\">164</span>,  <span class=\"number\">26</span>, <span class=\"number\">165</span>, <span class=\"number\">112</span>,</span><br><span class=\"line\">  <span class=\"number\">166</span>, <span class=\"number\">248</span>, <span class=\"number\">167</span>,  <span class=\"number\">99</span>, <span class=\"number\">168</span>, <span class=\"number\">166</span>, <span class=\"number\">169</span>, <span class=\"number\">175</span>, <span class=\"number\">170</span>,  <span class=\"number\">32</span>,</span><br><span class=\"line\">  <span class=\"number\">171</span>, <span class=\"number\">152</span>, <span class=\"number\">172</span>,   <span class=\"number\">1</span>, <span class=\"number\">173</span>,  <span class=\"number\">52</span>, <span class=\"number\">174</span>,  <span class=\"number\">41</span>, <span class=\"number\">175</span>, <span class=\"number\">226</span>,</span><br><span class=\"line\">  <span class=\"number\">176</span>, <span class=\"number\">251</span>, <span class=\"number\">177</span>,  <span class=\"number\">23</span>, <span class=\"number\">178</span>, <span class=\"number\">154</span>, <span class=\"number\">179</span>, <span class=\"number\">172</span>, <span class=\"number\">180</span>,   <span class=\"number\">4</span>,</span><br><span class=\"line\">  <span class=\"number\">181</span>,  <span class=\"number\">92</span>, <span class=\"number\">182</span>,  <span class=\"number\">54</span>, <span class=\"number\">183</span>, <span class=\"number\">186</span>, <span class=\"number\">184</span>, <span class=\"number\">217</span>, <span class=\"number\">185</span>, <span class=\"number\">177</span>,</span><br><span class=\"line\">  <span class=\"number\">186</span>, <span class=\"number\">247</span>, <span class=\"number\">187</span>, <span class=\"number\">195</span>, <span class=\"number\">188</span>,  <span class=\"number\">80</span>, <span class=\"number\">189</span>, <span class=\"number\">209</span>, <span class=\"number\">190</span>, <span class=\"number\">188</span>,</span><br><span class=\"line\">  <span class=\"number\">191</span>, <span class=\"number\">229</span>, <span class=\"number\">192</span>, <span class=\"number\">144</span>, <span class=\"number\">193</span>,  <span class=\"number\">37</span>, <span class=\"number\">194</span>,  <span class=\"number\">12</span>, <span class=\"number\">195</span>, <span class=\"number\">136</span>,</span><br><span class=\"line\">  <span class=\"number\">196</span>, <span class=\"number\">184</span>, <span class=\"number\">197</span>,  <span class=\"number\">18</span>, <span class=\"number\">198</span>, <span class=\"number\">210</span>, <span class=\"number\">199</span>,  <span class=\"number\">27</span>, <span class=\"number\">200</span>,  <span class=\"number\">71</span>,</span><br><span class=\"line\">  <span class=\"number\">201</span>,  <span class=\"number\">77</span>, <span class=\"number\">202</span>, <span class=\"number\">196</span>, <span class=\"number\">203</span>,   <span class=\"number\">7</span>, <span class=\"number\">204</span>,  <span class=\"number\">30</span>, <span class=\"number\">205</span>, <span class=\"number\">135</span>,</span><br><span class=\"line\">  <span class=\"number\">206</span>, <span class=\"number\">123</span>, <span class=\"number\">207</span>,  <span class=\"number\">87</span>, <span class=\"number\">208</span>, <span class=\"number\">240</span>, <span class=\"number\">209</span>, <span class=\"number\">253</span>, <span class=\"number\">210</span>,  <span class=\"number\">85</span>,</span><br><span class=\"line\">  <span class=\"number\">211</span>,  <span class=\"number\">29</span>, <span class=\"number\">212</span>, <span class=\"number\">105</span>, <span class=\"number\">213</span>, <span class=\"number\">223</span>, <span class=\"number\">214</span>, <span class=\"number\">108</span>, <span class=\"number\">215</span>,  <span class=\"number\">42</span>,</span><br><span class=\"line\">  <span class=\"number\">216</span>, <span class=\"number\">236</span>, <span class=\"number\">217</span>, <span class=\"number\">110</span>, <span class=\"number\">218</span>, <span class=\"number\">199</span>, <span class=\"number\">219</span>,  <span class=\"number\">40</span>, <span class=\"number\">220</span>, <span class=\"number\">142</span>,</span><br><span class=\"line\">  <span class=\"number\">221</span>, <span class=\"number\">194</span>, <span class=\"number\">222</span>, <span class=\"number\">130</span>, <span class=\"number\">223</span>, <span class=\"number\">157</span>, <span class=\"number\">224</span>,  <span class=\"number\">78</span>, <span class=\"number\">225</span>,  <span class=\"number\">24</span>,</span><br><span class=\"line\">  <span class=\"number\">226</span>, <span class=\"number\">115</span>, <span class=\"number\">227</span>, <span class=\"number\">149</span>, <span class=\"number\">228</span>, <span class=\"number\">201</span>, <span class=\"number\">229</span>,  <span class=\"number\">13</span>, <span class=\"number\">230</span>, <span class=\"number\">137</span>,</span><br><span class=\"line\">  <span class=\"number\">231</span>, <span class=\"number\">141</span>, <span class=\"number\">232</span>, <span class=\"number\">107</span>, <span class=\"number\">233</span>, <span class=\"number\">139</span>, <span class=\"number\">234</span>,  <span class=\"number\">70</span>, <span class=\"number\">235</span>,  <span class=\"number\">17</span>,</span><br><span class=\"line\">  <span class=\"number\">236</span>,  <span class=\"number\">33</span>, <span class=\"number\">237</span>, <span class=\"number\">116</span>, <span class=\"number\">238</span>,  <span class=\"number\">76</span>, <span class=\"number\">239</span>,   <span class=\"number\">9</span>, <span class=\"number\">240</span>, <span class=\"number\">243</span>,</span><br><span class=\"line\">  <span class=\"number\">241</span>, <span class=\"number\">197</span>, <span class=\"number\">242</span>, <span class=\"number\">208</span>, <span class=\"number\">243</span>, <span class=\"number\">131</span>, <span class=\"number\">244</span>, <span class=\"number\">183</span>, <span class=\"number\">245</span>,  <span class=\"number\">31</span>,</span><br><span class=\"line\">  <span class=\"number\">246</span>,  <span class=\"number\">55</span>, <span class=\"number\">247</span>, <span class=\"number\">180</span>, <span class=\"number\">248</span>,  <span class=\"number\">38</span>, <span class=\"number\">249</span>,   <span class=\"number\">6</span>, <span class=\"number\">250</span>,  <span class=\"number\">49</span>,</span><br><span class=\"line\">  <span class=\"number\">251</span>, <span class=\"number\">150</span>, <span class=\"number\">252</span>,  <span class=\"number\">57</span>, <span class=\"number\">253</span>, <span class=\"number\">168</span>, <span class=\"number\">254</span>, <span class=\"number\">119</span>, <span class=\"number\">255</span>, <span class=\"number\">143</span>]</span><br><span class=\"line\"><span class=\"comment\"># enc = &#x27;6A35BB7DA9EE7D387CE330EFB932B9BE0D4F50A54DE597DE738DE617D542BE3670EEEEE61443AB627CFBEE31C7DD4F5&#x27;</span></span><br><span class=\"line\">enclist = [<span class=\"string\">&#x27;6A35BB7DA9EE7D387CE330EFB932B9BE&#x27;</span>,<span class=\"string\">&#x27;D4F50A54DE597DE738DE617D542BE367&#x27;</span>,<span class=\"string\">&#x27;0EEEEE61443AB627CFBEE31C7D&#x27;</span>] <span class=\"comment\">#这里需要删掉一点点</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> enc <span class=\"keyword\">in</span> enclist:</span><br><span class=\"line\">    a = [<span class=\"built_in\">int</span>(enc[i:i + <span class=\"number\">2</span>], <span class=\"number\">16</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(enc), <span class=\"number\">2</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">create_mapping</span>(<span class=\"params\">lst</span>):</span><br><span class=\"line\">        odd_numbers = []</span><br><span class=\"line\">        even_numbers = []</span><br><span class=\"line\">        mapping = &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">256</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> num % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">                even_numbers.append(lst[num])</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                odd_numbers.append(lst[num])</span><br><span class=\"line\">        <span class=\"keyword\">for</span> odd, even <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(odd_numbers, even_numbers):</span><br><span class=\"line\">            mapping[odd] = even</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mapping</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">map</span> = create_mapping(box)</span><br><span class=\"line\">    <span class=\"comment\"># print(map)</span></span><br><span class=\"line\">    tmpflag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">       tmpflag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">map</span>[i])</span><br><span class=\"line\">    tmpflag = tmpflag[::-<span class=\"number\">1</span>]</span><br><span class=\"line\">    flag += tmpflag</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(tmpflag)</span><br><span class=\"line\"><span class=\"built_in\">print</span>()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ASIS&#123;7Hi5_!Z_4n0tH3R_Ea5Y_WaRmUp_cHALleN9E!!&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"buzz\"><a class=\"markdownIt-Anchor\" href=\"#buzz\">#</a> buzz</h3>\n<p>对于 flag 的每一位加密，打印的 BUZZ [] 数量可以转化为数字，即加密后的数</p>\n<p>ios 的没设备没环境不能调，否则直接打印一张大映射表就行，只能硬逆，好在逻辑比较简单</p>\n<p>但其实不好看，这个逻辑不知道怎么做的编译器优化，很抽象：</p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230924085147175.png\" alt=\"image-20230924085147175\"></p>\n<p>不过可以辨认出 <code>xor</code>   <code>shl</code>   <code>*55</code>   <code>+ 97</code>   <code>+44</code>  等操作，其中 <code>*55</code>  这个会生成一个比较大的数，可以根据这个判断，发现是每七位一组循环加密</p>\n<p>先提取 <code>enc[]</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">read_brackets_from_file</span>(<span class=\"params\">filename</span>):</span><br><span class=\"line\">    bracket_count = <span class=\"number\">0</span></span><br><span class=\"line\">    result = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(filename, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            char = f.read(<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> char:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> char == <span class=\"string\">&#x27;]&#x27;</span>:</span><br><span class=\"line\">                bracket_count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> bracket_count &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                    result.append(bracket_count)</span><br><span class=\"line\">                    bracket_count = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> bracket_count &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        result.append(bracket_count)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">filename = <span class=\"string\">&quot;./flag.enc&quot;</span></span><br><span class=\"line\">result = read_brackets_from_file(filename)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可以发现后续都是填充用的，不需要管</span></span><br></pre></td></tr></table></figure>\n<p>介于加密逻辑不能调确实静态看挺麻烦的，<a href=\"http://xn--exp-7j2eu7ei2uosl6kqs6da194na.py\">反正就猜猜测测拿到 exp.py</a>:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enc = [<span class=\"number\">34</span>, <span class=\"number\">99</span>, <span class=\"number\">1168</span>, <span class=\"number\">332</span>, <span class=\"number\">6765</span>, <span class=\"number\">197</span>, <span class=\"number\">117</span>, <span class=\"number\">5</span>, <span class=\"number\">118</span>, <span class=\"number\">784</span>, <span class=\"number\">396</span>, <span class=\"number\">6435</span>, <span class=\"number\">205</span>, <span class=\"number\">128</span>, <span class=\"number\">60</span>, <span class=\"number\">68</span>, <span class=\"number\">832</span>, <span class=\"number\">460</span>, <span class=\"number\">5885</span>, <span class=\"number\">192</span>, <span class=\"number\">92</span>, <span class=\"number\">5</span>, <span class=\"number\">111</span>, <span class=\"number\">1872</span>, <span class=\"number\">312</span>, <span class=\"number\">5500</span>, <span class=\"number\">148</span>, <span class=\"number\">158</span>, <span class=\"number\">48</span>, <span class=\"number\">68</span>, <span class=\"number\">1040</span>, <span class=\"number\">440</span>, <span class=\"number\">5500</span>, <span class=\"number\">130</span>, <span class=\"number\">154</span>, <span class=\"number\">90</span>, <span class=\"number\">111</span>, <span class=\"number\">1856</span>, <span class=\"number\">288</span>, <span class=\"number\">2805</span>, <span class=\"number\">192</span>, <span class=\"number\">117</span>, <span class=\"number\">13</span>, <span class=\"number\">126</span>, <span class=\"number\">1616</span>, <span class=\"number\">456</span>, <span class=\"number\">5225</span>, <span class=\"number\">216</span>, <span class=\"number\">123</span>, <span class=\"number\">17</span>, <span class=\"number\">123</span>, <span class=\"number\">1680</span>, <span class=\"number\">440</span>, <span class=\"number\">3905</span>, <span class=\"number\">150</span>, <span class=\"number\">139</span>, <span class=\"number\">12</span>, <span class=\"number\">118</span>, <span class=\"number\">1520</span>, <span class=\"number\">392</span>, <span class=\"number\">2695</span>, <span class=\"number\">207</span>, <span class=\"number\">141</span>, <span class=\"number\">49</span>, <span class=\"number\">73</span>, <span class=\"number\">528</span>, <span class=\"number\">500</span>, <span class=\"number\">550</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(enc))</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(enc)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((i + <span class=\"number\">1</span>) % <span class=\"number\">7</span> == <span class=\"number\">1</span>):</span><br><span class=\"line\">        enc[i] ^= <span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;A&#x27;</span>) ^ <span class=\"number\">34</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((i + <span class=\"number\">1</span>) % <span class=\"number\">7</span> == <span class=\"number\">2</span>):</span><br><span class=\"line\">        enc[i] ^= <span class=\"number\">0x30</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((i + <span class=\"number\">1</span>) % <span class=\"number\">7</span> == <span class=\"number\">3</span>):</span><br><span class=\"line\">        enc[i] //= <span class=\"number\">16</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((i + <span class=\"number\">1</span>) % <span class=\"number\">7</span> == <span class=\"number\">4</span>):</span><br><span class=\"line\">        enc[i] //= <span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((i + <span class=\"number\">1</span>) % <span class=\"number\">7</span> == <span class=\"number\">5</span>):</span><br><span class=\"line\">        enc[i] //= <span class=\"number\">55</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((i + <span class=\"number\">1</span>) % <span class=\"number\">7</span> == <span class=\"number\">6</span>):</span><br><span class=\"line\">        enc[i] -= <span class=\"number\">97</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((i + <span class=\"number\">1</span>) % <span class=\"number\">7</span> == <span class=\"number\">0</span>):</span><br><span class=\"line\">        enc[i] -= <span class=\"number\">44</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> enc:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(i),end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ASIS&#123;dIfF1culT_t4sk_0f_uNd3rStAnd!n9_tH3_InNer_wOrKinG5_oF_b1naRy!&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"sid\"><a class=\"markdownIt-Anchor\" href=\"#sid\">#</a> sid</h3>\n<p>cpp 玩意跟混淆了一样… 真的难顶</p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230924085847189.png\" alt=\"image-20230924085847189\"></p>\n<p>不过其实也就用了点 <code>stl string</code>  多做点可以猜猜</p>\n<p>坏了，现在复盘的时候发现了，前面已经截掉 <code>ASIS&#123;</code> 了，昨天爆破的头晕眼花了把这事给忘了…</p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230924085932475.png\" alt=\"image-20230924085932475\"></p>\n<p>有些大数操作看起来是编译器优化的产物，动调过去就知道没啥用了</p>\n<p>主要加密逻辑（已经手动写了符号）：</p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230924090138635.png\" alt=\"image-20230924090138635\"></p>\n<p>其中比较难逆的就是 <code>string_append_and_some_kind_of_enc</code>  这个玩意（低水平起名）</p>\n<p>里面都是很看不懂的大数操作和 string 操作</p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230924090248263.png\" alt=\"image-20230924090248263\"></p>\n<p>不过进来就可以看到特征数了</p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230924090324244.png\" alt=\"image-20230924090324244\"></p>\n<p>注意这里还做了魔改，这个 some_enc 看起来就是流加密 <code>chacha20</code>  或者 <code>salsa20</code>  的流密钥初始化，但是他下面还加了异或随机数</p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230924090624372.png\" alt=\"image-20230924090624372\"></p>\n<p>分别写 chacha20 脚本和 salsa 脚本测试一下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Cipher <span class=\"keyword\">import</span> ChaCha20</span><br><span class=\"line\"><span class=\"comment\"># chacha20</span></span><br><span class=\"line\">key = <span class=\"string\">b&#x27;\\x07\\x05\\x0B\\x0D\\x0F\\x0D\\x0B\\x05\\x07\\x05\\x1B\\x1D\\x1F\\x1D\\x1B\\x05\\x07\\x05\\x0B\\x0D\\x0F\\x37\\x35\\x3B\\x3D\\x3F\\x07\\x05\\x0B\\x0D\\x0F\\x0D&#x27;</span></span><br><span class=\"line\">plaintext = <span class=\"string\">b&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890_&quot;</span></span><br><span class=\"line\">nonce = <span class=\"string\">b&#x27;\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&#x27;</span></span><br><span class=\"line\">cipher = ChaCha20.new(key=key,nonce=nonce)</span><br><span class=\"line\">ciphertext = cipher.encrypt(plaintext)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取 nonce（用于解密）</span></span><br><span class=\"line\"><span class=\"comment\"># nonce = cipher.nonce</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解密</span></span><br><span class=\"line\"><span class=\"comment\"># cipher = ChaCha20.new(key=key, nonce=nonce)</span></span><br><span class=\"line\"><span class=\"comment\"># decrypted_text = cipher.decrypt(ciphertext)</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = [<span class=\"built_in\">hex</span>(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> ciphertext]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">b = [    <span class=\"number\">0x20</span>, <span class=\"number\">0xFD</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0xA2</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x4E</span>, <span class=\"number\">0x3C</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x06</span>,</span><br><span class=\"line\">  <span class=\"number\">0x77</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0x9E</span>, <span class=\"number\">0xFA</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x1D</span>,</span><br><span class=\"line\">  <span class=\"number\">0x49</span>, <span class=\"number\">0xDB</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x5D</span>, <span class=\"number\">0xEC</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xD4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0x1C</span>, <span class=\"number\">0x4C</span>,</span><br><span class=\"line\">  <span class=\"number\">0x7E</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0xC5</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xA3</span>, <span class=\"number\">0xD9</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0x6B</span>, <span class=\"number\">0xFB</span>, <span class=\"number\">0x65</span>,</span><br><span class=\"line\">  <span class=\"number\">0x40</span>, <span class=\"number\">0x6B</span>, <span class=\"number\">0xF5</span>, <span class=\"number\">0x5F</span>, <span class=\"number\">0x9C</span>, <span class=\"number\">0xCF</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x6C</span>, <span class=\"number\">0xE8</span>,</span><br><span class=\"line\">  <span class=\"number\">0x99</span>, <span class=\"number\">0xEF</span>, <span class=\"number\">0xC3</span>, <span class=\"number\">0xED</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0xAF</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0x4D</span>, <span class=\"number\">0x70</span>,</span><br><span class=\"line\">  <span class=\"number\">0x47</span>, <span class=\"number\">0xD1</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x00</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(<span class=\"built_in\">int</span>(a[i],<span class=\"number\">16</span>) ^ b[i]),end=<span class=\"string\">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Cipher <span class=\"keyword\">import</span> Salsa20</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Salsa20</span></span><br><span class=\"line\">key = <span class=\"string\">b&#x27;\\x07\\x05\\x0B\\x0D\\x0F\\x0D\\x0B\\x05\\x07\\x05\\x1B\\x1D\\x1F\\x1D\\x1B\\x05\\x07\\x05\\x0B\\x0D\\x0F\\x37\\x35\\x3B\\x3D\\x3F\\x07\\x05\\x0B\\x0D\\x0F\\x0D&#x27;</span></span><br><span class=\"line\">nonce = <span class=\"string\">b&#x27;\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">plaintext = <span class=\"string\">b&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890_&quot;</span></span><br><span class=\"line\">cipher = Salsa20.new(key=key , nonce=nonce)</span><br><span class=\"line\">ciphertext = cipher.encrypt(plaintext)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a = [<span class=\"built_in\">hex</span>(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> ciphertext]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">b = [  <span class=\"number\">0xFA</span>, <span class=\"number\">0xCD</span>, <span class=\"number\">0xCD</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xEE</span>, <span class=\"number\">0x7E</span>, <span class=\"number\">0xE6</span>, <span class=\"number\">0xB7</span>, <span class=\"number\">0x5A</span>, <span class=\"number\">0x36</span>,</span><br><span class=\"line\">  <span class=\"number\">0xAD</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xFD</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0xA9</span>, <span class=\"number\">0xAE</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0xAF</span>, <span class=\"number\">0x2D</span>,</span><br><span class=\"line\">  <span class=\"number\">0x93</span>, <span class=\"number\">0xEB</span>, <span class=\"number\">0xFD</span>, <span class=\"number\">0x6D</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0x0E</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0xC6</span>, <span class=\"number\">0x7C</span>,</span><br><span class=\"line\">  <span class=\"number\">0xA4</span>, <span class=\"number\">0xB3</span>, <span class=\"number\">0xC5</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xA3</span>, <span class=\"number\">0xD9</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0x6B</span>, <span class=\"number\">0xFB</span>, <span class=\"number\">0x65</span>,</span><br><span class=\"line\">  <span class=\"number\">0x40</span>, <span class=\"number\">0x6B</span>, <span class=\"number\">0xF5</span>, <span class=\"number\">0x5F</span>, <span class=\"number\">0x9C</span>, <span class=\"number\">0xCF</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x6C</span>, <span class=\"number\">0xE8</span>,</span><br><span class=\"line\">  <span class=\"number\">0x99</span>, <span class=\"number\">0xEF</span>, <span class=\"number\">0xC3</span>, <span class=\"number\">0xED</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0xAF</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0x4D</span>, <span class=\"number\">0x70</span>,</span><br><span class=\"line\">  <span class=\"number\">0x47</span>, <span class=\"number\">0xD1</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x00</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(<span class=\"built_in\">int</span>(a[i],<span class=\"number\">16</span>) ^ b[i]),end=<span class=\"string\">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>发现 <code>chacha20</code>  得到的是 2 个 * 16 组的随机数，故而确定这里是 <code>chacha20+随机数</code> 的流加密魔改</p>\n<p>除此之外，还有几个 <code>xor</code>  操作，比较好逆，结合看一下最后的输出，就有整个流程：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入32位的flag和若干位的pass（32位）</span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag ^ pass</span><br><span class=\"line\"></span><br><span class=\"line\">tmp = chacha20(key = flag, plaintext = pass, nonce = b&#x27;\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">cybertext1 = flag ^ random1 # random2也是两个随机数重复16次</span><br><span class=\"line\"></span><br><span class=\"line\">cybertext2 = tmp ^ random2 # random1是两个随机数重复16次</span><br><span class=\"line\"></span><br><span class=\"line\">output = hex_dump(cybertext1 + cybertext2)</span><br></pre></td></tr></table></figure>\n<p>解密时需要爆破四个随机数…0xff ^ 4 的解空间，这里用的是 python 硬爆，需要 12 小时</p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230924091010562.png\" alt=\"image-20230924091010562\"></p>\n<p>毕竟不是冲分比赛，如果是的话可以到此找台队里好的电脑或者服务开爆（×）</p>\n<p>不过自己做可以想想优化，可以看到 <code>pass</code>  全程都是被流加密的，原理上只做了单位异或</p>\n<p>也就是说可以少爆一个 random 值，爆破两次，分别拿到 flag 的奇偶位，这样就是  <code>0xff ^ 3 * 2</code>  的解空间，而 <code>0xff ^ 3</code>  大概是四分钟左右</p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230924091433563.png\" alt=\"image-20230924091433563\"> 再做一点细微优化，可以缩减到两分半钟每次，那么总的单次爆破时间就缩减到了六分钟，调试和 debug 变得基本可行（本身流程比较复杂确实也没有一次写对，犯低级错误浪费时间了)</p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230924091828715.png\" alt=\"image-20230924091828715\"></p>\n<p>然后大概优化一下判断匹配标准，并且把奇偶位拼接上，基本上就是最后脚本了（个人还是觉得这里的一步步想法推进挺有意思的，就是 debug 过程很痛苦，每调一次就得在一堆乱七八糟的玩意里找乱七八糟的 flag，这里把 ASIS {的标志位留下来感觉体验会好很多…）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cybertext1 = <span class=\"string\">&#x27;e5be2ec5c9d2c1532abbbd7a907217a2fd078f46b102817d062124b0b02a5de9&#x27;</span></span><br><span class=\"line\">cybertext2 = <span class=\"string\">&#x27;dcc3955c839144d7115f093c7fc198107779920a2c1b6ba2ae44b372849e6187&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">cybertext1_ori = [<span class=\"built_in\">int</span>(cybertext1[i:i+<span class=\"number\">2</span>], <span class=\"number\">16</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(cybertext1), <span class=\"number\">2</span>)]</span><br><span class=\"line\">cybertext2_ori = [<span class=\"built_in\">int</span>(cybertext2[i:i+<span class=\"number\">2</span>], <span class=\"number\">16</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(cybertext2), <span class=\"number\">2</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">cybertext1 = [<span class=\"built_in\">int</span>(cybertext1[i:i+<span class=\"number\">2</span>], <span class=\"number\">16</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(cybertext1), <span class=\"number\">2</span>)]</span><br><span class=\"line\">cybertext2 = [<span class=\"built_in\">int</span>(cybertext2[i:i+<span class=\"number\">2</span>], <span class=\"number\">16</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(cybertext2), <span class=\"number\">2</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(cybertext1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(cybertext2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Cipher <span class=\"keyword\">import</span> ChaCha20</span><br><span class=\"line\"><span class=\"keyword\">from</span> tqdm <span class=\"keyword\">import</span> tqdm</span><br><span class=\"line\">total_iterations = (<span class=\"number\">0xff</span>+<span class=\"number\">1</span>) * (<span class=\"number\">0xff</span>+<span class=\"number\">1</span>) * (<span class=\"number\">0xff</span>+<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">flag_list_odd = []</span><br><span class=\"line\">flag_list_even = []</span><br><span class=\"line\">flag_list = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;./forceOdd.bin&#x27;</span>,<span class=\"string\">&#x27;ab&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> tqdm(total=total_iterations) <span class=\"keyword\">as</span> pbar:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> random1_1 <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>):</span><br><span class=\"line\">            <span class=\"keyword\">for</span> random1_2 <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0xff</span> + <span class=\"number\">1</span>):</span><br><span class=\"line\">                <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(cybertext1)):</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> == <span class=\"number\">0</span>):</span><br><span class=\"line\">                        cybertext1[i] = cybertext1_ori[i] ^ random1_1</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                        cybertext1[i] = cybertext1_ori[i] ^ random1_2</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">for</span> random2_1 <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0xff</span> + <span class=\"number\">1</span>):</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> random2_2 <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0xff</span> + <span class=\"number\">1</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(cybertext2)):</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> == <span class=\"number\">0</span>):</span><br><span class=\"line\">                                cybertext2[i] = cybertext2_ori[i] ^ random2_1</span><br><span class=\"line\">                            <span class=\"keyword\">else</span> :</span><br><span class=\"line\">                                cybertext2[i] = cybertext2_ori[i] ^ random2_2</span><br><span class=\"line\"></span><br><span class=\"line\">                        key = <span class=\"built_in\">bytes</span>(cybertext2)</span><br><span class=\"line\">                        cybertext = <span class=\"built_in\">bytes</span>(cybertext1)</span><br><span class=\"line\">                        nonce = <span class=\"string\">b&#x27;\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&#x27;</span></span><br><span class=\"line\">                        cipher = ChaCha20.new(key=key, nonce=nonce)</span><br><span class=\"line\">                        plain = cipher.encrypt(cybertext)</span><br><span class=\"line\">                        plain = <span class=\"built_in\">bytes</span>([x ^ y <span class=\"keyword\">for</span> x, y <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(plain, key)])</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> <span class=\"built_in\">all</span>(<span class=\"number\">33</span> &lt;= <span class=\"built_in\">int</span>(plain[i]) &lt;= <span class=\"number\">126</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(plain), <span class=\"number\">2</span>)):</span><br><span class=\"line\">                            modified_plain = <span class=\"built_in\">bytearray</span>([plain[i] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(plain), <span class=\"number\">2</span>)])  <span class=\"comment\"># 创建一个可变的字节数组</span></span><br><span class=\"line\">                            file.write(<span class=\"built_in\">bytes</span>(modified_plain) + <span class=\"string\">b&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">                            flag_list_odd.append(<span class=\"built_in\">bytes</span>(modified_plain) + <span class=\"string\">b&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">                        pbar.update(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;./forceEven.bin&#x27;</span>, <span class=\"string\">&#x27;ab&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> tqdm(total=total_iterations) <span class=\"keyword\">as</span> pbar:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> random1_1 <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0xff</span> + <span class=\"number\">1</span>):</span><br><span class=\"line\">            <span class=\"keyword\">for</span> random1_2 <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>):</span><br><span class=\"line\">                <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(cybertext1)):</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> == <span class=\"number\">0</span>):</span><br><span class=\"line\">                        cybertext1[i] = cybertext1_ori[i] ^ random1_1</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                        cybertext1[i] = cybertext1_ori[i] ^ random1_2</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">for</span> random2_1 <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0xff</span> + <span class=\"number\">1</span>):</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> random2_2 <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0xff</span> + <span class=\"number\">1</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(cybertext2)):</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> == <span class=\"number\">0</span>):</span><br><span class=\"line\">                                cybertext2[i] = cybertext2_ori[i] ^ random2_1</span><br><span class=\"line\">                            <span class=\"keyword\">else</span> :</span><br><span class=\"line\">                                cybertext2[i] = cybertext2_ori[i] ^ random2_2</span><br><span class=\"line\"></span><br><span class=\"line\">                        key = <span class=\"built_in\">bytes</span>(cybertext2)</span><br><span class=\"line\">                        cybertext = <span class=\"built_in\">bytes</span>(cybertext1)</span><br><span class=\"line\">                        nonce = <span class=\"string\">b&#x27;\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&#x27;</span></span><br><span class=\"line\">                        cipher = ChaCha20.new(key=key, nonce=nonce)</span><br><span class=\"line\">                        plain = cipher.encrypt(cybertext)</span><br><span class=\"line\">                        plain = <span class=\"built_in\">bytes</span>([x ^ y <span class=\"keyword\">for</span> x, y <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(plain, key)])</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> <span class=\"built_in\">all</span>(<span class=\"number\">33</span> &lt;= <span class=\"built_in\">int</span>(plain[i]) &lt;= <span class=\"number\">126</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(plain), <span class=\"number\">2</span>)):</span><br><span class=\"line\">                            modified_plain = <span class=\"built_in\">bytearray</span>([plain[i] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(plain), <span class=\"number\">2</span>)])</span><br><span class=\"line\">                            file.write(<span class=\"built_in\">bytes</span>(modified_plain) + <span class=\"string\">b&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">                            flag_list_even.append(<span class=\"built_in\">bytes</span>(modified_plain) + <span class=\"string\">b&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">                        pbar.update(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> odd <span class=\"keyword\">in</span> flag_list_odd:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> even <span class=\"keyword\">in</span> flag_list_even:</span><br><span class=\"line\">        tmp_flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i, j <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(odd, even):</span><br><span class=\"line\">            tmp_flag += <span class=\"built_in\">chr</span>(j)</span><br><span class=\"line\">            tmp_flag += <span class=\"built_in\">chr</span>(i)</span><br><span class=\"line\">        flag_list.append(tmp_flag)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag_list)</span><br></pre></td></tr></table></figure>\n<p>这里最后的版本需要肉眼在六百多条里面找真 flag，应该算目前我能想的最优的爆破了，大概效果如下（还是相当精神污染的，可能是自己题做少了也说不准…）：</p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230924092335126.png\" alt=\"image-20230924092335126\"></p>\n<p>（后话：结果是 python 本身 Crypto 库的瓶颈，导致需要这样优化，其他师傅自己 cpp 写的满 0xff ^ 4 空间的爆破也就十几分钟左右，同样空间下 python 就得十几个小时了…）</p>\n<h3 id=\"scrat\"><a class=\"markdownIt-Anchor\" href=\"#scrat\">#</a> scrat</h3>\n<p>这个题其实和 sid 差不多，也是麻烦的加密和爆破（解数比 sid 多的原因完全可能是很多师傅和我一开始一样 sid 爆出来了但是没看见 flag）</p>\n<p>yysy，算是练习调试、 <code>cpp string</code>  导致的一些奇怪的汇编代码、猜测能力吧，新东西确实没有啥了</p>\n<p>几处加密：</p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230925191134745.png\" alt=\"image-20230925191134745\"></p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230925191920010.png\" alt=\"image-20230925191920010\"></p>\n<p><img loading=\"lazy\" data-src=\"ASIS-CTF2023/image-20230925191831529.png\" alt=\"image-20230925191831529\"></p>\n<p>流程：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tmp = flag[i] * (<span class=\"number\">39</span> + <span class=\"number\">1</span> - i)</span><br><span class=\"line\">s = <span class=\"built_in\">sum</span>(flag)</span><br><span class=\"line\">s = (s + (-<span class=\"number\">1</span>) ^ (i) * tmp) % <span class=\"number\">0x4141a15b</span></span><br><span class=\"line\">s = s * <span class=\"number\">39</span> % <span class=\"number\">0x4141a15b</span></span><br><span class=\"line\">seed = <span class=\"number\">1</span></span><br><span class=\"line\">v33 = <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> s != <span class=\"number\">0</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s &amp; <span class=\"number\">1</span> != <span class=\"number\">0</span>:</span><br><span class=\"line\">        seed = v33 * seed % <span class=\"number\">0x4141A15B</span></span><br><span class=\"line\">    v33 = v33 * v33 % <span class=\"number\">0x4141A15B</span></span><br><span class=\"line\">    s &gt;&gt;= <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">39</span>):</span><br><span class=\"line\">    seed = seed * <span class=\"number\">166013</span> + <span class=\"number\">4148159</span></span><br><span class=\"line\">    flag[i] ^= (seed // <span class=\"number\">0x10000</span>) &amp; <span class=\"number\">0xff</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"http://exp.py\">exp.py</a> (比赛结束了抄个 JANlittle 师傅的，感觉基本功确实还缺点 qaq)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enc = <span class=\"built_in\">bytes</span>.fromhex(<span class=\"string\">&#x27;3a392465ffefc6b485193c32cefdb99df95cb6d6566478a17873b92b2df5dea31e5c0edbb1cc9b&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5000000</span>):</span><br><span class=\"line\">    seed = <span class=\"number\">1</span></span><br><span class=\"line\">    v33 = <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> s != <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> s &amp; <span class=\"number\">1</span> != <span class=\"number\">0</span>:</span><br><span class=\"line\">            seed = v33 * seed % <span class=\"number\">0x4141A15B</span></span><br><span class=\"line\">        v33 = v33 * v33 % <span class=\"number\">0x4141A15B</span></span><br><span class=\"line\">        s &gt;&gt;= <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    t = <span class=\"built_in\">list</span>(enc)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">39</span>):</span><br><span class=\"line\">        seed = seed * <span class=\"number\">166013</span> + <span class=\"number\">4148159</span></span><br><span class=\"line\">        t[i] ^= (seed // <span class=\"number\">0x10000</span>) &amp; <span class=\"number\">0xff</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> i == <span class=\"number\">3</span> <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> <span class=\"built_in\">bytes</span>(t).startswith(<span class=\"string\">b&#x27;ASIS&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">bytes</span>(t).startswith(<span class=\"string\">b&#x27;ASIS&#x27;</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"built_in\">bytes</span>(t))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ASIS&#123;___A_9!Rl_w1Th_Dr4G0N_7AtTO5___!!&#125;</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "re"
            ]
        },
        {
            "id": "https://demoyao100.github.io/2023/09/18/%E9%B9%A4%E5%9F%8E2023/",
            "url": "https://demoyao100.github.io/2023/09/18/%E9%B9%A4%E5%9F%8E2023/",
            "title": "鹤城2023",
            "date_published": "2023-09-18T05:37:48.000Z",
            "content_html": "<h6 id=\"preface-没啥好说的队友带飞\"><a class=\"markdownIt-Anchor\" href=\"#preface-没啥好说的队友带飞\">#</a> PREFACE: 没啥好说的，队友带飞</h6>\n<span id=\"more\"></span>\n<h4 id=\"crackme\"><a class=\"markdownIt-Anchor\" href=\"#crackme\">#</a> CrackMe</h4>\n<p>C#，逻辑简单的，多余的部分只是隐藏回显用</p>\n<p><img loading=\"lazy\" data-src=\"%E9%B9%A4%E5%9F%8E2023/image-20230918134205880.png\" alt=\"image-20230918134205880\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enc = [<span class=\"number\">123</span>,<span class=\"number\">148</span>,<span class=\"number\">62</span>,<span class=\"number\">53</span>,<span class=\"number\">24</span>,<span class=\"number\">116</span>,<span class=\"number\">244</span>,<span class=\"number\">126</span>,<span class=\"number\">63</span>,<span class=\"number\">90</span>]</span><br><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Cipher <span class=\"keyword\">import</span> DES</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> itertools</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\">charset = string.ascii_letters + string.digits + string.punctuation + <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> enc:</span><br><span class=\"line\">    <span class=\"comment\"># charset = string.ascii_letters + string.digits + string.punctuation</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">255</span>):</span><br><span class=\"line\">        b = i &amp; <span class=\"number\">7</span></span><br><span class=\"line\">        b2 = i &gt;&gt; <span class=\"number\">3</span> &amp; <span class=\"number\">255</span></span><br><span class=\"line\">        a = b &lt;&lt; <span class=\"number\">5</span> | b2</span><br><span class=\"line\">        a ^= <span class=\"number\">18</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a == j):</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(i),end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># flag&#123;K4a9P37ciB&#125; （这里格式忘了，但是里面是对的）</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"list\"><a class=\"markdownIt-Anchor\" href=\"#list\">#</a> List</h4>\n<p><img loading=\"lazy\" data-src=\"%E9%B9%A4%E5%9F%8E2023/image-20230918134342093.png\" alt=\"image-20230918134342093\"></p>\n<p>一个简单的异或</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enc = [  <span class=\"number\">0x11</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x12</span>,</span><br><span class=\"line\">  <span class=\"number\">0x13</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x32</span>,</span><br><span class=\"line\">  <span class=\"number\">0x33</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x52</span>,</span><br><span class=\"line\">  <span class=\"number\">0x53</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x15</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">h = [    <span class=\"number\">0x68</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0x34</span>,</span><br><span class=\"line\">  <span class=\"number\">0x7D</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x0A</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x07</span>,</span><br><span class=\"line\">  <span class=\"number\">0x40</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xFA</span>,</span><br><span class=\"line\">  <span class=\"number\">0xEB</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0x2E</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0x4E</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0xCD</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">38</span>):</span><br><span class=\"line\">  flag += <span class=\"built_in\">chr</span>(enc[<span class=\"built_in\">len</span>(enc) - <span class=\"number\">1</span> - i] ^ h[i])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag[::-<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># flag&#123;5accf61b8debe679ed21068e6a51b203&#125;</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "re"
            ]
        },
        {
            "id": "https://demoyao100.github.io/2023/09/18/seccon-2023/",
            "url": "https://demoyao100.github.io/2023/09/18/seccon-2023/",
            "title": "seccon 2023",
            "date_published": "2023-09-18T02:24:11.000Z",
            "content_html": "<h6 id=\"preface-本来人说和一块看结果周末事情太多了只能自己做赛中做了俩后面只能再慢慢补题qaq\"><a class=\"markdownIt-Anchor\" href=\"#preface-本来人说和一块看结果周末事情太多了只能自己做赛中做了俩后面只能再慢慢补题qaq\">#</a> PREFACE: 本来人说和一块看，结果周末事情太多了只能自己做，赛中做了俩，后面只能再慢慢补题 qaq.</h6>\n<h6 id=\"基本上算是比较少看国外赛看了一下seccon感觉确实和平时做的差距挺大的比如这个re很有些misc的感觉难度还行不算很恶心但是确实新希望最近几天能把它复现出来\"><a class=\"markdownIt-Anchor\" href=\"#基本上算是比较少看国外赛看了一下seccon感觉确实和平时做的差距挺大的比如这个re很有些misc的感觉难度还行不算很恶心但是确实新希望最近几天能把它复现出来\">#</a> 基本上算是比较少看国外赛，看了一下 seccon 感觉确实和平时做的差距挺大的，比如这个 re 很有些 misc 的感觉，难度还行不算很恶心，但是确实新，希望最近几天能把它复现出来</h6>\n<h6 id=\"9-19-ok勉强算搞完了这个nim的oi还是挺恶心的\"><a class=\"markdownIt-Anchor\" href=\"#9-19-ok勉强算搞完了这个nim的oi还是挺恶心的\">#</a> 9-19: ok 勉强算搞完了，这个 nim 的 oi 还是挺恶心的…</h6>\n<span id=\"more\"></span>\n<h4 id=\"jumpout\"><a class=\"markdownIt-Anchor\" href=\"#jumpout\">#</a> jumpout</h4>\n<p>签到题，写了个小混淆反静态看，大概意思是将所有的 <code>jmp addr</code>  改成类似 <code>mov rax, addr; jmp rax</code>  的操作，应该是写了个 <code>llvm</code>  小工具之类的</p>\n<p>动调仔细看汇编即可，理论上可以自己修，但是没啥必要（而且也不太会，近期还得学学 angr，qaq），这里只是做了三次异或</p>\n<p>需要对栈上和寄存器的数据跟的比较清晰，这里的 i 其实没跟明白但是可以简单猜一下，实在不行就每轮都跟完也能出（<s>异或么反正，每轮都拿一个最后值就行其实</s>～）</p>\n<p>exp:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [  <span class=\"number\">0xF6</span>, <span class=\"number\">0xF5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0xC8</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0xF6</span>, <span class=\"number\">0x35</span>,</span><br><span class=\"line\">  <span class=\"number\">0xE5</span>, <span class=\"number\">0x3E</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xCA</span>, <span class=\"number\">0xF1</span>, <span class=\"number\">0x8A</span>, <span class=\"number\">0xA9</span>, <span class=\"number\">0xDF</span>, <span class=\"number\">0xDF</span>,</span><br><span class=\"line\">  <span class=\"number\">0x33</span>, <span class=\"number\">0x2A</span>, <span class=\"number\">0x6D</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0xF5</span>, <span class=\"number\">0xA6</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xDF</span>, <span class=\"number\">0x17</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">enc = [  <span class=\"number\">0xF0</span>, <span class=\"number\">0xE4</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xDD</span>, <span class=\"number\">0x9F</span>, <span class=\"number\">0x0B</span>, <span class=\"number\">0x3C</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0xDE</span>, <span class=\"number\">0x04</span>,</span><br><span class=\"line\">  <span class=\"number\">0xCA</span>, <span class=\"number\">0x3F</span>, <span class=\"number\">0xAF</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0xF3</span>, <span class=\"number\">0xC7</span>, <span class=\"number\">0xAA</span>, <span class=\"number\">0xB2</span>, <span class=\"number\">0xFD</span>, <span class=\"number\">0xEF</span>,</span><br><span class=\"line\">  <span class=\"number\">0x17</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xB4</span>, <span class=\"number\">0xD0</span>, <span class=\"number\">0x8F</span>, <span class=\"number\">0xB8</span>, <span class=\"number\">0xF4</span>, <span class=\"number\">0x23</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(enc)):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(i ^ <span class=\"number\">0x55</span> ^ enc[i] ^ a[i]),end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># SECCON&#123;jump_table_everywhere&#125;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"sickle\"><a class=\"markdownIt-Anchor\" href=\"#sickle\">#</a> Sickle</h4>\n<p>第一次见这个 pickle 加载 payload 反序列化调用 shellcode 的操作，具体其实还是不太会搞，这题 <code>pickletools.dis(payload)</code>  得到的结果感觉用处不大，知道有个 <code>xor</code>  的信息，不知道怎么提取其实（等 wp 出来再复现复现）但是 re 么真不能太纠结过程吧，反正 fuzz 一下，嗯看一下 bytes，猜测是一个 <code>rsa + xor + 倒序</code> 的组合，参数很奇怪 n 是一个素数（开始以为要打，问了一下密码爷说不用直接可以解）解了第一段发现第二段参数不对，遂注意到 <code>xor</code>  参数换了，然后么就出了…</p>\n<p>看这个 flag 内容感觉或许确实不太有动调工具，但是应该有方法起码把完整字节码反序列化拿到吧… 但是确实没搞出来，晚点看看 wp…</p>\n<h6 id=\"9-19-原来可以直接改源码增加print这样直接就有完整流程了orz\"><a class=\"markdownIt-Anchor\" href=\"#9-19-原来可以直接改源码增加print这样直接就有完整流程了orz\">#</a> 9-19: 原来可以直接改源码，增加 print，这样直接就有完整流程了，orz</h6>\n<p>exp:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">check_values = [</span><br><span class=\"line\">    <span class=\"number\">8215359690687096682</span>,</span><br><span class=\"line\">    <span class=\"number\">1862662588367509514</span>,</span><br><span class=\"line\">    <span class=\"number\">8350772864914849965</span>,</span><br><span class=\"line\">    <span class=\"number\">11616510986494699232</span>,</span><br><span class=\"line\">    <span class=\"number\">3711648467207374797</span>,</span><br><span class=\"line\">    <span class=\"number\">9722127090168848805</span>,</span><br><span class=\"line\">    <span class=\"number\">16780197523811627561</span>,</span><br><span class=\"line\">    <span class=\"number\">18138828537077112905</span>,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">import</span> gmpy2</span><br><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> long_to_bytes</span><br><span class=\"line\"></span><br><span class=\"line\">xor = <span class=\"number\">1244422970072434993</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> check_values:</span><br><span class=\"line\">    e = <span class=\"number\">65537</span></span><br><span class=\"line\">    n = <span class=\"number\">18446744073709551557</span></span><br><span class=\"line\">    phi = (<span class=\"number\">18446744073709551557</span> - <span class=\"number\">1</span>)</span><br><span class=\"line\">    d = gmpy2.invert(e, phi)</span><br><span class=\"line\">    m = <span class=\"built_in\">pow</span>(c,d,n)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(long_to_bytes(m ^ xor).decode()[::-<span class=\"number\">1</span>],end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    xor = c</span><br><span class=\"line\"><span class=\"comment\"># SECCON&#123;Can_someone_please_make_a_debugger_for_Pickle_bytecode??&#125;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"prefect-flu\"><a class=\"markdownIt-Anchor\" href=\"#prefect-flu\">#</a> prefect-flu</h4>\n<h6 id=\"9-17没出还很急感觉确实有点点misc来的\"><a class=\"markdownIt-Anchor\" href=\"#9-17没出还很急感觉确实有点点misc来的\">#</a> 9-17, 没出还，很急，感觉确实有点点 misc 来的</h6>\n<p>也是第一次见，dvd iso，没搞清楚怎么提取逻辑</p>\n<p>感觉可以参考是这篇：<a href=\"https://zhuanlan.zhihu.com/p/46518832\">蓝光文件解析 - 知乎 (zhihu.com)</a>，但是里面的工具编译不出来，它的文件路径感觉是乱的，还没解决…</p>\n<p>用 vlc 可以运行，点击很多 button，会触发 check 逻辑一段一段播放视频，作为回显，逻辑应该是在 <code>BDMV/MovieObject.bdmv</code>  里面的（JAR 里面明明确实没找到东西…）</p>\n<p><code>BDedit</code>  可以打开这个 bdmv，里面有一定的运行逻辑，但是里面是缺少 check flag 的逻辑的，目前是还没找到 check 到底在哪，急急急…</p>\n<p><img loading=\"lazy\" data-src=\"seccon-2023/image-20230918105138109.png\" alt=\"image-20230918105138109\"></p>\n<h6 id=\"9-18看了别的师傅的wp出了一步之遥\"><a class=\"markdownIt-Anchor\" href=\"#9-18看了别的师傅的wp出了一步之遥\">#</a> 9-18, 看了别的师傅的 wp，出了，一步之遥…</h6>\n<p>导入 STREAM 中的 M2TS 到这里的 Menu 里面，可以看每个 button 的具体逻辑…</p>\n<p><img loading=\"lazy\" data-src=\"seccon-2023/image-20230918160853438.png\" alt=\"image-20230918160853438\"></p>\n<p>这个 <code>Call Object</code>  不同的既是正确的 flag，猜一下可以得到这个图（偷来的图）</p>\n<p><img loading=\"lazy\" data-src=\"seccon-2023/image-20230918161010536.png\" alt=\"image-20230918161010536\"></p>\n<p>SECCON{</p>\n<p>26 11 10 25 38 4 7 12 28 38 10 11 13 28 38 32 24 21 11 38 16 23 13 17 38 31 16 15 2 38 15 25 27 27 38 27 23</p>\n<p>34 33 39</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;1234567890QWERTYUIOPASDFGHJKL&#123;ZXCVBNM_-&#125;&#x27;</span></span><br><span class=\"line\">b = [<span class=\"number\">26</span>,<span class=\"number\">11</span>,<span class=\"number\">10</span>,<span class=\"number\">25</span>,<span class=\"number\">38</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">12</span>,<span class=\"number\">28</span>,<span class=\"number\">38</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">13</span>,<span class=\"number\">28</span>,<span class=\"number\">38</span>,<span class=\"number\">32</span>,<span class=\"number\">24</span>,<span class=\"number\">21</span>,<span class=\"number\">11</span>,<span class=\"number\">38</span>,<span class=\"number\">16</span>,<span class=\"number\">23</span>,<span class=\"number\">13</span>,<span class=\"number\">17</span>,<span class=\"number\">38</span>,<span class=\"number\">31</span>,<span class=\"number\">16</span>,<span class=\"number\">15</span>,<span class=\"number\">2</span>,<span class=\"number\">38</span>,<span class=\"number\">15</span>,<span class=\"number\">25</span>,<span class=\"number\">27</span>,<span class=\"number\">27</span>,<span class=\"number\">38</span>,<span class=\"number\">27</span>,<span class=\"number\">23</span>,<span class=\"number\">34</span>,<span class=\"number\">33</span>,<span class=\"number\">39</span>]</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;SECCON&#123;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> b:</span><br><span class=\"line\">    flag += a[i]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\"># SECCON&#123;JWQH-58EL-QWRL-CGSW-UFRI-XUY3-YHKK-KFBV&#125; 没交过，感觉可能错了一两位？但是确实不想debug了先就这样</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"xuyao\"><a class=\"markdownIt-Anchor\" href=\"#xuyao\">#</a> xuyao</h4>\n<p>一开始以为混淆的是 check 部分逻辑，因为确实有点点奇怪</p>\n<p>结果混淆的是加密，将 SM4 的盒换成 AES 的 sbox 了（属于看 wp 看的，确实识别加密这块不熟悉 qaq）</p>\n<p>回来动调硬看一下可以发现这里 <code>Feistel</code>  的轮数都不对</p>\n<p><img loading=\"lazy\" data-src=\"seccon-2023/image-20230919154214378.png\" alt=\"image-20230919154214378\"></p>\n<p>这里旋转的位数改了：</p>\n<p><img loading=\"lazy\" data-src=\"seccon-2023/image-20230919160104814.png\" alt=\"image-20230919160104814\"></p>\n<p>然后抄一个 r3 的 exp 吧，把表换一下，改天得再重新学学 sm4 算法了：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SM4_ENCRYPT 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SM4_DECRYPT 0</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> mode; <span class=\"comment\">/*!&lt; encrypt/decrypt */</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">long</span> sk[<span class=\"number\">32</span>]; <span class=\"comment\">/*!&lt; SM4 subkeys */</span></span><br><span class=\"line\">&#125; sm4_context;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">sm4_setkey_enc</span><span class=\"params\">(sm4_context *ctx, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> key[<span class=\"number\">16</span>])</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">sm4_setkey_dec</span><span class=\"params\">(sm4_context *ctx, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> key[<span class=\"number\">16</span>])</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">sm4_crypt_ecb</span><span class=\"params\">(sm4_context *ctx, <span class=\"type\">int</span> mode, <span class=\"type\">int</span> length, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">sm4_crypt_cbc</span><span class=\"params\">(sm4_context *ctx, <span class=\"type\">int</span> mode, <span class=\"type\">int</span> length, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> iv[<span class=\"number\">16</span>],</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output)</span></span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> GET_ULONG_BE</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> GET_ULONG_BE(n, b, i) \\</span></span><br><span class=\"line\"><span class=\"meta\">&#123; \\</span></span><br><span class=\"line\"><span class=\"meta\">(n) = ((unsigned long)(b)[(i)] &lt;&lt; 24) | \\</span></span><br><span class=\"line\"><span class=\"meta\">((unsigned long)(b)[(i) + 1] &lt;&lt; 16) | \\</span></span><br><span class=\"line\"><span class=\"meta\">((unsigned long)(b)[(i) + 2] &lt;&lt; 8) | ((unsigned long)(b)[(i) + 3]); \\</span></span><br><span class=\"line\"><span class=\"meta\">&#125;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> PUT_ULONG_BE</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PUT_ULONG_BE(n, b, i) \\</span></span><br><span class=\"line\"><span class=\"meta\">&#123; \\</span></span><br><span class=\"line\"><span class=\"meta\">(b)[(i)] = (unsigned char)((n) &gt;&gt; 24); \\</span></span><br><span class=\"line\"><span class=\"meta\">(b)[(i) + 1] = (unsigned char)((n) &gt;&gt; 16); \\</span></span><br><span class=\"line\"><span class=\"meta\">(b)[(i) + 2] = (unsigned char)((n) &gt;&gt; 8); \\</span></span><br><span class=\"line\"><span class=\"meta\">(b)[(i) + 3] = (unsigned char)((n)); \\</span></span><br><span class=\"line\"><span class=\"meta\">&#125;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SHL(x, n) (((x)&amp;0xFFFFFFFF) &lt;&lt; n)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ROTL(x, n) (SHL((x), n) | ((x) &gt;&gt; (32 - n)))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SWAP(a, b) \\</span></span><br><span class=\"line\"><span class=\"meta\">&#123; \\</span></span><br><span class=\"line\"><span class=\"meta\">unsigned long t = a; \\</span></span><br><span class=\"line\"><span class=\"meta\">a = b; \\</span></span><br><span class=\"line\"><span class=\"meta\">b = t; \\</span></span><br><span class=\"line\"><span class=\"meta\">t = 0; \\</span></span><br><span class=\"line\"><span class=\"meta\">&#125;</span></span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">const</span> <span class=\"type\">unsigned</span> <span class=\"type\">char</span> SboxTable[<span class=\"number\">16</span>][<span class=\"number\">16</span>] = &#123;</span><br><span class=\"line\">  <span class=\"number\">0x63</span>, <span class=\"number\">0x7C</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x7B</span>, <span class=\"number\">0xF2</span>, <span class=\"number\">0x6B</span>, <span class=\"number\">0x6F</span>, <span class=\"number\">0xC5</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x2B</span>,</span><br><span class=\"line\">  <span class=\"number\">0xFE</span>, <span class=\"number\">0xD7</span>, <span class=\"number\">0xAB</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0xCA</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0xC9</span>, <span class=\"number\">0x7D</span>, <span class=\"number\">0xFA</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xF0</span>,</span><br><span class=\"line\">  <span class=\"number\">0xAD</span>, <span class=\"number\">0xD4</span>, <span class=\"number\">0xA2</span>, <span class=\"number\">0xAF</span>, <span class=\"number\">0x9C</span>, <span class=\"number\">0xA4</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0xC0</span>, <span class=\"number\">0xB7</span>, <span class=\"number\">0xFD</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0x26</span>,</span><br><span class=\"line\">  <span class=\"number\">0x36</span>, <span class=\"number\">0x3F</span>, <span class=\"number\">0xF7</span>, <span class=\"number\">0xCC</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0xA5</span>, <span class=\"number\">0xE5</span>, <span class=\"number\">0xF1</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0xD8</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x15</span>,</span><br><span class=\"line\">  <span class=\"number\">0x04</span>, <span class=\"number\">0xC7</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0xC3</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x9A</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0xE2</span>,</span><br><span class=\"line\">  <span class=\"number\">0xEB</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0xB2</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x2C</span>, <span class=\"number\">0x1A</span>, <span class=\"number\">0x1B</span>, <span class=\"number\">0x6E</span>, <span class=\"number\">0x5A</span>, <span class=\"number\">0xA0</span>,</span><br><span class=\"line\">  <span class=\"number\">0x52</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0xD6</span>, <span class=\"number\">0xB3</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0xE3</span>, <span class=\"number\">0x2F</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xD1</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0xED</span>,</span><br><span class=\"line\">  <span class=\"number\">0x20</span>, <span class=\"number\">0xFC</span>, <span class=\"number\">0xB1</span>, <span class=\"number\">0x5B</span>, <span class=\"number\">0x6A</span>, <span class=\"number\">0xCB</span>, <span class=\"number\">0xBE</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x4A</span>, <span class=\"number\">0x4C</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xCF</span>,</span><br><span class=\"line\">  <span class=\"number\">0xD0</span>, <span class=\"number\">0xEF</span>, <span class=\"number\">0xAA</span>, <span class=\"number\">0xFB</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x4D</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0xF9</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x7F</span>,</span><br><span class=\"line\">  <span class=\"number\">0x50</span>, <span class=\"number\">0x3C</span>, <span class=\"number\">0x9F</span>, <span class=\"number\">0xA8</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0xA3</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x8F</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0x9D</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0xF5</span>,</span><br><span class=\"line\">  <span class=\"number\">0xBC</span>, <span class=\"number\">0xB6</span>, <span class=\"number\">0xDA</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0xFF</span>, <span class=\"number\">0xF3</span>, <span class=\"number\">0xD2</span>, <span class=\"number\">0xCD</span>, <span class=\"number\">0x0C</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0xEC</span>,</span><br><span class=\"line\">  <span class=\"number\">0x5F</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0xC4</span>, <span class=\"number\">0xA7</span>, <span class=\"number\">0x7E</span>, <span class=\"number\">0x3D</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0x5D</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x73</span>,</span><br><span class=\"line\">  <span class=\"number\">0x60</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x4F</span>, <span class=\"number\">0xDC</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x2A</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0xEE</span>, <span class=\"number\">0xB8</span>, <span class=\"number\">0x14</span>,</span><br><span class=\"line\">  <span class=\"number\">0xDE</span>, <span class=\"number\">0x5E</span>, <span class=\"number\">0x0B</span>, <span class=\"number\">0xDB</span>, <span class=\"number\">0xE0</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x3A</span>, <span class=\"number\">0x0A</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x5C</span>,</span><br><span class=\"line\">  <span class=\"number\">0xC2</span>, <span class=\"number\">0xD3</span>, <span class=\"number\">0xAC</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0xE4</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xE7</span>, <span class=\"number\">0xC8</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0x6D</span>,</span><br><span class=\"line\">  <span class=\"number\">0x8D</span>, <span class=\"number\">0xD5</span>, <span class=\"number\">0x4E</span>, <span class=\"number\">0xA9</span>, <span class=\"number\">0x6C</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xF4</span>, <span class=\"number\">0xEA</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0x7A</span>, <span class=\"number\">0xAE</span>, <span class=\"number\">0x08</span>,</span><br><span class=\"line\">  <span class=\"number\">0xBA</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0x2E</span>, <span class=\"number\">0x1C</span>, <span class=\"number\">0xA6</span>, <span class=\"number\">0xB4</span>, <span class=\"number\">0xC6</span>, <span class=\"number\">0xE8</span>, <span class=\"number\">0xDD</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0x1F</span>,</span><br><span class=\"line\">  <span class=\"number\">0x4B</span>, <span class=\"number\">0xBD</span>, <span class=\"number\">0x8B</span>, <span class=\"number\">0x8A</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0x3E</span>, <span class=\"number\">0xB5</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0xF6</span>, <span class=\"number\">0x0E</span>,</span><br><span class=\"line\">  <span class=\"number\">0x61</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xB9</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0xC1</span>, <span class=\"number\">0x1D</span>, <span class=\"number\">0x9E</span>, <span class=\"number\">0xE1</span>, <span class=\"number\">0xF8</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x11</span>,</span><br><span class=\"line\">  <span class=\"number\">0x69</span>, <span class=\"number\">0xD9</span>, <span class=\"number\">0x8E</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0x9B</span>, <span class=\"number\">0x1E</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xE9</span>, <span class=\"number\">0xCE</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0xDF</span>,</span><br><span class=\"line\">  <span class=\"number\">0x8C</span>, <span class=\"number\">0xA1</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0x0D</span>, <span class=\"number\">0xBF</span>, <span class=\"number\">0xE6</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x2D</span>, <span class=\"number\">0x0F</span>,</span><br><span class=\"line\">  <span class=\"number\">0xB0</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0xBB</span>, <span class=\"number\">0x16</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">const</span> <span class=\"type\">unsigned</span> <span class=\"type\">long</span> FK[<span class=\"number\">4</span>] = &#123;<span class=\"number\">0xFF324600</span>, <span class=\"number\">0x4F9A25B8</span>, <span class=\"number\">0x3CC7477C</span>,</span><br><span class=\"line\">  <span class=\"number\">0x0C0B9ECD</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">const</span> <span class=\"type\">unsigned</span> <span class=\"type\">long</span> CK[<span class=\"number\">32</span>] = &#123;</span><br><span class=\"line\">  <span class=\"number\">0xEC656287</span>, <span class=\"number\">0xD9A22031</span>, <span class=\"number\">0x01C7BCA8</span>, <span class=\"number\">0xABE7033B</span>, <span class=\"number\">0x313FE5DC</span>, <span class=\"number\">0x940FFAD0</span>,</span><br><span class=\"line\">  <span class=\"number\">0x176EDEB8</span>, <span class=\"number\">0x7C61B20E</span>, <span class=\"number\">0x9EAD452F</span>, <span class=\"number\">0x80E2C15B</span>, <span class=\"number\">0xBA500D7B</span>, <span class=\"number\">0xA2C0449F</span>,</span><br><span class=\"line\">  <span class=\"number\">0xBC0E774F</span>, <span class=\"number\">0x3E393763</span>, <span class=\"number\">0x43D46B3F</span>, <span class=\"number\">0x2ADEF404</span>, <span class=\"number\">0xCA884B87</span>, <span class=\"number\">0x3C953C45</span>,</span><br><span class=\"line\">  <span class=\"number\">0x7CDBDE63</span>, <span class=\"number\">0x6E995945</span>, <span class=\"number\">0xB6CF3655</span>, <span class=\"number\">0x8D60396A</span>, <span class=\"number\">0x9A496B38</span>, <span class=\"number\">0x9D87D81B</span>,</span><br><span class=\"line\">  <span class=\"number\">0x36FEDBC9</span>, <span class=\"number\">0x79882953</span>, <span class=\"number\">0x10611E15</span>, <span class=\"number\">0x0030AB3E</span>, <span class=\"number\">0x12503487</span>, <span class=\"number\">0x187E21FF</span>,</span><br><span class=\"line\">  <span class=\"number\">0x6D85127E</span>, <span class=\"number\">0xDF42C76C</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">unsigned</span> <span class=\"type\">char</span> <span class=\"title\">sm4Sbox</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span> inch)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *pTable = (<span class=\"type\">unsigned</span> <span class=\"type\">char</span> *)SboxTable;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> retVal = (<span class=\"type\">unsigned</span> <span class=\"type\">char</span>)(pTable[inch]);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> retVal;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"title\">sm4Lt</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">long</span> ka)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">long</span> bb = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">long</span> c = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> a[<span class=\"number\">4</span>];</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> b[<span class=\"number\">4</span>];</span><br><span class=\"line\">  <span class=\"built_in\">PUT_ULONG_BE</span>(ka, a, <span class=\"number\">0</span>)</span><br><span class=\"line\">  b[<span class=\"number\">0</span>] = <span class=\"built_in\">sm4Sbox</span>(a[<span class=\"number\">0</span>]);</span><br><span class=\"line\">  b[<span class=\"number\">1</span>] = <span class=\"built_in\">sm4Sbox</span>(a[<span class=\"number\">1</span>]);</span><br><span class=\"line\">  b[<span class=\"number\">2</span>] = <span class=\"built_in\">sm4Sbox</span>(a[<span class=\"number\">2</span>]);</span><br><span class=\"line\">  b[<span class=\"number\">3</span>] = <span class=\"built_in\">sm4Sbox</span>(a[<span class=\"number\">3</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">GET_ULONG_BE</span>(bb, b, <span class=\"number\">0</span>)</span><br><span class=\"line\">  c = bb ^ (<span class=\"built_in\">ROTL</span>(bb, <span class=\"number\">3</span>)) ^ (<span class=\"built_in\">ROTL</span>(bb, <span class=\"number\">14</span>)) ^ (<span class=\"built_in\">ROTL</span>(bb, <span class=\"number\">15</span>)) ^ (<span class=\"built_in\">ROTL</span>(bb, <span class=\"number\">9</span>));</span><br><span class=\"line\">  <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"title\">sm4F</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">long</span> x0, <span class=\"type\">unsigned</span> <span class=\"type\">long</span> x1, <span class=\"type\">unsigned</span> <span class=\"type\">long</span> x2,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">  <span class=\"type\">unsigned</span> <span class=\"type\">long</span> x3, <span class=\"type\">unsigned</span> <span class=\"type\">long</span> rk)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (x0 ^ <span class=\"built_in\">sm4Lt</span>(x1 ^ x2 ^ x3 ^ rk));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"title\">sm4CalciRK</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">long</span> ka)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">long</span> bb = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">long</span> rk = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> a[<span class=\"number\">4</span>];</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> b[<span class=\"number\">4</span>];</span><br><span class=\"line\">  <span class=\"built_in\">PUT_ULONG_BE</span>(ka, a, <span class=\"number\">0</span>)</span><br><span class=\"line\">  b[<span class=\"number\">0</span>] = <span class=\"built_in\">sm4Sbox</span>(a[<span class=\"number\">0</span>]);</span><br><span class=\"line\">  b[<span class=\"number\">1</span>] = <span class=\"built_in\">sm4Sbox</span>(a[<span class=\"number\">1</span>]);</span><br><span class=\"line\">  b[<span class=\"number\">2</span>] = <span class=\"built_in\">sm4Sbox</span>(a[<span class=\"number\">2</span>]);</span><br><span class=\"line\">  b[<span class=\"number\">3</span>] = <span class=\"built_in\">sm4Sbox</span>(a[<span class=\"number\">3</span>]);</span><br><span class=\"line\">  <span class=\"built_in\">GET_ULONG_BE</span>(bb, b, <span class=\"number\">0</span>)</span><br><span class=\"line\">  rk = bb ^ (<span class=\"built_in\">ROTL</span>(bb, <span class=\"number\">11</span>)) ^ (<span class=\"built_in\">ROTL</span>(bb, <span class=\"number\">25</span>));</span><br><span class=\"line\">  <span class=\"keyword\">return</span> rk;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">sm4_setkey</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">long</span> SK[<span class=\"number\">32</span>], <span class=\"type\">unsigned</span> <span class=\"type\">char</span> key[<span class=\"number\">16</span>])</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">long</span> MK[<span class=\"number\">4</span>];</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">long</span> k[<span class=\"number\">36</span>];</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">long</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">GET_ULONG_BE</span>(MK[<span class=\"number\">0</span>], key, <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"built_in\">GET_ULONG_BE</span>(MK[<span class=\"number\">1</span>], key, <span class=\"number\">4</span>);</span><br><span class=\"line\">  <span class=\"built_in\">GET_ULONG_BE</span>(MK[<span class=\"number\">2</span>], key, <span class=\"number\">8</span>);</span><br><span class=\"line\">  <span class=\"built_in\">GET_ULONG_BE</span>(MK[<span class=\"number\">3</span>], key, <span class=\"number\">12</span>);</span><br><span class=\"line\">  k[<span class=\"number\">0</span>] = MK[<span class=\"number\">0</span>] ^ FK[<span class=\"number\">0</span>];</span><br><span class=\"line\">  k[<span class=\"number\">1</span>] = MK[<span class=\"number\">1</span>] ^ FK[<span class=\"number\">1</span>];</span><br><span class=\"line\">  k[<span class=\"number\">2</span>] = MK[<span class=\"number\">2</span>] ^ FK[<span class=\"number\">2</span>];</span><br><span class=\"line\">  k[<span class=\"number\">3</span>] = MK[<span class=\"number\">3</span>] ^ FK[<span class=\"number\">3</span>];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (; i &lt; <span class=\"number\">32</span>; i++) &#123;</span><br><span class=\"line\">    k[i + <span class=\"number\">4</span>] = k[i] ^ (<span class=\"built_in\">sm4CalciRK</span>(k[i + <span class=\"number\">1</span>] ^ k[i + <span class=\"number\">2</span>] ^ k[i + <span class=\"number\">3</span>] ^ CK[i]));</span><br><span class=\"line\">    SK[i] = k[i + <span class=\"number\">4</span>];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">sm4_one_round</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">long</span> sk[<span class=\"number\">32</span>], <span class=\"type\">unsigned</span> <span class=\"type\">char</span> input[<span class=\"number\">16</span>],</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> output[<span class=\"number\">16</span>])</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">long</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">long</span> ulbuf[<span class=\"number\">36</span>];</span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(ulbuf, <span class=\"number\">0</span>, <span class=\"built_in\">sizeof</span>(ulbuf));</span><br><span class=\"line\">  <span class=\"built_in\">GET_ULONG_BE</span>(ulbuf[<span class=\"number\">0</span>], input, <span class=\"number\">0</span>)</span><br><span class=\"line\">  <span class=\"built_in\">GET_ULONG_BE</span>(ulbuf[<span class=\"number\">1</span>], input, <span class=\"number\">4</span>)</span><br><span class=\"line\">  <span class=\"built_in\">GET_ULONG_BE</span>(ulbuf[<span class=\"number\">2</span>], input, <span class=\"number\">8</span>)</span><br><span class=\"line\">  <span class=\"built_in\">GET_ULONG_BE</span>(ulbuf[<span class=\"number\">3</span>], input, <span class=\"number\">12</span>)</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (i &lt; <span class=\"number\">32</span>) &#123;</span><br><span class=\"line\">    ulbuf[i + <span class=\"number\">4</span>] =</span><br><span class=\"line\">    <span class=\"built_in\">sm4F</span>(ulbuf[i], ulbuf[i + <span class=\"number\">1</span>], ulbuf[i + <span class=\"number\">2</span>], ulbuf[i + <span class=\"number\">3</span>], sk[i]);</span><br><span class=\"line\">    i++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">PUT_ULONG_BE</span>(ulbuf[<span class=\"number\">35</span>], output, <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"built_in\">PUT_ULONG_BE</span>(ulbuf[<span class=\"number\">34</span>], output, <span class=\"number\">4</span>);</span><br><span class=\"line\">  <span class=\"built_in\">PUT_ULONG_BE</span>(ulbuf[<span class=\"number\">33</span>], output, <span class=\"number\">8</span>);</span><br><span class=\"line\">  <span class=\"built_in\">PUT_ULONG_BE</span>(ulbuf[<span class=\"number\">32</span>], output, <span class=\"number\">12</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">sm4_setkey_enc</span><span class=\"params\">(sm4_context *ctx, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> key[<span class=\"number\">16</span>])</span> </span>&#123;</span><br><span class=\"line\">  ctx-&gt;mode = SM4_ENCRYPT;</span><br><span class=\"line\">  <span class=\"built_in\">sm4_setkey</span>(ctx-&gt;sk, key);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">sm4_setkey_dec</span><span class=\"params\">(sm4_context *ctx, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> key[<span class=\"number\">16</span>])</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> i;</span><br><span class=\"line\">  ctx-&gt;mode = SM4_DECRYPT;</span><br><span class=\"line\">  <span class=\"built_in\">sm4_setkey</span>(ctx-&gt;sk, key);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">SWAP</span>(ctx-&gt;sk[i], ctx-&gt;sk[<span class=\"number\">31</span> - i]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">sm4_crypt_ecb</span><span class=\"params\">(sm4_context *ctx, <span class=\"type\">int</span> mode, <span class=\"type\">int</span> length, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">sm4_one_round</span>(ctx-&gt;sk, input, output);</span><br><span class=\"line\">    input += <span class=\"number\">16</span>;</span><br><span class=\"line\">    output += <span class=\"number\">16</span>;</span><br><span class=\"line\">    length -= <span class=\"number\">16</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">sm4_crypt_cbc</span><span class=\"params\">(sm4_context *ctx, <span class=\"type\">int</span> mode, <span class=\"type\">int</span> length, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> iv[<span class=\"number\">16</span>],</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *input, <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *output)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> i;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> temp[<span class=\"number\">16</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (mode == SM4_ENCRYPT) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i++)</span><br><span class=\"line\">        output[i] = (<span class=\"type\">unsigned</span> <span class=\"type\">char</span>)(input[i] ^ iv[i]);</span><br><span class=\"line\">      <span class=\"built_in\">sm4_one_round</span>(ctx-&gt;sk, output, output);</span><br><span class=\"line\">      <span class=\"built_in\">memcpy</span>(iv, output, <span class=\"number\">16</span>);</span><br><span class=\"line\">      input += <span class=\"number\">16</span>;</span><br><span class=\"line\">      output += <span class=\"number\">16</span>;</span><br><span class=\"line\">      length -= <span class=\"number\">16</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"comment\">/* SM4_DECRYPT */</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">memcpy</span>(temp, input, <span class=\"number\">16</span>);</span><br><span class=\"line\">      <span class=\"built_in\">sm4_one_round</span>(ctx-&gt;sk, input, output);</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i++)</span><br><span class=\"line\">        output[i] = (<span class=\"type\">unsigned</span> <span class=\"type\">char</span>)(output[i] ^ iv[i]);</span><br><span class=\"line\">      <span class=\"built_in\">memcpy</span>(iv, temp, <span class=\"number\">16</span>);</span><br><span class=\"line\">      input += <span class=\"number\">16</span>;</span><br><span class=\"line\">      output += <span class=\"number\">16</span>;</span><br><span class=\"line\">      length -= <span class=\"number\">16</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> key[<span class=\"number\">17</span>] = <span class=\"string\">&quot;SECCON CTF 2023!&quot;</span>;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> input[<span class=\"number\">112</span>] = &#123;</span><br><span class=\"line\">    <span class=\"number\">0xFE</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0xA8</span>, <span class=\"number\">0xC0</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0xFE</span>, <span class=\"number\">0xBC</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0xFC</span>, <span class=\"number\">0x9A</span>, <span class=\"number\">0x9B</span>, <span class=\"number\">0x31</span>,</span><br><span class=\"line\">    <span class=\"number\">0x9A</span>, <span class=\"number\">0xD8</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0xBB</span>, <span class=\"number\">0xA9</span>, <span class=\"number\">0xE1</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xFC</span>, <span class=\"number\">0xFC</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x9F</span>, <span class=\"number\">0x89</span>,</span><br><span class=\"line\">    <span class=\"number\">0x5F</span>, <span class=\"number\">0x4D</span>, <span class=\"number\">0x9F</span>, <span class=\"number\">0xE0</span>, <span class=\"number\">0x9F</span>, <span class=\"number\">0xAE</span>, <span class=\"number\">0x2A</span>, <span class=\"number\">0xCF</span>, <span class=\"number\">0x5E</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xCB</span>, <span class=\"number\">0xEC</span>,</span><br><span class=\"line\">    <span class=\"number\">0x3F</span>, <span class=\"number\">0xFF</span>, <span class=\"number\">0xB9</span>, <span class=\"number\">0xD1</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0x1B</span>, <span class=\"number\">0x9A</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xEC</span>, <span class=\"number\">0xD1</span>,</span><br><span class=\"line\">    <span class=\"number\">0xB4</span>, <span class=\"number\">0xFD</span>, <span class=\"number\">0xEA</span>, <span class=\"number\">0x2B</span>, <span class=\"number\">0xE2</span>, <span class=\"number\">0xF1</span>, <span class=\"number\">0x1A</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x3C</span>, <span class=\"number\">0x2E</span>, <span class=\"number\">0x7F</span>,</span><br><span class=\"line\">    <span class=\"number\">0x3F</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0x7B</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0xA3</span>, <span class=\"number\">0x4B</span>, <span class=\"number\">0x1B</span>, <span class=\"number\">0x5C</span>, <span class=\"number\">0x0F</span>, <span class=\"number\">0xBE</span>, <span class=\"number\">0xDD</span>, <span class=\"number\">0x98</span>,</span><br><span class=\"line\">    <span class=\"number\">0x5A</span>, <span class=\"number\">0x5B</span>, <span class=\"number\">0xD0</span>, <span class=\"number\">0x0A</span>, <span class=\"number\">0x3D</span>, <span class=\"number\">0x7E</span>, <span class=\"number\">0x2C</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x2A</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x87</span>,</span><br><span class=\"line\">    <span class=\"number\">0x5D</span>, <span class=\"number\">0xD9</span>, <span class=\"number\">0xB9</span>, <span class=\"number\">0x7F</span>, <span class=\"number\">0x3E</span>, <span class=\"number\">0x2E</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0xB7</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xDF</span>, <span class=\"number\">0xB1</span>,</span><br><span class=\"line\">    <span class=\"number\">0x27</span>, <span class=\"number\">0xC4</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xE2</span>, <span class=\"number\">0xD9</span>, <span class=\"number\">0x7A</span>, <span class=\"number\">0x9A</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x7C</span>, <span class=\"number\">0xDB</span>, <span class=\"number\">0xC6</span>, <span class=\"number\">0x1D</span>,</span><br><span class=\"line\">    <span class=\"number\">0x3C</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0xA3</span>, <span class=\"number\">0x21</span>&#125;;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">char</span> output[<span class=\"number\">112</span>];</span><br><span class=\"line\">  sm4_context ctx;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">long</span> i;</span><br><span class=\"line\">  <span class=\"comment\">// sm4_setkey_enc(&amp;ctx, key);</span></span><br><span class=\"line\">  <span class=\"comment\">// sm4_crypt_ecb(&amp;ctx, 1, 64, input, output);</span></span><br><span class=\"line\">  <span class=\"comment\">// for (i = 0; i &lt; 64; i++)</span></span><br><span class=\"line\">  <span class=\"comment\">// printf(&quot;%02x &quot;, output[i]);</span></span><br><span class=\"line\">  <span class=\"comment\">// printf(&quot;\\n&quot;);</span></span><br><span class=\"line\">  <span class=\"built_in\">sm4_setkey_dec</span>(&amp;ctx, key);</span><br><span class=\"line\">  <span class=\"built_in\">sm4_crypt_ecb</span>(&amp;ctx, <span class=\"number\">0</span>, <span class=\"number\">112</span>, input, output);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">112</span>; i++)</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, output[i]);</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"optinimize\"><a class=\"markdownIt-Anchor\" href=\"#optinimize\">#</a> optinimize</h4>\n<p>第一次见的 nim 编译产物，抽象是有点抽象的，尤其这个符号表（有点当年第一次见 rust 的美感）</p>\n<p>主动态来看，发现它输出 flag 的几位后就卡住了，本来想着是不是要考模拟执行，然后发现应该就是手动把整个流程复现出来，让他跑就完了</p>\n<p>调一下发现主要就是在 <code>Q_main</code>  里面的 <code>P_main</code>  卡住的</p>\n<p>然后不会了，只得看 wp…555555555555…</p>\n<p>这是模拟的代码，一样是跑不出来的（注意 dump 的时候都是 QWORD 格式，可以自己处理一下）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">P</span>(<span class=\"params\">i: <span class=\"built_in\">int</span></span>):</span><br><span class=\"line\">    num1 = <span class=\"number\">3</span></span><br><span class=\"line\">    num2 = <span class=\"number\">0</span></span><br><span class=\"line\">    num3 = <span class=\"number\">2</span></span><br><span class=\"line\">    num4 = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> i == num4:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num1</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        num5 = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> i == num5:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> num2</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            num6 = <span class=\"number\">2</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> i == num6:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> num3</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                num7 = <span class=\"number\">2</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> num7 &lt; i:</span><br><span class=\"line\">                    j = i</span><br><span class=\"line\">                    num8 = <span class=\"number\">2</span></span><br><span class=\"line\">                    <span class=\"keyword\">while</span> num8 &lt; j:</span><br><span class=\"line\">                        v98 = num1 + num2</span><br><span class=\"line\">                        num1 = num2</span><br><span class=\"line\">                        num2 = num3</span><br><span class=\"line\">                        num3 = v98</span><br><span class=\"line\">                        j -= <span class=\"number\">1</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span> num3</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Q</span>(<span class=\"params\">n: <span class=\"built_in\">int</span></span>):</span><br><span class=\"line\">    i = num = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt; n:</span><br><span class=\"line\">        num += <span class=\"number\">1</span></span><br><span class=\"line\">        v63 = P(num) % num</span><br><span class=\"line\">        <span class=\"keyword\">if</span> v63 == <span class=\"number\">0</span>:</span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\">ns = [<span class=\"number\">0x000000000000004A</span>, <span class=\"number\">0x0000000000000055</span>, <span class=\"number\">0x000000000000006F</span>, <span class=\"number\">0x0000000000000079</span>, <span class=\"number\">0x0000000000000080</span>, <span class=\"number\">0x0000000000000095</span>, <span class=\"number\">0x00000000000000AE</span>, <span class=\"number\">0x00000000000000BF</span>, <span class=\"number\">0x00000000000000C7</span>, <span class=\"number\">0x00000000000000D5</span>, <span class=\"number\">0x0000000000000306</span>, <span class=\"number\">0x0000000000001AC8</span>, <span class=\"number\">0x00000000000024BA</span>, <span class=\"number\">0x0000000000003D00</span>, <span class=\"number\">0x0000000000004301</span>, <span class=\"number\">0x0000000000005626</span>, <span class=\"number\">0x0000000000006AD9</span>, <span class=\"number\">0x0000000000007103</span>, <span class=\"number\">0x000000000000901B</span>, <span class=\"number\">0x0000000000009E03</span>, <span class=\"number\">0x00000000001E5FB6</span>, <span class=\"number\">0x000000000026F764</span>, <span class=\"number\">0x000000000030BD9E</span>, <span class=\"number\">0x0000000000407678</span>, <span class=\"number\">0x00000000005B173B</span>, <span class=\"number\">0x00000000006FE3B1</span>, <span class=\"number\">0x000000000078EF25</span>, <span class=\"number\">0x0000000000858E5F</span>, <span class=\"number\">0x000000000098C639</span>, <span class=\"number\">0x0000000000AD6AF6</span>, <span class=\"number\">0x0000000001080096</span>, <span class=\"number\">0x00000000018E08CD</span>, <span class=\"number\">0x0000000001BB6107</span>, <span class=\"number\">0x0000000001F50FF1</span>, <span class=\"number\">0x00000000025C6327</span>, <span class=\"number\">0x0000000002A971B6</span>, <span class=\"number\">0x0000000002D68493</span>, <span class=\"number\">0x000000000362F0C0</span>, <span class=\"number\">0x0000000003788EAD</span>, <span class=\"number\">0x0000000003CAA8ED</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">cs = [<span class=\"number\">0x3C</span>,<span class=\"number\">0xF4</span>,<span class=\"number\">0x1A</span>,<span class=\"number\">0xD0</span>,<span class=\"number\">0x8A</span>,<span class=\"number\">0x17</span>,<span class=\"number\">0x7C</span>,<span class=\"number\">0x4C</span>,<span class=\"number\">0xDF</span>,<span class=\"number\">0x21</span>,<span class=\"number\">0xDF</span>,<span class=\"number\">0xB0</span>,<span class=\"number\">0x12</span>,<span class=\"number\">0xB8</span>,<span class=\"number\">0x4E</span>,<span class=\"number\">0xFA</span>,<span class=\"number\">0xD9</span>,<span class=\"number\">0x2D</span>,<span class=\"number\">0x66</span>,<span class=\"number\">0xFA</span>,<span class=\"number\">0xD4</span>,<span class=\"number\">0x95</span>,<span class=\"number\">0xF0</span>,<span class=\"number\">0x66</span>,<span class=\"number\">0x6D</span>,<span class=\"number\">0xCE</span>,<span class=\"number\">0x69</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x7D</span>,<span class=\"number\">0x95</span>,<span class=\"number\">0xEA</span>,<span class=\"number\">0xD9</span>,<span class=\"number\">0x0A</span>,<span class=\"number\">0xEB</span>,<span class=\"number\">0x27</span>,<span class=\"number\">0x63</span>,<span class=\"number\">0x75</span>,<span class=\"number\">0x11</span>,<span class=\"number\">0x37</span>,<span class=\"number\">0xD4</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(cs)):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>((Q(ns[i]) &amp; <span class=\"number\">0xff</span>) ^ cs[i]), end=<span class=\"string\">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>唉然后是优化，oi 题来了… 没太看懂，贴个 wp 吧…（r3 大哥确实太高手了）</p>\n<p><img loading=\"lazy\" data-src=\"seccon-2023/image-20230919171428466.png\" alt=\"image-20230919171428466\"></p>\n",
            "tags": [
                "re"
            ]
        },
        {
            "id": "https://demoyao100.github.io/2023/09/13/%E9%95%BF%E5%9F%8E%E6%9D%AF2023/",
            "url": "https://demoyao100.github.io/2023/09/13/%E9%95%BF%E5%9F%8E%E6%9D%AF2023/",
            "title": "长城杯2023",
            "date_published": "2023-09-13T13:43:57.000Z",
            "content_html": "<h6 id=\"prefacere比较容易\"><a class=\"markdownIt-Anchor\" href=\"#prefacere比较容易\">#</a> PREFACE：RE 比较容易</h6>\n<h6 id=\"ps-初赛猛猛做最后是第一决赛线下直接不会了赛后仨小时出了re1一小时出的re2只能说离开网络和gpt的moyaoxue一事无成\"><a class=\"markdownIt-Anchor\" href=\"#ps-初赛猛猛做最后是第一决赛线下直接不会了赛后仨小时出了re1一小时出的re2只能说离开网络和gpt的moyaoxue一事无成\">#</a> ps. 初赛猛猛做最后是第一，决赛线下直接不会了，赛后仨小时出了 re1 一小时出的 re2，只能说离开网络和 gpt 的 moyaoxue 一事无成</h6>\n<span id=\"more\"></span>\n<p>初赛：</p>\n<h3 id=\"vvm\"><a class=\"markdownIt-Anchor\" href=\"#vvm\">#</a> vvm</h3>\n<p>简单的 vm，opcode 很少直接可以看出来逻辑</p>\n<p><img loading=\"lazy\" data-src=\"%E9%95%BF%E5%9F%8E%E6%9D%AF2023/image-20230913214608382.png\" alt=\"image-20230913214608382\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enc = [  <span class=\"number\">126</span>,  <span class=\"number\">120</span>,  <span class=\"number\">117</span>,  <span class=\"number\">127</span>,  <span class=\"number\">107</span>,  <span class=\"number\">82</span>,  <span class=\"number\">117</span>,  <span class=\"number\">114</span>,  <span class=\"number\">109</span>,  <span class=\"number\">119</span>,  <span class=\"number\">78</span>,  <span class=\"number\">121</span>,  <span class=\"number\">121</span>,  <span class=\"number\">121</span>,  <span class=\"number\">119</span>,  <span class=\"number\">68</span>,  <span class=\"number\">98</span>,  <span class=\"number\">36</span>,  <span class=\"number\">96</span>,  <span class=\"number\">113</span>,  <span class=\"number\">115</span>,  <span class=\"number\">96</span>,  <span class=\"number\">53</span>,  <span class=\"number\">105</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> enc:</span><br><span class=\"line\">    i ^= <span class=\"number\">0x16</span></span><br><span class=\"line\">    i -= <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(i),end = <span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"ezsocket\"><a class=\"markdownIt-Anchor\" href=\"#ezsocket\">#</a> ezSocket</h3>\n<p>字节码逆向，通信过程的 sm4 和 rsa 都不需要管，只是信道加解密内容，只需要爆破六位 key 对比 sha256 即可</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Cipher <span class=\"keyword\">import</span> DES</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> itertools</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"comment\"># import owiener</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    charset = string.digits + <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> itertools.product(charset, repeat=<span class=\"number\">6</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        key = <span class=\"string\">&#x27;&#x27;</span>.join(i)</span><br><span class=\"line\">        key += <span class=\"string\">&#x27;ffffffffff&#x27;</span></span><br><span class=\"line\">        key = key.encode()</span><br><span class=\"line\">        a = hashlib.sha256(key).hexdigest().encode()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a == <span class=\"string\">b&#x27;fdce9fbba473a2e47c14c72a78dcf62a28f0259847d7910ecb18a0af80983693&#x27;</span>):</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(key)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>决赛</p>\n<h2 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> RE</h2>\n<h4 id=\"file\"><a class=\"markdownIt-Anchor\" href=\"#file\">#</a> file</h4>\n<p>一个类 lz77 压缩的压缩算法，改变的地方在于滑块长度固定二</p>\n<p>具体规则是：建立缓存</p>\n<p><img loading=\"lazy\" data-src=\"%E9%95%BF%E5%9F%8E%E6%9D%AF2023/image-20230916212036353.png\" alt=\"image-20230916212036353\"></p>\n<p>每次出现新的双字节（两个 ascii，即滑块长），则在该字节前面加一 bit 的’1’，并存入缓冲区，如果在缓存找到已有，则在前面加 8bit 的’0’，然后下面 8bit 做填充和寻址（在缓存内找到相应的双字节）</p>\n<p>(脚本不全，解压部分是手动试的，因为真正压缩的地方只有两处)：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">&#x27;1011001101011011001011000011011001111011110111001101001011001001011001101001101101001110001001100111011001001001100101001011011001101111011000111001100111001100011001011011001100111001100001001110001011000111001011011011000111001100101001100011001101111001011011001100011011001001001101111011001000000000000110000000000001001000010011010010011010010011001110110001110111110100&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">i = <span class=\"number\">0</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">j = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(i&lt; <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> a[i] == <span class=\"string\">&#x27;0&#x27;</span>:</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\">        i += <span class=\"number\">12</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> :</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">int</span>(a[i:i+<span class=\"number\">8</span>], <span class=\"number\">2</span>))</span><br><span class=\"line\">        i += <span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#   flag&#123;4df683d2-7c31-308c-c217-1d7d0817443c&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"your_emb\"><a class=\"markdownIt-Anchor\" href=\"#your_emb\">#</a> your_emb</h5>\n<p>一点一点硬看汇编，发现 check 前面有 xor 操作，这里的 xor 应该是 getkey 访问失败返回得到的，即： <code>connection refused</code></p>\n<p><img loading=\"lazy\" data-src=\"%E9%95%BF%E5%9F%8E%E6%9D%AF2023/image-20230916212956794.png\" alt=\"image-20230916212956794\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enc = [  <span class=\"number\">0x05</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x0F</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0x1E</span>, <span class=\"number\">0x5B</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x5C</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0x0F</span>,</span><br><span class=\"line\">  <span class=\"number\">0x10</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x4B</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x4E</span>, <span class=\"number\">0x5B</span>,</span><br><span class=\"line\">  <span class=\"number\">0x08</span>, <span class=\"number\">0x5C</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0x4E</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0x0D</span>, <span class=\"number\">0x5C</span>, <span class=\"number\">0x0D</span>, <span class=\"number\">0x0D</span>, <span class=\"number\">0x16</span>,</span><br><span class=\"line\">  <span class=\"number\">0x5C</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0x5D</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x5D</span>, <span class=\"number\">0x5C</span>,</span><br><span class=\"line\">  <span class=\"number\">0x50</span>, <span class=\"number\">0x1E</span>]</span><br><span class=\"line\">key = <span class=\"string\">&#x27;connection refused&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(enc)):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(enc[i] ^ <span class=\"built_in\">ord</span>(key[i % <span class=\"built_in\">len</span>(key)])),end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># flag&#123;8f5fa013-b331-4f22-ad3c-d9c6229a6325&#125;</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "re"
            ]
        },
        {
            "id": "https://demoyao100.github.io/2023/08/26/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E4%BB%A5%E5%8F%8A%E5%85%B6%E4%BB%96%E6%9E%B6%E6%9E%84%E9%80%86%E5%90%91%E5%88%9D%E6%8E%A2/",
            "url": "https://demoyao100.github.io/2023/08/26/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E4%BB%A5%E5%8F%8A%E5%85%B6%E4%BB%96%E6%9E%B6%E6%9E%84%E9%80%86%E5%90%91%E5%88%9D%E6%8E%A2/",
            "title": "交叉编译以及其他架构逆向初探",
            "date_published": "2023-08-26T13:00:20.000Z",
            "content_html": "<h6 id=\"preface-蓝帽杯初赛2023题目没做出来理论上能出实际上没时间就算有时间估计也不会去看那么多汇编但是既然结合0ctf2021也有一个类似折磨的pwn题虽然那个题很多种意义上说其实好很多即使我还是偏re手不过感觉还是有很多东西要学以及刚学到浅记录一下\"><a class=\"markdownIt-Anchor\" href=\"#preface-蓝帽杯初赛2023题目没做出来理论上能出实际上没时间就算有时间估计也不会去看那么多汇编但是既然结合0ctf2021也有一个类似折磨的pwn题虽然那个题很多种意义上说其实好很多即使我还是偏re手不过感觉还是有很多东西要学以及刚学到浅记录一下\">#</a> preface: 蓝帽杯初赛 2023，题目没做出来，理论上能出，实际上没时间，就算有时间估计也不会去看那么多汇编，但是既然结合 0CTF2021 也有一个类似折磨的 pwn 题（虽然那个题很多种意义上说其实好很多，即使我还是偏 re 手）不过感觉还是有很多东西要学以及刚学到，浅记录一下。</h6>\n<span id=\"more\"></span>\n<h5 id=\"一点前置知识iot安全研究视角的交叉编译-clang裁缝店-xuanxuanblingblinggithubio\"><a class=\"markdownIt-Anchor\" href=\"#一点前置知识iot安全研究视角的交叉编译-clang裁缝店-xuanxuanblingblinggithubio\">#</a> 一点前置知识：<a href=\"https://xuanxuanblingbling.github.io/ctf/tools/2021/02/16/cross/\">IoT 安全研究视角的交叉编译 | Clang 裁缝店 (xuanxuanblingbling.github.io)</a></h5>\n<h5 id=\"这两片可以结合着看看后面那篇接近我的主要思路but-failed-qaq0ctf-tctf-2021-tile-clang裁缝店-xuanxuanblingblinggithubio-ctf20210703_0ctf_tctf_2021_qualstile-at-master-mephi42ctf-githubcom\"><a class=\"markdownIt-Anchor\" href=\"#这两片可以结合着看看后面那篇接近我的主要思路but-failed-qaq0ctf-tctf-2021-tile-clang裁缝店-xuanxuanblingblinggithubio-ctf20210703_0ctf_tctf_2021_qualstile-at-master-mephi42ctf-githubcom\">#</a> 这两片可以结合着看看（后面那篇接近我的主要思路，but failed. QAQ）<a href=\"https://xuanxuanblingbling.github.io/ctf/pwn/2021/07/05/tile/\">0CTF / TCTF 2021 tile | Clang 裁缝店 (xuanxuanblingbling.github.io)</a>  |  <a href=\"https://github.com/mephi42/ctf/tree/master/2021.07.03_0CTF_TCTF_2021_Quals/tile\">ctf/2021.07.03_0CTF_TCTF_2021_Quals/tile at master · mephi42/ctf (github.com)</a></h5>\n<h5 id=\"基本流程搭建qemu环境尝试gdb调试发现缺so尤其稀有架构的so挺麻烦的\"><a class=\"markdownIt-Anchor\" href=\"#基本流程搭建qemu环境尝试gdb调试发现缺so尤其稀有架构的so挺麻烦的\">#</a> 基本流程：搭建 qemu 环境尝试 gdb 调试（发现缺 so，尤其稀有架构的 so 挺麻烦的）</h5>\n<h5 id=\"objdump切换架构硬看汇编结合ida识别的段猜比obj-d-的信息稍微清楚一点不过要记得\"><a class=\"markdownIt-Anchor\" href=\"#objdump切换架构硬看汇编结合ida识别的段猜比obj-d-的信息稍微清楚一点不过要记得\">#</a> objdump 切换架构硬看汇编，结合 ida 识别的段猜（比 obj -D 的信息稍微清楚一点，不过要记得）</h5>\n<h5 id=\"猜测是challenge1是0x7fchallenge2异或challenge3借助map做了什么操作怀疑是换序然后简单对字符处理\"><a class=\"markdownIt-Anchor\" href=\"#猜测是challenge1是0x7fchallenge2异或challenge3借助map做了什么操作怀疑是换序然后简单对字符处理\">#</a> 猜测是 <code>challenge1</code>  是 <code>&amp;0x7f</code> ， <code>challenge2</code>  异或， <code>challenge3</code>  借助 map 做了什么操作，怀疑是换序然后简单对字符处理…</h5>\n<h6 id=\"还学了这么个小知识点原生的qemu不支持nx故shellcode一把梭应该就行\"><a class=\"markdownIt-Anchor\" href=\"#还学了这么个小知识点原生的qemu不支持nx故shellcode一把梭应该就行\">#</a> 还学了这么个小知识点： <code>原生的qemu不支持NX，故shellcode一把梭应该就行</code></h6>\n<hr>\n<h5 id=\"本体搭建过程\"><a class=\"markdownIt-Anchor\" href=\"#本体搭建过程\">#</a> 本体搭建过程：</h5>\n<h4 id=\"-qemu运行过程虽然题目中是缺so的但是确实是这么个流程\"><a class=\"markdownIt-Anchor\" href=\"#-qemu运行过程虽然题目中是缺so的但是确实是这么个流程\">#</a> - qemu 运行过程（虽然题目中是缺 so 的，但是确实是这么个流程）</h4>\n<h5 id=\"sudo-apt-install-git-libglib20-dev-libfdt-dev-libpixman-1-dev-zlib1g-dev\"><a class=\"markdownIt-Anchor\" href=\"#sudo-apt-install-git-libglib20-dev-libfdt-dev-libpixman-1-dev-zlib1g-dev\">#</a>  <code>sudo apt install git libglib2.0-dev libfdt-dev libpixman-1-dev zlib1g-dev</code></h5>\n<h5 id=\"git-clone-httpsgitqemuorggitqemugit\"><a class=\"markdownIt-Anchor\" href=\"#git-clone-httpsgitqemuorggitqemugit\">#</a>  <code>git clone https://git.qemu.org/git/qemu.git</code></h5>\n<h5 id=\"cd-qemu\"><a class=\"markdownIt-Anchor\" href=\"#cd-qemu\">#</a>  <code>cd qemu</code></h5>\n<h5 id=\"git-checkout-v500\"><a class=\"markdownIt-Anchor\" href=\"#git-checkout-v500\">#</a> git checkout v5.0.0</h5>\n<h5 id=\"configure-target-listtilegx-linux-user\"><a class=\"markdownIt-Anchor\" href=\"#configure-target-listtilegx-linux-user\">#</a>  <code>./configure --target-list=tilegx-linux-user</code></h5>\n<h5 id=\"make\"><a class=\"markdownIt-Anchor\" href=\"#make\">#</a>  <code>make</code></h5>\n<h5 id=\"cd-tilegx-linux-user\"><a class=\"markdownIt-Anchor\" href=\"#cd-tilegx-linux-user\">#</a>  <code>cd tilegx-linux-user/</code></h5>\n<h5 id=\"qemu-tilegx-desktopnewfolderchall\"><a class=\"markdownIt-Anchor\" href=\"#qemu-tilegx-desktopnewfolderchall\">#</a>  <code>./qemu-tilegx ./Desktop/newFolder/chall</code></h5>\n<h4 id=\"-objdump配置过程\"><a class=\"markdownIt-Anchor\" href=\"#-objdump配置过程\">#</a> - objdump 配置过程：</h4>\n<h5 id=\"wget-httpsftpgnuorggnubinutilsbinutils-235targz\"><a class=\"markdownIt-Anchor\" href=\"#wget-httpsftpgnuorggnubinutilsbinutils-235targz\">#</a>  <code>wget https://ftp.gnu.org/gnu/binutils/binutils-2.35.tar.gz</code></h5>\n<h5 id=\"tar-xvf-binutils-235targz\"><a class=\"markdownIt-Anchor\" href=\"#tar-xvf-binutils-235targz\">#</a>  <code>tar xvf binutils-2.35.tar.gz</code></h5>\n<h5 id=\"cd-binutils-235\"><a class=\"markdownIt-Anchor\" href=\"#cd-binutils-235\">#</a>  <code>cd binutils-2.35</code></h5>\n<h5 id=\"mkdir-build-cd-build\"><a class=\"markdownIt-Anchor\" href=\"#mkdir-build-cd-build\">#</a>  <code>mkdir build &amp;&amp; cd build</code></h5>\n<h5 id=\"configure-targettilegx-linux-gnu\"><a class=\"markdownIt-Anchor\" href=\"#configure-targettilegx-linux-gnu\">#</a>  <code>../configure --target=tilegx-linux-gnu</code></h5>\n<h5 id=\"make-2\"><a class=\"markdownIt-Anchor\" href=\"#make-2\">#</a>  <code>make</code></h5>\n<h5 id=\"tilegx-linux-gnu-objdump-d-~desktopnewfolderchall-outputasm\"><a class=\"markdownIt-Anchor\" href=\"#tilegx-linux-gnu-objdump-d-~desktopnewfolderchall-outputasm\">#</a>  <code>tilegx-linux-gnu-objdump -d ~/Desktop/newFolder/chall &gt; output.asm</code></h5>\n<h5 id=\"即可获得文件的汇编\"><a class=\"markdownIt-Anchor\" href=\"#即可获得文件的汇编\">#</a> 即可获得文件的汇编</h5>\n",
            "tags": [
                "re"
            ]
        },
        {
            "id": "https://demoyao100.github.io/2023/07/18/junk-code-demo/",
            "url": "https://demoyao100.github.io/2023/07/18/junk-code-demo/",
            "title": "junk code demo",
            "date_published": "2023-07-17T16:48:59.000Z",
            "content_html": "<h6 id=\"大概是二三月份遇到了一个题出了一个有点意思的花想着可以看看对应这种花写了个简单的源码随机加花器-不是什么高深的技术但是也顺便把ida这类线性扫描反汇编和递归下降反汇编弄清楚点以后ida抽风的时候也更清楚点为啥\"><a class=\"markdownIt-Anchor\" href=\"#大概是二三月份遇到了一个题出了一个有点意思的花想着可以看看对应这种花写了个简单的源码随机加花器-不是什么高深的技术但是也顺便把ida这类线性扫描反汇编和递归下降反汇编弄清楚点以后ida抽风的时候也更清楚点为啥\">#</a> 大概是二三月份遇到了一个题出了一个有点意思的花，想着可以看看，对应这种花写了个简单的源码随机加花器。不是什么高深的技术，但是也顺便把 IDA 这类线性扫描反汇编和递归下降反汇编弄清楚点，<s>以后 IDA 抽风的时候也更清楚点为啥</s></h6>\n<span id=\"more\"></span>\n<h4 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理：</h4>\n<h6 id=\"来源于-idapro权威指南\"><a class=\"markdownIt-Anchor\" href=\"#来源于-idapro权威指南\">#</a> 来源于 IDAPro 权威指南</h6>\n<h5>\n<details> <summary>线性扫描反汇编</summary>\n<p><img loading=\"lazy\" data-src=\"junk-code-demo/image-20230718011401924.png\" alt=\"image-20230718011401924\"></p>\n</details>\n</h5>\n<h5>\n<details> <summary>递归下降反汇编</summary>\n<p><img loading=\"lazy\" data-src=\"junk-code-demo/image-20230718011457626.png\" alt=\"image-20230718011457626\"></p>\n<p><img loading=\"lazy\" data-src=\"junk-code-demo/image-20230718011531171.png\" alt=\"image-20230718011531171\"></p>\n<p><img loading=\"lazy\" data-src=\"junk-code-demo/image-20230718011544013.png\" alt=\"image-20230718011544013\"></p>\n</details>\n</h5>\n<h5 id=\"这里主要看递归下降反汇编方式\"><a class=\"markdownIt-Anchor\" href=\"#这里主要看递归下降反汇编方式\">#</a> 这里主要看递归下降反汇编方式</h5>\n<h5 id=\"首先明确idapro的反汇编均为静态进行-根据条件分支指令可以构造入门的junk-instructions如jzjnz或者永真假条件jzjnz类型注意后者在构造时需要考虑编译器优化问题\"><a class=\"markdownIt-Anchor\" href=\"#首先明确idapro的反汇编均为静态进行-根据条件分支指令可以构造入门的junk-instructions如jzjnz或者永真假条件jzjnz类型注意后者在构造时需要考虑编译器优化问题\">#</a> 首先明确 IDAPro 的反汇编均为静态进行。根据条件分支指令可以构造入门的 junk instructions 如 (jz+jnz) 或者永真 / 假条件 + jz/jnz 类型（注意：后者在构造时需要考虑编译器优化问题）</h5>\n<h5 id=\"实际上根据上面这个跳转问题就可以构造一种花在虚假的控制流中间加入诸如破坏栈帧的junk-code导致反编译失败-不过实践应该是没什么用的毕竟去虚假控制流的最常见思路就是模拟动态执行顺带就把花拿下了\"><a class=\"markdownIt-Anchor\" href=\"#实际上根据上面这个跳转问题就可以构造一种花在虚假的控制流中间加入诸如破坏栈帧的junk-code导致反编译失败-不过实践应该是没什么用的毕竟去虚假控制流的最常见思路就是模拟动态执行顺带就把花拿下了\">#</a> 实际上，根据上面这个跳转问题，就可以构造一种花，在虚假的控制流中间加入诸如破坏栈帧的 junk code，导致反编译失败。不过实践应该是没什么用的，毕竟去虚假控制流的最常见思路就是模拟动态执行，顺带就把花拿下了：）</h5>\n<h5 id=\"如果能理解这个最基本的例子原理大概可以找到一种构造反汇编的通式用构造永真条件跳转逻辑在产生的虚假的控制流中塞入junk-code使得反汇编失效\"><a class=\"markdownIt-Anchor\" href=\"#如果能理解这个最基本的例子原理大概可以找到一种构造反汇编的通式用构造永真条件跳转逻辑在产生的虚假的控制流中塞入junk-code使得反汇编失效\">#</a> 如果能理解这个最基本的例子原理，大概可以找到一种构造反汇编的通式： <code>用构造永真条件跳转逻辑，在产生的虚假的控制流中塞入junk code，使得反汇编失效</code></h5>\n<h5 id=\"然后配合一些小小的汇编知识就可以产生奇妙的效果\"><a class=\"markdownIt-Anchor\" href=\"#然后配合一些小小的汇编知识就可以产生奇妙的效果\">#</a> 然后，配合一些小小的汇编知识，就可以产生奇妙的效果</h5>\n<h5 id=\"例如call指令正常情况下不会指向其他call-retn间的地址但通过asm汇编内联可以让call指向一个最近的相对地址同时__不维护条件寄存器__通过该条件寄存器控制永真逻辑-当调用retn的时候返回call下面的条件寄存器会重复修改-中间的代码在ida优化过程中是假逻辑但构造运行两次后变为永真-可能有点抽象这里写了个小demojunkcodereadmemd-at-main-demoyao100junkcode-githubcom\"><a class=\"markdownIt-Anchor\" href=\"#例如call指令正常情况下不会指向其他call-retn间的地址但通过asm汇编内联可以让call指向一个最近的相对地址同时__不维护条件寄存器__通过该条件寄存器控制永真逻辑-当调用retn的时候返回call下面的条件寄存器会重复修改-中间的代码在ida优化过程中是假逻辑但构造运行两次后变为永真-可能有点抽象这里写了个小demojunkcodereadmemd-at-main-demoyao100junkcode-githubcom\">#</a> 例如，call 指令正常情况下不会指向其他 call retn 间的地址，但通过 asm 汇编内联，可以让 call 指向一个最近的相对地址，同时__不维护条件寄存器__，通过该条件寄存器控制永真逻辑。当调用 retn 的时候返回 call，下面的条件寄存器会重复修改。中间的代码在 IDA 优化过程中是假逻辑，但构造运行两次后变为永真。（[可能有点抽象，这里写了个小 demo](<a href=\"https://github.com/DeMoYao100/junkCode\">junkCode/README.md at main · DeMoYao100/junkCode (github.com)</a>)</h5>\n<h5 id=\"其实基本上看懂这个demo就能搞明白上面这个通式了这里修改寄存器-或者其它构造虚假控制流的方法可就多种多样了疑似是之前看过构造rop链劫持控制流的题无心之举导致的反编译失效也没必要深究遇到之后再分析就行\"><a class=\"markdownIt-Anchor\" href=\"#其实基本上看懂这个demo就能搞明白上面这个通式了这里修改寄存器-或者其它构造虚假控制流的方法可就多种多样了疑似是之前看过构造rop链劫持控制流的题无心之举导致的反编译失效也没必要深究遇到之后再分析就行\">#</a> 其实基本上看懂这个 demo，就能搞明白上面这个通式了，这里修改寄存器、或者其它构造虚假控制流的方法可就多种多样了（疑似是之前看过构造 rop 链劫持控制流的题，无心之举导致的反编译失效）也没必要深究，遇到之后再分析就行</h5>\n<h5 id=\"然后是函数指针篡改感觉一出现ida很容易抽风基本上就是动调的时候修就行除非恶意构造\"><a class=\"markdownIt-Anchor\" href=\"#然后是函数指针篡改感觉一出现ida很容易抽风基本上就是动调的时候修就行除非恶意构造\">#</a> 然后是函数指针篡改，感觉一出现 ida 很容易抽风，基本上就是动调的时候修就行（除非恶意构造）</h5>\n<h6 id=\"最后立个flag有空把ida反编译也写一篇ida反编译是真喜欢抽风啊-虽然这俩并不是啥必要学的东西也不难但是搞清楚一点确确实实在分析很多垃圾二进制汇编的时候有帮助\"><a class=\"markdownIt-Anchor\" href=\"#最后立个flag有空把ida反编译也写一篇ida反编译是真喜欢抽风啊-虽然这俩并不是啥必要学的东西也不难但是搞清楚一点确确实实在分析很多垃圾二进制汇编的时候有帮助\">#</a> 最后立个 flag，有空把 IDA 反编译也写一篇<s> ida 反编译是真喜欢抽风啊</s>。虽然这俩并不是啥必要学的东西，也不难，但是搞清楚一点确确实实在分析很多垃圾二进制汇编的时候有帮助</h6>\n",
            "tags": [
                "re"
            ]
        },
        {
            "id": "https://demoyao100.github.io/2022/11/06/capstone/",
            "url": "https://demoyao100.github.io/2022/11/06/capstone/",
            "title": "capstone",
            "date_published": "2022-11-06T05:52:10.000Z",
            "content_html": "<h6 id=\"preface\"><a class=\"markdownIt-Anchor\" href=\"#preface\">#</a> Preface:</h6>\n<h6 id=\"a-write-up-in-hnctf-use-capstone-to-solved-the-problem-maze-its-the-first-time-i-heard-of-it-so-i-am-writing-to-this-blog-for-later-review\"><a class=\"markdownIt-Anchor\" href=\"#a-write-up-in-hnctf-use-capstone-to-solved-the-problem-maze-its-the-first-time-i-heard-of-it-so-i-am-writing-to-this-blog-for-later-review\">#</a> A write up in hnctf use  <code>capstone</code>  to solved the problem  <code>maze</code> . It’s the first time I heard of it, so I am writing to this blog for later review.</h6>\n<h5 id=\"most-thing-i-write-can-be-found-in-official-file\"><a class=\"markdownIt-Anchor\" href=\"#most-thing-i-write-can-be-found-in-official-file\">#</a> Most thing I write can be found in <a href=\"http://www.capstone-engine.org/lang_python.html\">Official file</a>.</h5>\n<span id=\"more\"></span>\n<h5 id=\"an-example-you-can-try-before-reading\"><a class=\"markdownIt-Anchor\" href=\"#an-example-you-can-try-before-reading\">#</a> An example you can try before reading:</h5>\n<pre><code># test1.py\nfrom capstone import *\n\nCODE = b&quot;\\x55\\x48\\x8b\\x05\\xb8\\x13\\x00\\x00&quot;\n\nmd = Cs(CS_ARCH_X86, CS_MODE_64)\nfor i in md.disasm(CODE, 0x1000):\n    print(&quot;0x%x:\\t%s\\t%s&quot; %(i.address, i.mnemonic, i.op_str))\n\n# It's the official example, you can try to change the CODE and see what happens.(Such as add a few '\\x55' or '\\x48' or whatever you like)\n</code></pre>\n<p>Trying this problem, you get the basic idea how capstone, or rather, how a  <code>.exe</code>  file works. It translate the binary numbers into assembly language in a queue, and when you add some thing, the whole procedure might when wrong.(You may think thit is simple, but some time we just didn’t remember to relate the whole file with simple binary numbers like wht upper  <code>CODE</code> )</p>\n<p>We need to know what does the function mean:</p>\n<p>~to be continue</p>\n",
            "tags": [
                "re",
                "ctf"
            ]
        }
    ]
}