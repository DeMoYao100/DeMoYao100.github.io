{
    "version": "https://jsonfeed.org/version/1",
    "title": "rev@天枢 • All posts by \"python\" tag",
    "description": "Write down something interesting I met<br />\nFeel free to mail me if you have something wanted to talk about, plz\nmail: &lt;moyaoxue@outlook.com&gt;\n",
    "home_page_url": "https://demoyao100.github.io",
    "items": [
        {
            "id": "https://demoyao100.github.io/2023/08/23/%E5%88%9D%E6%8E%A2python-bytecode/",
            "url": "https://demoyao100.github.io/2023/08/23/%E5%88%9D%E6%8E%A2python-bytecode/",
            "title": "初探python bytecode",
            "date_published": "2023-08-23T06:54:54.000Z",
            "content_html": "<h6 id=\"preface起因是wmctf的一道python题包括了修复python字节码花指令和虚拟机等考点-算是萌新初见python花花了一上午学习修了花指令反编译不了不过可以获得字节码理论上手动反汇编得到python码就没问题了-但实际上这里的字节码结构也有点问题顺便从学长那里听闻了一下下antlr这种东西-然后手动翻译的伪代码也错漏百出最后是学长写了脚本给他自动化修了得以告一段落-不过确实得回来补补python的编译结构功课了\"><a class=\"anchor\" href=\"#preface起因是wmctf的一道python题包括了修复python字节码花指令和虚拟机等考点-算是萌新初见python花花了一上午学习修了花指令反编译不了不过可以获得字节码理论上手动反汇编得到python码就没问题了-但实际上这里的字节码结构也有点问题顺便从学长那里听闻了一下下antlr这种东西-然后手动翻译的伪代码也错漏百出最后是学长写了脚本给他自动化修了得以告一段落-不过确实得回来补补python的编译结构功课了\">#</a> preface: 起因是 wmctf 的一道 python 题，包括了修复 python 字节码花指令和虚拟机等考点。算是萌新初见 python 花，花了一上午学习修了花指令，反编译不了不过可以获得字节码，理论上手动反汇编得到 python 码就没问题了。但实际上这里的字节码结构也有点问题，顺便从学长那里听闻了一下下 antlr 这种东西。然后手动翻译的伪代码也错漏百出... 最后是学长写了脚本给他自动化修了得以告一段落。不过确实得回来补补 python 的编译结构功课了。</h6>\n<p><span id=\"more\"></span></p>\n<h5 id=\"题目是39的不过在这里就可以直接搜其他版本的也一样cpython-39\"><a class=\"anchor\" href=\"#题目是39的不过在这里就可以直接搜其他版本的也一样cpython-39\">#</a> 题目是 3.9 的，不过在这里就可以直接搜其他版本的也一样<a href=\"https://github.com/python/cpython/blob/3.9/Objects/codeobject.c\"> cpython 3.9</a></h5>\n<h5 id=\"image-20230823153127421\"><a class=\"anchor\" href=\"#image-20230823153127421\">#</a> <img loading=\"lazy\" data-src=\"%E5%88%9D%E6%8E%A2python-bytecode/image-20230823153127421.png\" alt=\"image-20230823153127421\"></h5>\n<h5 id=\"这里的co_code是字节码的长度标识在patch时需要注意修复长度其他标志位也需要注意赛时就是co_lnotab对齐问题导致的无法反编译\"><a class=\"anchor\" href=\"#这里的co_code是字节码的长度标识在patch时需要注意修复长度其他标志位也需要注意赛时就是co_lnotab对齐问题导致的无法反编译\">#</a> 这里的 co_code 是字节码的长度标识，在 patch 时需要注意修复长度，其他标志位也需要注意（赛时就是 co_lnotab 对齐问题导致的无法反编译）</h5>\n<p><img loading=\"lazy\" data-src=\"%E5%88%9D%E6%8E%A2python-bytecode/image-20230823154536966.png\" alt=\"image-20230823154536966\"></p>\n<h5 id=\"cpythonobjectslnotab_notestxt-at-39-pythoncpython-githubcom\"><a class=\"anchor\" href=\"#cpythonobjectslnotab_notestxt-at-39-pythoncpython-githubcom\">#</a> <a href=\"https://github.com/python/cpython/blob/3.9/Objects/lnotab_notes.txt\">cpython/Objects/lnotab_notes.txt at 3.9 · python/cpython (github.com)</a> 可以参考文档</h5>\n<h5 id=\"去花脚本r1mao那里偷来的\"><a class=\"anchor\" href=\"#去花脚本r1mao那里偷来的\">#</a> 去花脚本（R1mao 那里偷来的）：</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> dis</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> RightBack</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> marshal</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> types</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> graphviz <span class=\"token keyword\">import</span> Digraph</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_funcs</span><span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    funcs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> name <span class=\"token keyword\">in</span> <span class=\"token builtin\">dir</span><span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        obj <span class=\"token operator\">=</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> types<span class=\"token punctuation\">.</span>FunctionType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>           funcs<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> funcs</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_extend_size</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    ptr <span class=\"token operator\">=</span> offset</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        op <span class=\"token operator\">=</span> code<span class=\"token punctuation\">[</span>ptr<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">if</span> op <span class=\"token operator\">!=</span> dis<span class=\"token punctuation\">.</span>EXTENDED_ARG<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        ptr <span class=\"token operator\">+=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> ptr <span class=\"token operator\">-</span> offset</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">InstWrapper</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> prefix_insn <span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>dis<span class=\"token punctuation\">.</span>Instruction<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> main_insn <span class=\"token punctuation\">:</span> dis<span class=\"token punctuation\">.</span>Instruction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        self<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">=</span> main_insn<span class=\"token punctuation\">.</span>offset</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        self<span class=\"token punctuation\">.</span>prefix_insn <span class=\"token operator\">=</span> prefix_insn</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        self<span class=\"token punctuation\">.</span>main_insn <span class=\"token operator\">=</span> main_insn</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>prefix_insn<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            self<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">=</span> prefix_insn<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>offset</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        self<span class=\"token punctuation\">.</span>preds <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        self<span class=\"token punctuation\">.</span>succs <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">edge</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        v1<span class=\"token punctuation\">.</span>preds<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        self<span class=\"token punctuation\">.</span>succs<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>preds<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            n<span class=\"token punctuation\">.</span>succs<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>succs<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            n<span class=\"token punctuation\">.</span>preds<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prefix_insn<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">print_asm</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>succs<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>opcode <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> dis<span class=\"token punctuation\">.</span>hasjabs <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>opcode <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> dis<span class=\"token punctuation\">.</span>hasjrel<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>prefix_insn<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                result <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">.</span>opcode<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>arg<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            result <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>opcode<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>arg<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>arg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">return</span> result</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        s <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>succs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        ref_target <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> n<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                ref_target <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>offset</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        argval <span class=\"token operator\">=</span> ref_target</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>opcode <span class=\"token keyword\">in</span> dis<span class=\"token punctuation\">.</span>hasjrel<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            argval <span class=\"token operator\">=</span> ref_target <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">+</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prefix_insn<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        byte_size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prefix_insn<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        argval <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">**</span> <span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> byte_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        raw <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">.</span>to_bytes<span class=\"token punctuation\">(</span>argval<span class=\"token punctuation\">,</span> byte_size<span class=\"token punctuation\">,</span> byteorder<span class=\"token operator\">=</span><span class=\"token string\">'big'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prefix_insn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            result <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>dis<span class=\"token punctuation\">.</span>opmap<span class=\"token punctuation\">[</span><span class=\"token string\">'EXTENDED_ARG'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> raw<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        result <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>opcode<span class=\"token punctuation\">,</span> raw<span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prefix_insn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">return</span> result</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'%04d %s\\t(%s)'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>opname<span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>argval<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>argval <span class=\"token keyword\">else</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fix_invalid</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    raw_code <span class=\"token operator\">=</span> func<span class=\"token punctuation\">.</span>__code__<span class=\"token punctuation\">.</span>co_code</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    insn_map <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">for</span> insn <span class=\"token keyword\">in</span> dis<span class=\"token punctuation\">.</span>_get_instructions_bytes<span class=\"token punctuation\">(</span>raw_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        insn_map<span class=\"token punctuation\">[</span>insn<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> insn</pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    trace_result <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">trace_pc</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> insn_map<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token keyword\">nonlocal</span> trace_result</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token keyword\">assert</span> offset <span class=\"token keyword\">in</span> insn_map</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        extend_size <span class=\"token operator\">=</span> get_extend_size<span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        cur_size <span class=\"token operator\">=</span> extend_size <span class=\"token operator\">+</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        cur <span class=\"token operator\">=</span> insn_map<span class=\"token punctuation\">[</span>offset <span class=\"token operator\">+</span> extend_size<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token keyword\">if</span> offset <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> trace_result<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            trace_result<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>offset <span class=\"token punctuation\">:</span> cur_size<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token keyword\">if</span> cur<span class=\"token punctuation\">.</span>opname <span class=\"token operator\">==</span> <span class=\"token string\">'RETURN_VALUE'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token keyword\">elif</span> cur<span class=\"token punctuation\">.</span>opcode <span class=\"token keyword\">in</span> dis<span class=\"token punctuation\">.</span>hasjabs <span class=\"token operator\">+</span> dis<span class=\"token punctuation\">.</span>hasjrel<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            jump_target <span class=\"token operator\">=</span> cur<span class=\"token punctuation\">.</span>argval</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            <span class=\"token keyword\">if</span> cur<span class=\"token punctuation\">.</span>opname <span class=\"token operator\">==</span> <span class=\"token string\">'JUMP_FORWARD'</span> <span class=\"token keyword\">or</span> cur<span class=\"token punctuation\">.</span>opname <span class=\"token operator\">==</span> <span class=\"token string\">'JUMP_ABSOLUTE'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                trace_pc<span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> insn_map<span class=\"token punctuation\">,</span> jump_target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                trace_pc<span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> insn_map<span class=\"token punctuation\">,</span> jump_target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>                trace_pc<span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> insn_map<span class=\"token punctuation\">,</span> offset <span class=\"token operator\">+</span> cur_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            trace_pc<span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> insn_map<span class=\"token punctuation\">,</span> offset <span class=\"token operator\">+</span> cur_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    trace_pc<span class=\"token punctuation\">(</span>raw_code<span class=\"token punctuation\">,</span> insn_map<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    flat_mem <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>raw_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> trace_result<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>            flat_mem<span class=\"token punctuation\">[</span>k <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    new_code <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span> </pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token keyword\">for</span> d <span class=\"token keyword\">in</span> raw_code<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token keyword\">if</span> flat_mem<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>            new_code<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>            new_code<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>dis<span class=\"token punctuation\">.</span>opmap<span class=\"token punctuation\">[</span><span class=\"token string\">'NOP'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        idx <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    new_code <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>new_code<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token keyword\">return</span> new_code</pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">recompile</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> new_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    all_wrap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    worker <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    last <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token keyword\">for</span> insn <span class=\"token keyword\">in</span> dis<span class=\"token punctuation\">.</span>_get_instructions_bytes<span class=\"token punctuation\">(</span>new_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        <span class=\"token keyword\">if</span> insn<span class=\"token punctuation\">.</span>opname <span class=\"token operator\">==</span> <span class=\"token string\">'EXTENDED_ARG'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>            temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>insn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            inst <span class=\"token operator\">=</span> InstWrapper<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> insn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>            <span class=\"token keyword\">if</span> inst<span class=\"token punctuation\">.</span>offset <span class=\"token keyword\">in</span> worker<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>                <span class=\"token keyword\">for</span> other <span class=\"token keyword\">in</span> worker<span class=\"token punctuation\">[</span>inst<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>                    other<span class=\"token punctuation\">.</span>edge<span class=\"token punctuation\">(</span>inst<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>                worker<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span>inst<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>            <span class=\"token keyword\">if</span> last <span class=\"token keyword\">and</span> last<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>opname <span class=\"token operator\">!=</span> <span class=\"token string\">'RETURN_VALUE'</span> <span class=\"token keyword\">and</span> last<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>opname <span class=\"token operator\">!=</span> <span class=\"token string\">'JUMP_FORWARD'</span> <span class=\"token keyword\">and</span> last<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>opname <span class=\"token operator\">!=</span> <span class=\"token string\">'JUMP_ABSOLUTE'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>                last<span class=\"token punctuation\">.</span>edge<span class=\"token punctuation\">(</span>inst<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>            last <span class=\"token operator\">=</span> inst</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>            <span class=\"token keyword\">if</span> inst<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>opcode <span class=\"token keyword\">in</span> dis<span class=\"token punctuation\">.</span>hasjabs <span class=\"token operator\">+</span> dis<span class=\"token punctuation\">.</span>hasjrel<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"154\"></td><td><pre>                target <span class=\"token operator\">=</span> inst<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>argval</pre></td></tr><tr><td data-num=\"155\"></td><td><pre>                <span class=\"token keyword\">if</span> target <span class=\"token keyword\">in</span> all_wrap<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>                    inst<span class=\"token punctuation\">.</span>edge<span class=\"token punctuation\">(</span>all_wrap<span class=\"token punctuation\">[</span>target<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>                    <span class=\"token keyword\">if</span> target <span class=\"token keyword\">in</span> worker<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>                        worker<span class=\"token punctuation\">[</span>target<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>inst<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>                    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>                        worker<span class=\"token punctuation\">[</span>target<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>inst<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>            all_wrap<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>inst<span class=\"token punctuation\">.</span>offset <span class=\"token punctuation\">:</span> inst<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>            temp<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre></pre></td></tr><tr><td data-num=\"165\"></td><td><pre></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    all_wrap <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>all_wrap<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        to_remove <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> all_wrap<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>preds<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> n<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>                n<span class=\"token punctuation\">.</span>unlink<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>                to_remove<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>preds<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">and</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>succs<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">and</span> n<span class=\"token punctuation\">.</span>main_insn<span class=\"token punctuation\">.</span>opname <span class=\"token operator\">==</span> <span class=\"token string\">'JUMP_FORWARD'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>                n<span class=\"token punctuation\">.</span>unlink<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>                p <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>preds<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>                s <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>succs<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>                p<span class=\"token punctuation\">.</span>edge<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>                to_remove<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>to_remove<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>        <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> to_remove<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>            all_wrap<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>    entry_point <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> all_wrap<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>        <span class=\"token keyword\">if</span> i<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>            entry_point <span class=\"token operator\">=</span> i</pre></td></tr><tr><td data-num=\"188\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    visited <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span>cur <span class=\"token punctuation\">:</span> InstWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>        <span class=\"token keyword\">nonlocal</span> visited<span class=\"token punctuation\">,</span> offset</pre></td></tr><tr><td data-num=\"194\"></td><td><pre>        cur<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">=</span> offset</pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        offset <span class=\"token operator\">=</span> offset <span class=\"token operator\">+</span> cur<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>        succs <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">.</span>succs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> a<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        <span class=\"token keyword\">for</span> node <span class=\"token keyword\">in</span> succs<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>            <span class=\"token keyword\">if</span> node <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> visited<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>                visited<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>                visit<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>    visit<span class=\"token punctuation\">(</span>entry_point<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>    new_bytecode <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>    <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> all_wrap<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>        new_bytecode <span class=\"token operator\">+=</span> w<span class=\"token punctuation\">.</span>print_asm<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>new_bytecode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>    new_bytecode <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>new_bytecode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>    code <span class=\"token operator\">=</span> func<span class=\"token punctuation\">.</span>__code__</pre></td></tr><tr><td data-num=\"210\"></td><td><pre>    new_code <span class=\"token operator\">=</span> types<span class=\"token punctuation\">.</span>CodeType<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_argcount<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_posonlyargcount<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_kwonlyargcount<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_nlocals<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_stacksize<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_flags<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>        new_bytecode<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"218\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_consts<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_names<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_varnames<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_filename<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>        func<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_firstlineno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_lnotab<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_freevars<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>        code<span class=\"token punctuation\">.</span>co_cellvars</pre></td></tr><tr><td data-num=\"227\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>    dot <span class=\"token operator\">=</span> Digraph<span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>    <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> all_wrap<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>        dot<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"232\"></td><td><pre>    <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> all_wrap<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>        <span class=\"token keyword\">for</span> pred <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">.</span>preds<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>            dot<span class=\"token punctuation\">.</span>edge<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>    <span class=\"token comment\">#dot.view()</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>    <span class=\"token keyword\">return</span> new_code</pre></td></tr><tr><td data-num=\"237\"></td><td><pre></pre></td></tr><tr><td data-num=\"238\"></td><td><pre></pre></td></tr><tr><td data-num=\"239\"></td><td><pre><span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'RightBack.pyc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre><span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'RightBack_fix.pyc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre></pre></td></tr><tr><td data-num=\"244\"></td><td><pre><span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> get_funcs<span class=\"token punctuation\">(</span>RightBack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>    new_code <span class=\"token operator\">=</span> fix_invalid<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>    code_obj <span class=\"token operator\">=</span> recompile<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> new_code<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>    <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>RightBack<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">,</span> code_obj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>    byc <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>__name__ <span class=\"token operator\">+</span> <span class=\"token string\">'.pyc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>    byc<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x61\\x0D\\x0D\\x0A\\x00\\x00\\x00\\x00\\xC1\\xC5\\xC0\\x64\\x9C\\x27\\x00\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>    marshal<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>code_obj<span class=\"token punctuation\">,</span> byc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>    byc<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>    <span class=\"token comment\">#raw_code = f.__code__.co_code</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>    <span class=\"token comment\">#data = data.replace(raw_code, new_code)</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre></pre></td></tr><tr><td data-num=\"256\"></td><td><pre><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "re",
                "python"
            ]
        }
    ]
}