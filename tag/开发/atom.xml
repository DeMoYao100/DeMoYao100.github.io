<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://demoyao100.github.io</id>
    <title>Moyao の小屋 • Posts by &#34;开发&#34; tag</title>
    <link href="https://demoyao100.github.io" />
    <updated>2023-09-06T00:58:36.000Z</updated>
    <category term="re" />
    <category term="Android" />
    <category term="开发" />
    <category term="codeforces" />
    <category term="驱动" />
    <category term="electron" />
    <category term="docker" />
    <category term="cv" />
    <category term="杂文" />
    <category term="web" />
    <category term="jail" />
    <category term="IOT" />
    <category term="re Android linux" />
    <category term="web shiro" />
    <category term="re Android" />
    <category term="python" />
    <category term="hexo" />
    <category term="car" />
    <entry>
        <id>https://demoyao100.github.io/2023/09/06/electron-%E6%89%93%E5%8C%85/</id>
        <title>electron 打包</title>
        <link rel="alternate" href="https://demoyao100.github.io/2023/09/06/electron-%E6%89%93%E5%8C%85/"/>
        <content type="html">&lt;h6 id=&#34;preface小学期作业新加的需求原来没玩过记录一下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#preface小学期作业新加的需求原来没玩过记录一下&#34;&gt;#&lt;/a&gt; preface：小学期作业新加的需求，原来没玩过，记录一下&lt;/h6&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;[参考知乎](&lt;a href=&#34;https://zhuanlan.zhihu.com/p/430760821&#34;&gt;使用 Electron 给 Python 程序加上 GUI - 知乎 (zhihu.com)&lt;/a&gt;)&lt;/p&gt;
&lt;h5 id=&#34;1打包python文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1打包python文件&#34;&gt;#&lt;/a&gt; 1. 打包 python 文件&lt;/h5&gt;
&lt;h5 id=&#34;2修改js中调用python的代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2修改js中调用python的代码&#34;&gt;#&lt;/a&gt; 2. 修改 js 中调用 python 的代码&lt;/h5&gt;
&lt;h5 id=&#34;3构建文件并打包electron&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3构建文件并打包electron&#34;&gt;#&lt;/a&gt; 3. 构建文件并打包 electron&lt;/h5&gt;
&lt;hr&gt;
&lt;h5 id=&#34;1打包python文件-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1打包python文件-2&#34;&gt;#&lt;/a&gt; 1. 打包 python 文件&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;nuitka 打包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;pip install nuitka&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python -m nuitka frontend.py --follow-imports&lt;/code&gt;  (--follow-imports 会附带打包依赖)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pyinstaller&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;pyinstaller -F C:\Users\18238\Downloads\packTest\byrFileShare-frontend\client\frontend.py&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;2修改js中调用python的代码-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2修改js中调用python的代码-2&#34;&gt;#&lt;/a&gt; 2. 修改 js 中调用 python 的代码&lt;/h5&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;span&gt;s&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; spawn &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;child_process&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; python &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;spawn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;python&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\frontend.exe&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img src=&#34;/2023/09/06/electron-%E6%89%93%E5%8C%85/image-20230906102010240.png&#34; alt=&#34;image-20230906102010240&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;3构建文件并打包electron-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3构建文件并打包electron-2&#34;&gt;#&lt;/a&gt; 3. 构建文件并打包 electron&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;npm install electron --save-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm init&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# package.json&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your-app&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;version&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;1.0.0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;main&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;C:/Users/18238/Downloads/packTest/byrFileShare-frontend/frontend/main.js&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;scripts&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;start&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;electron .&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;package&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;electron-packager ./ test --platform=win32 --arch=x64&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;dependencies&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;electron-packager&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;^17.1.2&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;devDependencies&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;electron&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;^latest-version&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;npm run package&lt;/code&gt;&lt;/p&gt;
</content>
        <category term="开发" />
        <category term="electron" />
        <updated>2023-09-06T00:58:36.000Z</updated>
    </entry>
    <entry>
        <id>https://demoyao100.github.io/2022/08/27/arknights-recruit-calculator/</id>
        <title>arknights recruit calculator(1)</title>
        <link rel="alternate" href="https://demoyao100.github.io/2022/08/27/arknights-recruit-calculator/"/>
        <content type="html">&lt;h1 id=&#34;arknights-recruit-calculator&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#arknights-recruit-calculator&#34;&gt;#&lt;/a&gt; arknights recruit calculator&lt;/h1&gt;
&lt;h5 id=&#34;published-20220827&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#published-20220827&#34;&gt;#&lt;/a&gt; Published: 2022/08/27&lt;/h5&gt;
&lt;h5 id=&#34;updated-20220827&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#updated-20220827&#34;&gt;#&lt;/a&gt; Updated: 2022/08/27&lt;/h5&gt;
&lt;h3 id=&#34;preface&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#preface&#34;&gt;#&lt;/a&gt; PREFACE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I&#39;m pretty addicted to this game named Arknights these days, and there is this module named &amp;quot;公招&amp;quot;(&amp;quot;recruit&amp;quot; in English or whatever). So there is this calculator tools use to help you recruit what you want on website. One day it the website/procedure were been maintained. And I been studying php for couples of days. That&#39;s when I decided to build my own recruit calculator.&lt;/li&gt;
&lt;li&gt;It&#39;s still in testing phase, when it&#39;s complete, I may put it on a website.&lt;/li&gt;
&lt;li&gt;The php function mention below can be consulted on &lt;a href=&#34;https://www.php.net/&#34;&gt;php.net&lt;/a&gt;&lt;br&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;I use html, css to create the User Interface. User can input their tags(5 at most in one post), and program will output the cadres that fits(It will print all combination of the tags that are input).&lt;/p&gt;
&lt;p&gt;The UI designed was easy(not to pursue a perfect, that is), just use a POST method and let the php program receive it. The backend devided the STRING into array, and search in the mysql.&lt;/p&gt;
&lt;p&gt;There is this problem that HOW TO ESTABLISH THE SQL? There isn&#39;t a sql you can find so easily that is ready made. The closest thing I found was a python dictionary. I wasn&#39;t going to wrote the program in python. So I need to transform it into a PHP ARRAY. At first, I tried to use C to read the py dictionary. Obviously it&#39;s too complicate and I should have better choose-- &lt;code&gt;json.dumps()&lt;/code&gt; ,a function in python that can transform a dictionary into a json file. Like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;a=json.dumps(list)&lt;/code&gt; &lt;br&gt;
However, it outputted errors. There I knew json.dumps cann&#39;t dail with Chinese. So I searched for solutions and code down whese:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;import json&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;import numpy as np&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;class Encoder(json.JSONEncoder):&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;    def default(self, obj):&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;        if isinstance(obj, np.ndarray):&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;            return obj.tolist()&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;        elif isinstance(obj, bytes):&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;            return str(obj, encoding=&#39;utf-8&#39;)&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;        return json.JSONEncoder.default(self, obj)&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;a=json.dumps(top_operators_list,cls=Encoder)&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;with open(&#39;tags.txt&#39;,&#39;a&#39;) as file0:&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;    print(a,file=file0)&lt;/code&gt; &lt;br&gt;
It actually still output error. After few hours, I found the dictionary&#39;s array used &amp;quot;{}&amp;quot; instead of &amp;quot;[]&amp;quot;. Correct all of that, it works and I got a json file containing the data I need.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now, I need to put the data in json file into a php array. Luckly, there is this function  &lt;code&gt;json_decode&lt;/code&gt;  that can do the trick. So now the array was prepared.&lt;/p&gt;
&lt;p&gt;To search the cadres, you can combine the array into a string in full permutation.(USING DFS) (TIPS:sort your string each time you search will make the work much easier.)&lt;/p&gt;
&lt;p&gt;Designed the output UI, and it&#39;s all done!&lt;/p&gt;
</content>
        <category term="开发" />
        <updated>2022-08-27T03:31:06.000Z</updated>
    </entry>
</feed>
