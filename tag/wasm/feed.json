{
    "version": "https://jsonfeed.org/version/1",
    "title": "Moyao の小屋 • All posts by \"wasm\" tag",
    "description": "Write down something interesting I met<br />\nFeel free to mail me if you have something wanted to talk about, plz\nmail: &lt;moyaoxue@outlook.com&gt;\n",
    "home_page_url": "https://demoyao100.github.io",
    "items": [
        {
            "id": "https://demoyao100.github.io/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/",
            "url": "https://demoyao100.github.io/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/",
            "title": "京麒ctf2024初赛",
            "date_published": "2024-05-27T01:20:06.000Z",
            "content_html": "<p>PREFACE：r1mao 师傅复健过程带着鼠鼠做的，tql；</p>\n<p>算是第一次调 wasm，感觉挺好（？）</p>\n<span id=\"more\"></span>\n<h3 id=\"前戏\"><a class=\"markdownIt-Anchor\" href=\"#前戏\">#</a> 前戏</h3>\n<h4 id=\"反调试\"><a class=\"markdownIt-Anchor\" href=\"#反调试\">#</a> 反调试</h4>\n<p><a href=\"https://segmentfault.com/a/1190000012359015\">突破前端反调试–阻止页面不断 debugger - 技术足迹 - SegmentFault 思否</a></p>\n<p>可以这样用条件断点直接绕</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527103329524.png\" alt=\"image-20240527103329524\"></p>\n<h4 id=\"同源策略\"><a class=\"markdownIt-Anchor\" href=\"#同源策略\">#</a> 同源策略</h4>\n<p>需要关闭同源策略才能看到 wasm 附件</p>\n<h5 id=\"firefox\"><a class=\"markdownIt-Anchor\" href=\"#firefox\">#</a> firefox：</h5>\n<p>在网址栏中输入”about:config“ 再搜索栏中输入 &quot;security.fileuri.strict_origin_policy&quot;, 并设置为 &quot;false&quot;</p>\n<h5 id=\"chrome\"><a class=\"markdownIt-Anchor\" href=\"#chrome\">#</a> chrome</h5>\n<p>快捷方式写一个：</p>\n<pre><code>&quot;C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe&quot; --allow-file-access-from-files\n</code></pre>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527103631514.png\" alt=\"image-20240527103631514\"></p>\n<p>这里有两个问题：</p>\n<ol>\n<li>firefox 用前面的条件断点策略没办法绕反调（未解决）</li>\n<li>chrome 同源策略不能直接从文件夹里面打开</li>\n</ol>\n<p>解决方法：</p>\n<p>chrome 里面打开 <code>python -m http.server</code> ，即可看到 wasm 文件</p>\n<h4 id=\"调试\"><a class=\"markdownIt-Anchor\" href=\"#调试\">#</a> 调试</h4>\n<p>正确绕过反调以及配好浏览器，这里就可以调试了（暂时没觉得浏览器调试很不妥，先用着～）</p>\n<h4 id=\"静态分析\"><a class=\"markdownIt-Anchor\" href=\"#静态分析\">#</a> 静态分析</h4>\n<p><a href=\"https://github.com/nneonneo/ghidra-wasm-plugin\">nneonneo/ghidra-wasm-plugin: Ghidra Wasm plugin with disassembly and decompilation support (github.com)</a></p>\n<p>ghidra 插件选择好插件的压缩包即可</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/2433096-20221224212843253-2138184082.png\" alt=\"img\"></p>\n<p>这里我们的 index.html 修改为了这样：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content-Type<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html; charset=utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>static/wasm_exec.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">const</span> go <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    WebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">instantiateStreaming</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"static/main.wasm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> go<span class=\"token punctuation\">.</span>importObject<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"flag&#123;this_1s_fake_f_l__Ag&#125;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            go<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            wasm <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            memories <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>wasm<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token function-variable function\">viewDWORD</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint32Array</span><span class=\"token punctuation\">(</span>memories<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token function-variable function\">viewChar</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr<span class=\"token punctuation\">,</span> size <span class=\"token operator\">=</span> <span class=\"token number\">16</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>memories<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">+</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">return</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token function-variable function\">viewHEX</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr<span class=\"token punctuation\">,</span> size <span class=\"token operator\">=</span> <span class=\"token number\">16</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>memories<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">+</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span>x<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token function-variable function\">viewHexCode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr<span class=\"token punctuation\">,</span> size <span class=\"token operator\">=</span> <span class=\"token number\">16</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>memories<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">+</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span><span class=\"token string\">'0x'</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">', '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token function-variable function\">dumpMemory</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr<span class=\"token punctuation\">,</span> size <span class=\"token operator\">=</span> <span class=\"token number\">16</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>memories<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">+</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token function-variable function\">viewString</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr<span class=\"token punctuation\">,</span> size <span class=\"token operator\">=</span> <span class=\"token number\">16</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>memories<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">+</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token keyword\">let</span> max <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                        max <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token keyword\">return</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token function-variable function\">search</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stirng</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token keyword\">const</span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>memories<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token comment\">// vid=35402, 9AAizQZJ</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token comment\">// vid=20268, a3fMpSkB</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token keyword\">const</span> k <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>stirng<span class=\"token punctuation\">,</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span>x<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">match</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">j</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                    <span class=\"token keyword\">return</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>m<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token keyword\">const</span> max <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">10_000_000</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>byteLength <span class=\"token operator\">||</span> m<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> max<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                        console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">check_flag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">var</span> flag <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你输入的 flag 是：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token comment\">// document.getElementById(\"flag\").value = \"aaaflag&#123;this_1s_fake_f_l_A__g&#125;\";</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token string\">\"flag&#123;this_1s_fake_f_l__Ag&#125;\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I have a gift for you!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token comment\">// console.log(console.gift(\"ABCCDDEE\", \"AABBCCDDEE\"));</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">gift</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"f09f8dabf09f8daaf09f8db0f09f8daff09f8e8af09f8daaf09fa59bf09f8da9\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"666c61677b746869735f31735f66616b655f665f6c5f415f5f677d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//rc4 第一个是 key，第二个是 value，都是进去 hex bytes</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"恭喜你，答对了！我想你应该知道 flag 是什么了 ！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"答错了，再想想吧！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flag<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">check_flag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token punctuation\">></span></span>Click<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"正餐\"><a class=\"markdownIt-Anchor\" href=\"#正餐\">#</a> 正餐</h3>\n<h4 id=\"总体流程\"><a class=\"markdownIt-Anchor\" href=\"#总体流程\">#</a> 总体流程</h4>\n<p>静态看一下</p>\n<p>输入一个 fake flag 才会触发逻辑：</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527111010649.png\" alt=\"image-20240527111010649\"></p>\n<p>审一下 js</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string-property property\">\"syscall/js.valueCall\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tsp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">const</span> m <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> <span class=\"token function\">loadSliceOfValues</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">Reflect</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 核心是这句</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tsp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tsp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>这里的 <code>Reflect.apply</code>  是调用 wasm 函数的核心语句，后续对于 js 就是 hook 这里来观察函数调用的逻辑：</p>\n<p>这里 hook 观察函数调用以及传参</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'('</span> <span class=\"token operator\">+</span> args <span class=\"token operator\">+</span> <span class=\"token string\">');\\n'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这样可以观察返回值：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ret:\"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527114316766.png\" alt=\"image-20240527114316766\"></p>\n<pre><code>ƒ eval() &#123; [native code] &#125;\nwasm_exec.js:352 eval(setInterval(function()&#123;debugger;&#125;, 1000););\n\nwasm_exec.js:349 ƒ eval() &#123; [native code] &#125;\nwasm_exec.js:352 eval(setInterval(function()&#123;debugger;&#125;, 1000););\n\nwasm_exec.js:349 ƒ eval() &#123; [native code] &#125;\nwasm_exec.js:352 eval(setInterval(function()&#123;debugger;&#125;, 1000););\n\nwasm_exec.js:349 ƒ _makeFuncWrapper(id) &#123;\n\t\t\tconst go = this;\n\t\t\treturn function () &#123;\n\t\t\t\tconst event = &#123; id: id, this: this, args: arguments &#125;;\n\t\t\t\tgo._pendingEvent = event;\n\t\t\t\tgo._resume();\n\t\t\t\treturn event.result;\n…\nwasm_exec.js:352 _makeFuncWrapper(1);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(2);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(3);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(4);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(5);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(6);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(8);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(9);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(10);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(11);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(12);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(13);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(14);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(15);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(16);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(17);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(18);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(19);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(20);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(21);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(22);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(23);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(24);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(25);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(26);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(27);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(28);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(29);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(30);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(31);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(32);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(33);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(34);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(35);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(36);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(37);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(38);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(39);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(40);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(41);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(42);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(43);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(44);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(45);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(46);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(47);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(48);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(49);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(50);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(51);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(52);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(53);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(54);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(55);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(56);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(57);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(58);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 _makeFuncWrapper(59);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 eval(setInterval(function() &#123; debugger; &#125;, 1000););\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 panda(你输入的 flag 是：);\n\nwasm_exec.js:352 你输入的 flag 是：\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 eval(setInterval(function()&#123;debugger;&#125;, 1000););\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 😘😘❤️😘😘(flag&#123;this_1s_fake_f_l__Ag&#125;);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 segment🍪🥂(flag&#123;this_1s_fake_f_l__Ag&#125;);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 libc🍪🍹(flag&#123;this_1s_fake_f_l__Ag&#125;);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 glibc🎈🎂(flag&#123;this_1s_fake_f_l__Ag&#125;);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 malloc😅🍵(flag&#123;this_1s_fake_f_l__Ag&#125;);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 free🍪🎈(flag&#123;this_1s_fake_f_l__Ag&#125;);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 calloc🍷🎁(flag&#123;this_1s_fake_f_l__Ag&#125;);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 realloc🍭🍺(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 free🍬🍵(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 exit🍸🎁(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 abort🍫🍷(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 signal🍻🍻(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 raise☕🍩(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 setjmp🍺🍶(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 longjmp🍯🍶(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 sigaction🍮🍰(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 sigprocmask🎈🍼(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 sigpending🍻🍾(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 send🍷🍺(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 recv🎊🍼(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 socket🍵🍭(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 bind🎂🍻(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 listen🍾🎁(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 accept🎈🎉(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 connect🎉🍵(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 LoadLibrary🍶🍯(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 GetProcAddress🍯🎁(3ba81be59f57d55daf0ad10ff8300ddc252f299555699fbf0a75);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 VirtualAlloc🍰🍵(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 VirtualFree🎈🎁(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 VirtualProtect😅🍹(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 VirtualQuery🍯🎁(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 CreateThread😅🍼(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 CreateProcess🥂🍪(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 GetThreadContext🎊🍻(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 SetThreadContext🍪🎉(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 ReadProcessMemory🍪🍮(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 mutex🎊🍶(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 semaphore🍭🍼(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 condition🍰🎉(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 pthread🍹🍫(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 fork🍻🍭(10df5f7bce160be17e2d7cf7575b1688e0ded5f2efb3a707c1b1a7926eee1d40ccc856cfb3a86ecd54ceb03b841a679a57263ab7);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 exec🍵🍾(806ce5ec9e156bed790d66949dc1949af31d9c14205f25ba6041fa9b94201469f2b0a7ef3e4cbcb660aa6535cd167f032794c25535875bad03fa96da336d3805ede3540424f81e2a8346bc3f4a4e7e978d3b697ff7d3445abe98210427ab434e1e15fe3d69679ba5);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 pipe🍺🍫(806ce5ec9e156bed790d66949dc1949af31d9c14205f25ba6041fa9b94201469f2b0a7ef3e4cbcb660aa6535cd167f032794c25535875bad03fa96da336d3805ede3540424f81e2a8346bc3f4a4e7e978d3b697ff7d3445abe98210427ab434e1e15fe3d69679ba5);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 dup🍼🍺(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 dup2🍰🍮(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 select☕🎉(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 poll🍮🎁(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 epoll🥛🎊(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 kqueue🍭🍻(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 sigwait🍩🎁(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 jmp_buf🎂🍺(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 sigjmp_buf🥂🎊(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 sigsetjmp🍹🎊(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 siglongjmp🍾🥛(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 stacK_t🎁🍭(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 ucontext_t🍫🍵(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 siginfo_t🍰🍼(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 btoa(5aa21921dda7d9519a012f285b9b9e498f495fb521d4712b0075e47962bc2eed7fd840cba2f2ab48875fe765122d7b9f1a6ed992a07131902e4acde16fc02e1b23cc4d47ed7f65449df940601398c75fc6ddc425e1e81b678423ef284ad2a3d45b7f376d0067c820116fbb7ff9b30c9dad258352b00d7a1b4ca60ce7d4293898bc31a9131d7d7cb7efcadfe3d0e7b11f962917508987cc9b6511bb304f9a24e2c28ab4ee8bc4ccbbbaf8e3f4eb799dcca5bfdbc6943aeb4d69ad49f176fb87d56aae14de51901873d15ea0cb78ecbb66);\n\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 panda(flag&#123;this_1s_fake_f_l__Ag&#125;);\n\nwasm_exec.js:352 flag&#123;this_1s_fake_f_l__Ag&#125;\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 panda(I have a gift for you!);\n\nwasm_exec.js:352 I have a gift for you!\nwasm_exec.js:349 &lt;function&gt;\nwasm_exec.js:352 panda(45d15f24840006bd341478b36c084287e4e783cce7ddd63ef8eee9);\n\nwasm_exec.js:352 45d15f24840006bd341478b36c084287e4e783cce7ddd63ef8eee9\n</code></pre>\n<p>以及 gift 函数，测试会发现它实际上就是一个 rc4，算是暗示你加密只有 rc4</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527114549565.png\" alt=\"image-20240527114549565\" style=\"zoom:50%;\"><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527114542798.png\" alt=\"image-20240527114542798\" style=\"zoom:50%;\"></p>\n<h4 id=\"加密\"><a class=\"markdownIt-Anchor\" href=\"#加密\">#</a> 加密</h4>\n<p>我们会看到这样的函数，rc4，做了 ollvm，调试发现这里是核心的加密段</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527115425554.png\" alt=\"image-20240527115425554\"></p>\n<p>好在逻辑不是很复杂，可以很快定位到核心加密的 xor：</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527115554093.png\" alt=\"image-20240527115554093\"></p>\n<p>key 的话，makeslice 的地方很可疑，以及下面的 %</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527120646185.png\" alt=\"image-20240527120646185\"></p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527121414644.png\" alt=\"image-20240527121414644\"></p>\n<p>可以调试看看，发现不对：</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527122315547.png\" alt=\"image-20240527122315547\"></p>\n<p>这里才是真的秘钥（可以测试出来，ollvm 跟起来还是有些难顶…）</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527122516394.png\" alt=\"image-20240527122516394\"></p>\n<p>打上条件断点：</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527122611991.png\" alt=\"image-20240527122611991\"></p>\n<p>但会发现这里触发次数太多，那我们换一个地方打：</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527123215824.png\" alt=\"image-20240527123215824\"></p>\n<p>这样就拿到了所有的 key</p>\n<h4 id=\"密文\"><a class=\"markdownIt-Anchor\" href=\"#密文\">#</a> 密文</h4>\n<p>上面的测试过程都是复现时候捋出来的思路，并不是从零开始的调试</p>\n<p>实际上直接调试过一遍会看到函数调用栈，一个一个 func 走，最后一个是 main.remalloc.func1，里面调用了 main.malloc</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527124531030.png\" alt=\"image-20240527124531030\"></p>\n<p>这里如果绕过弯来，会知道 wasm 是没有 malloc 这种底层操作的，包括前面会看到其他几乎所有函数的命名，都是混淆成经典的系统函数的命名了</p>\n<p>malloc 里面有我们非常想要看到的 memequal 了：</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527124750476.png\" alt=\"image-20240527124750476\"></p>\n<p>注意这里的条件：（即我们的输入长度需要控制，他给的输入是不行的，需要修改为自己的输入）</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527130843887.png\" alt=\"image-20240527130843887\"></p>\n<p>比较的位置，观察我们的输入长度是否满足要求：</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527131058774.png\" alt=\"image-20240527131058774\"></p>\n<p>这样的 flag 是可以的</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527131143073.png\" alt=\"image-20240527131143073\"></p>\n<p>点两次进里面，它就是我们想要的 check 结构：</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527124812434.png\" alt=\"image-20240527124812434\"></p>\n<p>前面的 log 中我们会发现几次加密最后返回的是一个 base64，这里我们也可以调试找到 base64：</p>\n<p><img src=\"/%E4%BA%AC%E9%BA%92ctf2024%E5%88%9D%E8%B5%9B/image-20240527131243913.png\" alt=\"image-20240527131243913\"></p>\n<p>这里的 var1 即为密文</p>\n<p>解密脚本如下：</p>\n<p><a href=\"https://cyberchef.org/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true,false)RC4(%7B'option':'Hex','string':'f09f8dbef09fa59bf09f8e81f09f8da9f09f8e89f09f8dadf09fa59bf09f8dbc'%7D,'Hex','Latin1')RC4(%7B'option':'Hex','string':'f09f8dacf09f8daaf09f8dbbf09f8daef09f8dbee29895f09f9885f09f8db0'%7D,'Hex','Latin1')RC4(%7B'option':'Hex','string':'f09f8dabf09f8daaf09f8db0f09f8daff09f8e8af09f8daaf09fa59bf09f8da9'%7D,'Hex','Latin1')RC4(%7B'option':'Hex','string':'f09f8daef09f8db6f09f8dbaf09f8db9f09f8e89f09f8dacf09f8dbaf09f8daf'%7D,'Hex','Latin1')&amp;input=TldGaE1qRTVNakZrWkdFM1pEazFNVGxoTURFeVpqSTROV0k1WWpsbE5EazRaalE1TldaaU5USXhaRFEzTVRKaU1EQTNOV1UwTnprMk1tSmpNbVZsWkRkbVpEZzBNR05pWVRKbU1tRmlORGc0TnpWbVpUY3pZVEV5TW1RM1ltTTNNV0UyWldRNU9UQmhNRGMyTXpFNU5qSmxOR0ZqWkdVeU5tRmpZekppTVRFeU0yTmlOR1EwWm1WaE1tRTJNakV4T1dSbU9UUXdOakV4TXprNVl6QTFabU0yWkdSak16Y3haVEZsT0RGaU5qUTROREl6WldZeVlqUmhaRFZoTXpnME5XSTNaak0zTm1Vd01EWTNZMlF5TnpFeE5tWmlZamRrWm1ObE1EQmpPV0ZoWkRJMU9ETTFObUl3TUdFM1lURmxOR05oTmpCalpUVmtORGMxTXpnNU9XSmpNekZoT1RFMU1XUTNaRGM1WlRWbFptTmhaR1psTTJRMVlqWmlNVEZoT1RZeU9URTNOVE00T1RnM1kyTmpaRFkxTVRaaVpUWmpOR1k1WVRJMFpUQmpNamhoWWpSaU5UaGlZelJqWTJKbVltRm1PR1V6WmpWbFlqYzVPV1JqWTJFMVltWmtZbU0zT1RRellXVmlOR1EyT1dGa05EbG1NVGN6WmpFNE4yUXlObUZoWlRFMFpHRTFNVGt3TVRnM01XUXhOV1ZoTUdOaU56aGxZMkppTmpZPQ\">From Base64, RC4, RC4, RC4, RC4 - CyberChef</a></p>\n",
            "tags": [
                "re",
                "wasm"
            ]
        }
    ]
}