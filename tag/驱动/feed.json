{
    "version": "https://jsonfeed.org/version/1",
    "title": "Moyao の小屋 • All posts by \"驱动\" tag",
    "description": "Write down something interesting I met<br />\nFeel free to mail me if you have something wanted to talk about, plz\nmail: &lt;moyaoxue@outlook.com&gt;\n",
    "home_page_url": "https://demoyao100.github.io",
    "items": [
        {
            "id": "https://demoyao100.github.io/2024/04/02/driver%E5%A4%8D%E7%8E%B0-%E9%93%81%E4%B8%892024/",
            "url": "https://demoyao100.github.io/2024/04/02/driver%E5%A4%8D%E7%8E%B0-%E9%93%81%E4%B8%892024/",
            "title": "driver复现(铁三2024)",
            "date_published": "2024-04-02T01:43:54.000Z",
            "content_html": "<h6 id=\"preface之前看了不少驱动开发然后发现这题调不起来静态解不出来赛后速通unicorn写了个模拟看看\"><a class=\"anchor\" href=\"#preface之前看了不少驱动开发然后发现这题调不起来静态解不出来赛后速通unicorn写了个模拟看看\">#</a> PREFACE：之前看了不少驱动开发，然后发现这题调不起来，静态解不出来，赛后速通 unicorn 写了个模拟看看</h6>\n<p><span id=\"more\"></span></p>\n<p>首先，可以看到文件的前 0x400 字符是文件头信息，先 rebase+0x400</p>\n<p>这里直接贴一个 unicorn 脚本，可以看到 tea 的操作，前后转化了一次端序然后标准 TEA， which is WRONG：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> unicorn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> unicorn<span class=\"token punctuation\">.</span>x86_const <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> struct</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> capstone <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>REAL_BASE_OFFSET <span class=\"token operator\">=</span> <span class=\"token number\">0x400</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>md <span class=\"token operator\">=</span> Cs<span class=\"token punctuation\">(</span>CS_ARCH_X86<span class=\"token punctuation\">,</span> CS_MODE_64<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">hookDbgPrint</span><span class=\"token punctuation\">(</span>mu<span class=\"token punctuation\">,</span>address<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">,</span>user_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    code <span class=\"token operator\">=</span> mu<span class=\"token punctuation\">.</span>mem_read<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># for instruction in md.disasm(code, address):</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">#     print(\"0x%x: %s %s\" % (instruction.address, instruction.mnemonic, instruction.op_str))</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    DbgList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x1400015C9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token keyword\">in</span> DbgList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        mu<span class=\"token punctuation\">.</span>reg_write<span class=\"token punctuation\">(</span>UC_X86_REG_RIP<span class=\"token punctuation\">,</span> address<span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"hook: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>address<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x140001940</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        TEAoutput <span class=\"token operator\">=</span> mu<span class=\"token punctuation\">.</span>mem_read<span class=\"token punctuation\">(</span>mu<span class=\"token punctuation\">.</span>reg_read<span class=\"token punctuation\">(</span>UC_X86_REG_RAX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x1400017DB</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\"># mu.mem_write(mu.reg_read(UC_X86_REG_RSP) + 40, b'12345678')</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        TEAinput <span class=\"token operator\">=</span> mu<span class=\"token punctuation\">.</span>mem_read<span class=\"token punctuation\">(</span>mu<span class=\"token punctuation\">.</span>reg_read<span class=\"token punctuation\">(</span>UC_X86_REG_RSP<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tea in: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>TEAinput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x14000166D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        mu<span class=\"token punctuation\">.</span>mem_write<span class=\"token punctuation\">(</span>mu<span class=\"token punctuation\">.</span>reg_read<span class=\"token punctuation\">(</span>UC_X86_REG_RSP<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">144</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'12345678'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x14000182D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        TEAoutput <span class=\"token operator\">=</span> mu<span class=\"token punctuation\">.</span>mem_read<span class=\"token punctuation\">(</span>mu<span class=\"token punctuation\">.</span>reg_read<span class=\"token punctuation\">(</span>UC_X86_REG_RSP<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tea out: \"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> TEAoutput<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x14000197A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        ENCoutput <span class=\"token operator\">=</span> mu<span class=\"token punctuation\">.</span>mem_read<span class=\"token punctuation\">(</span>mu<span class=\"token punctuation\">.</span>reg_read<span class=\"token punctuation\">(</span>UC_X86_REG_RSP<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enc out:\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> ENCoutput<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">hookEND</span><span class=\"token punctuation\">(</span>mu <span class=\"token punctuation\">:</span> Uc<span class=\"token punctuation\">,</span>address<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">,</span>user_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>address <span class=\"token operator\">==</span> <span class=\"token number\">0x14000197A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token comment\"># exit(0)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        mu<span class=\"token punctuation\">.</span>emu_stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>mu <span class=\"token operator\">=</span> Uc <span class=\"token punctuation\">(</span>UC_ARCH_X86<span class=\"token punctuation\">,</span> UC_MODE_64<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>BASE <span class=\"token operator\">=</span> <span class=\"token number\">0x140001000</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>STACK_ADDR <span class=\"token operator\">=</span> <span class=\"token number\">0x1000</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>STACK_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>mu<span class=\"token punctuation\">.</span>mem_map<span class=\"token punctuation\">(</span>BASE<span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>mu<span class=\"token punctuation\">.</span>mem_map<span class=\"token punctuation\">(</span>STACK_ADDR<span class=\"token punctuation\">,</span> STACK_SIZE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>mu<span class=\"token punctuation\">.</span>mem_write<span class=\"token punctuation\">(</span>BASE<span class=\"token punctuation\">,</span> read<span class=\"token punctuation\">(</span><span class=\"token string\">\"./ez_driver.sys\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>mu<span class=\"token punctuation\">.</span>reg_write<span class=\"token punctuation\">(</span>UC_X86_REG_RBP<span class=\"token punctuation\">,</span> STACK_ADDR <span class=\"token operator\">+</span> STACK_SIZE <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>mu<span class=\"token punctuation\">.</span>reg_write<span class=\"token punctuation\">(</span>UC_X86_REG_RSP<span class=\"token punctuation\">,</span> STACK_ADDR <span class=\"token operator\">+</span> STACK_SIZE <span class=\"token operator\">//</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>mu<span class=\"token punctuation\">.</span>hook_add<span class=\"token punctuation\">(</span>UC_HOOK_CODE<span class=\"token punctuation\">,</span>hookDbgPrint<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>mu<span class=\"token punctuation\">.</span>hook_add<span class=\"token punctuation\">(</span>UC_HOOK_CODE<span class=\"token punctuation\">,</span>hookEND<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>mu<span class=\"token punctuation\">.</span>emu_start<span class=\"token punctuation\">(</span><span class=\"token number\">0x14000161D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x140004000</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>另一个加密就是对称的，其实看了就知道只做了 xor，重写一遍就行：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>BYTE byte_140004000<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCA</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>__int64 __fastcall <span class=\"token function\">sub_140001A70</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>input<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+4h] [rbp-44h]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+8h] [rbp-40h]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> input_xor<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-3Ch] BYREF</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p_input_xor<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-38h]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+18h] [rbp-30h]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">char</span> v7<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-28h]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x1A</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x35</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x6D</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x94</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0xC5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x4B</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x21</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x35</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0xC1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x92</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tv7<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a2 <span class=\"token operator\">^</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tp_input_xor <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>input_xor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\tinput_xor <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>input <span class=\"token operator\">^</span> a2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span>p_input_xor<span class=\"token operator\">++</span> <span class=\"token operator\">^=</span> v7<span class=\"token punctuation\">[</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>i <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>j <span class=\"token operator\">&lt;&lt;</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> j <span class=\"token operator\">|</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\tv6 <span class=\"token operator\">=</span> <span class=\"token operator\">~</span>a2 <span class=\"token operator\">^</span> input_xor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token operator\">*</span>input<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> v6<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">int</span> v8 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tBYTE<span class=\"token operator\">*</span> v17 <span class=\"token operator\">=</span> byte_140004000<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token function\">sub_140001A70</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v17<span class=\"token punctuation\">,</span> v8<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\tv17 <span class=\"token operator\">+=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>v8 <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> c <span class=\"token operator\">:</span> byte_140004000<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d,\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后发现模拟结果和解密明明对得上，但是出不来，结论是藏东西了或者改东西了，毕竟没有真起起来调，然后发现前面有这个 init，寻找特定的结构 shr ecx, 0x5，把 5 改成 6</p>\n<p><img src=\"/2024/04/02/driver%E5%A4%8D%E7%8E%B0-%E9%93%81%E4%B8%892024/image.png\" alt=\"image\"></p>\n<p>土里刨一个脚本出来：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> <span class=\"token operator\">*</span>v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> <span class=\"token operator\">*</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">uint32_t</span> l <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0x9E3779B9</span> <span class=\"token operator\">*</span> <span class=\"token number\">33</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">33</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tr <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>></span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>l <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tsum <span class=\"token operator\">+=</span> <span class=\"token number\">0x61C88647</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tl <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>sum <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">>></span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> l<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">uint32_t</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// 加解密对称！！！</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">//\tuint8_t enc[] = &#123;0x72, 0x62, 0xAE, 0x34, 0x52, 0x9A, 0x06, 0xAF, </span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//\t\t\t\t\t\t\t0x72, 0xFB, 0x40, 0xC0, 0x10, 0x35, 0xBD, 0xD4,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">//\t\t\t\t\t\t\t0x22, 0xA5, 0x93, 0x07, 0xB4, 0xFB, 0xB5, 0xCA,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//\t\t\t\t\t\t\t0xE8, 0x01, 0xF5, 0xAE, 0xED, 0x7B, 0xB8, 0x6A&#125;;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">uint8_t</span> enc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">216</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">158</span><span class=\"token punctuation\">,</span><span class=\"token number\">244</span><span class=\"token punctuation\">,</span><span class=\"token number\">59</span><span class=\"token punctuation\">,</span><span class=\"token number\">162</span><span class=\"token punctuation\">,</span><span class=\"token number\">215</span><span class=\"token punctuation\">,</span><span class=\"token number\">207</span><span class=\"token punctuation\">,</span><span class=\"token number\">72</span><span class=\"token punctuation\">,</span><span class=\"token number\">43</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">160</span><span class=\"token punctuation\">,</span><span class=\"token number\">195</span><span class=\"token punctuation\">,</span><span class=\"token number\">93</span><span class=\"token punctuation\">,</span><span class=\"token number\">221</span><span class=\"token punctuation\">,</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span><span class=\"token number\">137</span><span class=\"token punctuation\">,</span><span class=\"token number\">205</span><span class=\"token punctuation\">,</span><span class=\"token number\">162</span><span class=\"token punctuation\">,</span><span class=\"token number\">199</span><span class=\"token punctuation\">,</span><span class=\"token number\">220</span><span class=\"token punctuation\">,</span><span class=\"token number\">195</span><span class=\"token punctuation\">,</span><span class=\"token number\">101</span><span class=\"token punctuation\">,</span><span class=\"token number\">170</span><span class=\"token punctuation\">,</span><span class=\"token number\">211</span><span class=\"token punctuation\">,</span><span class=\"token number\">209</span><span class=\"token punctuation\">,</span><span class=\"token number\">149</span><span class=\"token punctuation\">,</span><span class=\"token number\">206</span><span class=\"token punctuation\">,</span><span class=\"token number\">63</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">217</span><span class=\"token punctuation\">,</span><span class=\"token number\">234</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tkey<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x1A2B</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tkey<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x3A4D</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tkey<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x5E6F</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tkey<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xAA33</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">32</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">+=</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token keyword\">uint32_t</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\tp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">__builtin_bswap32</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\tp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">__builtin_bswap32</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>p<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\tp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">__builtin_bswap32</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">__builtin_bswap32</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">32</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span>enc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "re",
                "驱动"
            ]
        },
        {
            "id": "https://demoyao100.github.io/2024/01/15/%E5%88%9D%E6%8E%A2%E9%A9%B1%E5%8A%A8/",
            "url": "https://demoyao100.github.io/2024/01/15/%E5%88%9D%E6%8E%A2%E9%A9%B1%E5%8A%A8/",
            "title": "初探驱动",
            "date_published": "2024-01-15T02:19:07.000Z",
            "content_html": "<h6 id=\"preface偷点资料入个门吧性质应该属于随便看看\"><a class=\"anchor\" href=\"#preface偷点资料入个门吧性质应该属于随便看看\">#</a> PREFACE：偷点资料入个门吧，性质应该属于随便看看</h6>\n<p><span id=\"more\"></span></p>\n",
            "tags": [
                "re",
                "驱动"
            ]
        }
    ]
}